Description: CVE-2015-5602: sudoedit path restriction bypass using symlinks
 Files regenerated for changes in CVE-2015-5602-1.patch
Bug: https://bugzilla.sudo.ws/show_bug.cgi?id=707
Bug-Debian: https://bugs.debian.org/804149
Author: Ben Hutchings <ben@decadent.org.uk>
Forwarded: not-needed

--- a/def_data.c
+++ b/def_data.c
@@ -331,6 +331,10 @@ struct sudo_defs_types sudo_defs_table[]
 	"Always run commands in a pseudo-tty",
 	NULL,
     }, {
+	"sudoedit_follow", T_FLAG,
+	"Follow symbolic links when editing files with sudoedit",
+	NULL,
+    }, {
 	NULL, 0, NULL
     }
 };
--- a/def_data.h
+++ b/def_data.h
@@ -152,6 +152,8 @@
 #define I_COMPRESS_IO           75
 #define def_use_pty             (sudo_defs_table[76].sd_un.flag)
 #define I_USE_PTY               76
+#define def_sudoedit_follow     (sudo_defs_table[77].sd_un.flag)
+#define I_SUDOEDIT_FOLLOW       77
 
 enum def_tupple {
 	never,
--- a/gram.c
+++ b/gram.c
@@ -1,15 +1,75 @@
-#include <stdlib.h>
-#include <string.h>
-#define YYBYACC 1
-#define YYMAJOR 1
-#define YYMINOR 9
-#define YYLEX yylex()
-#define YYEMPTY -1
-#define yyclearin (yychar=(YYEMPTY))
-#define yyerrok (yyerrflag=0)
-#define YYRECOVERING() (yyerrflag!=0)
-#define YYPREFIX "yy"
-#line 2 "gram.y"
+
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* As a special exception, you may create a larger work that contains
+   part or all of the Bison parser skeleton and distribute that work
+   under terms of your choice, so long as that work isn't itself a
+   parser generator using the skeleton or a modified version thereof
+   as a parser skeleton.  Alternatively, if you modify or redistribute
+   the parser skeleton itself, you may (at your option) remove this
+   special exception, which will cause the skeleton and the resulting
+   Bison output files to be licensed under the GNU General Public
+   License without this special exception.
+   
+   This special exception was added by the Free Software Foundation in
+   version 2.2 of Bison.  */
+
+/* C LALR(1) parser skeleton written by Richard Stallman, by
+   simplifying the original so-called "semantic" parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Bison version.  */
+#define YYBISON_VERSION "2.4.1"
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Push parsers.  */
+#define YYPUSH 0
+
+/* Pull parsers.  */
+#define YYPULL 1
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+
+
+/* Copy the first part of user declarations.  */
+
+/* Line 189 of yacc.c  */
+#line 1 "gram.y"
+
 /*
  * Copyright (c) 1996, 1998-2005, 2007-2010
  *	Todd C. Miller <Todd.Miller@courtesan.com>
@@ -118,10 +178,116 @@ yyerror(s)
     }
     parse_error = TRUE;
 }
+
+
+/* Line 189 of yacc.c  */
+#line 185 "y.tab.c"
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     COMMAND = 258,
+     ALIAS = 259,
+     DEFVAR = 260,
+     NTWKADDR = 261,
+     NETGROUP = 262,
+     USERGROUP = 263,
+     WORD = 264,
+     DEFAULTS = 265,
+     DEFAULTS_HOST = 266,
+     DEFAULTS_USER = 267,
+     DEFAULTS_RUNAS = 268,
+     DEFAULTS_CMND = 269,
+     NOPASSWD = 270,
+     PASSWD = 271,
+     NOEXEC = 272,
+     EXEC = 273,
+     SETENV = 274,
+     NOSETENV = 275,
+     LOG_INPUT = 276,
+     NOLOG_INPUT = 277,
+     LOG_OUTPUT = 278,
+     NOLOG_OUTPUT = 279,
+     FOLLOW = 280,
+     NOFOLLOW = 281,
+     ALL = 282,
+     COMMENT = 283,
+     HOSTALIAS = 284,
+     CMNDALIAS = 285,
+     USERALIAS = 286,
+     RUNASALIAS = 287,
+     ERROR = 288,
+     TYPE = 289,
+     ROLE = 290
+   };
+#endif
+/* Tokens.  */
+#define COMMAND 258
+#define ALIAS 259
+#define DEFVAR 260
+#define NTWKADDR 261
+#define NETGROUP 262
+#define USERGROUP 263
+#define WORD 264
+#define DEFAULTS 265
+#define DEFAULTS_HOST 266
+#define DEFAULTS_USER 267
+#define DEFAULTS_RUNAS 268
+#define DEFAULTS_CMND 269
+#define NOPASSWD 270
+#define PASSWD 271
+#define NOEXEC 272
+#define EXEC 273
+#define SETENV 274
+#define NOSETENV 275
+#define LOG_INPUT 276
+#define NOLOG_INPUT 277
+#define LOG_OUTPUT 278
+#define NOLOG_OUTPUT 279
+#define FOLLOW 280
+#define NOFOLLOW 281
+#define ALL 282
+#define COMMENT 283
+#define HOSTALIAS 284
+#define CMNDALIAS 285
+#define USERALIAS 286
+#define RUNASALIAS 287
+#define ERROR 288
+#define TYPE 289
+#define ROLE 290
+
+
+
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+{
+
+/* Line 214 of yacc.c  */
 #line 112 "gram.y"
-#ifndef YYSTYPE_DEFINED
-#define YYSTYPE_DEFINED
-typedef union {
+
     struct cmndspec *cmndspec;
     struct defaults *defaults;
     struct member *member;
@@ -132,507 +298,2402 @@ typedef union {
     struct selinux_info seinfo;
     char *string;
     int tok;
+
+
+
+/* Line 214 of yacc.c  */
+#line 306 "y.tab.c"
 } YYSTYPE;
-#endif /* YYSTYPE_DEFINED */
-#line 138 "y.tab.c"
-#define COMMAND 257
-#define ALIAS 258
-#define DEFVAR 259
-#define NTWKADDR 260
-#define NETGROUP 261
-#define USERGROUP 262
-#define WORD 263
-#define DEFAULTS 264
-#define DEFAULTS_HOST 265
-#define DEFAULTS_USER 266
-#define DEFAULTS_RUNAS 267
-#define DEFAULTS_CMND 268
-#define NOPASSWD 269
-#define PASSWD 270
-#define NOEXEC 271
-#define EXEC 272
-#define SETENV 273
-#define NOSETENV 274
-#define LOG_INPUT 275
-#define NOLOG_INPUT 276
-#define LOG_OUTPUT 277
-#define NOLOG_OUTPUT 278
-#define ALL 279
-#define COMMENT 280
-#define HOSTALIAS 281
-#define CMNDALIAS 282
-#define USERALIAS 283
-#define RUNASALIAS 284
-#define ERROR 285
-#define TYPE 286
-#define ROLE 287
-#define YYERRCODE 256
-#if defined(__cplusplus) || defined(__STDC__)
-const short yylhs[] =
-#else
-short yylhs[] =
-#endif
-	{                                        -1,
-    0,    0,   25,   25,   26,   26,   26,   26,   26,   26,
-   26,   26,   26,   26,   26,   26,    4,    4,    3,    3,
-    3,    3,    3,   20,   20,   19,   10,   10,    8,    8,
-    8,    8,    8,    2,    2,    1,    6,    6,   23,   24,
-   22,   22,   22,   22,   22,   17,   17,   18,   18,   18,
-   21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
-   21,    5,    5,    5,   28,   28,   31,    9,    9,   29,
-   29,   32,    7,    7,   30,   30,   33,   27,   27,   34,
-   13,   13,   11,   11,   12,   12,   12,   12,   12,   16,
-   16,   14,   14,   15,   15,   15,
-};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yylen[] =
+# define YYSTYPE_IS_TRIVIAL 1
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+#endif
+
+
+/* Copy the second part of user declarations.  */
+
+
+/* Line 264 of yacc.c  */
+#line 318 "y.tab.c"
+
+#ifdef short
+# undef short
+#endif
+
+#ifdef YYTYPE_UINT8
+typedef YYTYPE_UINT8 yytype_uint8;
 #else
-short yylen[] =
+typedef unsigned char yytype_uint8;
 #endif
-	{                                         2,
-    0,    1,    1,    2,    1,    2,    2,    2,    2,    2,
-    2,    2,    3,    3,    3,    3,    1,    3,    1,    2,
-    3,    3,    3,    1,    3,    3,    1,    2,    1,    1,
-    1,    1,    1,    1,    3,    4,    1,    2,    3,    3,
-    0,    1,    1,    2,    2,    0,    3,    1,    3,    2,
-    0,    2,    2,    2,    2,    2,    2,    2,    2,    2,
-    2,    1,    1,    1,    1,    3,    3,    1,    3,    1,
-    3,    3,    1,    3,    1,    3,    3,    1,    3,    3,
-    1,    3,    1,    2,    1,    1,    1,    1,    1,    1,
-    3,    1,    2,    1,    1,    1,
-};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yydefred[] =
+
+#ifdef YYTYPE_INT8
+typedef YYTYPE_INT8 yytype_int8;
+#elif (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+typedef signed char yytype_int8;
 #else
-short yydefred[] =
+typedef short int yytype_int8;
 #endif
-	{                                      0,
-    0,   85,   87,   88,   89,    0,    0,    0,    0,    0,
-   86,    5,    0,    0,    0,    0,    0,    0,   81,   83,
-    0,    0,    3,    6,    0,    0,   17,    0,   29,   32,
-   31,   33,   30,    0,   27,    0,   68,    0,    0,   64,
-   63,   62,    0,   37,   73,    0,    0,    0,   65,    0,
-    0,   70,    0,    0,   78,    0,    0,   75,   84,    0,
-    0,   24,    0,    4,    0,    0,    0,   20,    0,   28,
-    0,    0,    0,    0,   38,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   82,    0,    0,   21,   22,
-   23,   18,   69,   74,    0,   66,    0,   71,    0,   79,
-    0,   76,    0,   34,    0,    0,   25,    0,    0,    0,
-    0,    0,    0,   51,    0,    0,   94,   96,   95,    0,
-   90,   92,    0,    0,   47,   35,    0,    0,    0,   44,
-   45,   93,    0,    0,   40,   39,   52,   53,   54,   55,
-   56,   57,   58,   59,   60,   61,   36,   91,
-};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yydgoto[] =
+
+#ifdef YYTYPE_UINT16
+typedef YYTYPE_UINT16 yytype_uint16;
 #else
-short yydgoto[] =
+typedef unsigned short int yytype_uint16;
 #endif
-	{                                      18,
-  104,  105,   27,   28,   44,   45,   46,   35,   61,   37,
-   19,   20,   21,  121,  122,  123,  106,  110,   62,   63,
-  129,  114,  115,  116,   22,   23,   54,   48,   51,   57,
-   49,   52,   58,   55,
-};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yysindex[] =
+
+#ifdef YYTYPE_INT16
+typedef YYTYPE_INT16 yytype_int16;
+#else
+typedef short int yytype_int16;
+#endif
+
+#ifndef YYSIZE_T
+# ifdef __SIZE_TYPE__
+#  define YYSIZE_T __SIZE_TYPE__
+# elif defined size_t
+#  define YYSIZE_T size_t
+# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYSIZE_T size_t
+# else
+#  define YYSIZE_T unsigned int
+# endif
+#endif
+
+#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
+
+#ifndef YY_
+# if YYENABLE_NLS
+#  if ENABLE_NLS
+#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
+#  endif
+# endif
+# ifndef YY_
+#  define YY_(msgid) msgid
+# endif
+#endif
+
+/* Suppress unused-variable warnings by "using" E.  */
+#if ! defined lint || defined __GNUC__
+# define YYUSE(e) ((void) (e))
+#else
+# define YYUSE(e) /* empty */
+#endif
+
+/* Identity function, used to suppress warnings about constant conditions.  */
+#ifndef lint
+# define YYID(n) (n)
 #else
-short yysindex[] =
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static int
+YYID (int yyi)
+#else
+static int
+YYID (yyi)
+    int yyi;
+#endif
+{
+  return yyi;
+}
 #endif
-	{                                    475,
- -270,    0,    0,    0,    0,  -29,  567,  594,  594,   -2,
-    0,    0, -240, -222, -216, -212, -241,    0,    0,    0,
-  -25,  475,    0,    0,  -10, -207,    0,    9,    0,    0,
-    0,    0,    0, -235,    0,  -33,    0,  -31,  -31,    0,
-    0,    0, -242,    0,    0,  -30,   -7,    3,    0,   -6,
-    4,    0,   -5,    6,    0,   -1,    8,    0,    0,  594,
-  -20,    0,   10,    0, -205, -196, -194,    0,  -29,    0,
-  567,    9,    9,    9,    0,   -2,    9,  567, -240,   -2,
- -222,  594, -216,  594, -212,    0,   31,  567,    0,    0,
-    0,    0,    0,    0,   26,    0,   28,    0,   29,    0,
-   29,    0,  541,    0,   32, -247,    0,   86,  -15,   33,
-   31,   14,   16,    0, -208, -204,    0,    0,    0, -231,
-    0,    0,   38,   86,    0,    0, -179, -178,  491,    0,
-    0,    0,   86,   38,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yyrindex[] =
-#else
-short yyrindex[] =
-#endif
-	{                                     87,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,   90,    0,    0,    1,    0,    0,  177,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,  207,    0,    0,
-  237,    0,    0,  271,    0,    0,  300,    0,    0,    0,
-    0,    0,  329,    0,    0,    0,    0,    0,    0,    0,
-    0,  358,  387,  417,    0,    0,  446,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,  -26,    0,    0,    0,
-    0,    0,    0,    0,   30,    0,   59,    0,   89,    0,
-  118,    0,    0,    0,  148,  514,    0,    0,   45,    0,
-  -26,    0,    0,    0,  537,  565,    0,    0,    0,    0,
-    0,    0,   50,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,   52,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,};
-#if defined(__cplusplus) || defined(__STDC__)
-const short yygindex[] =
-#else
-short yygindex[] =
-#endif
-	{                                      0,
-  -17,    0,   27,   11,   54,  -64,   15,   64,    2,   34,
-   39,   84,   -3,  -27,  -18,  -21,    0,    0,   19,    0,
-    0,    0,  -12,   -4,    0,   88,    0,    0,    0,    0,
-   35,   40,   23,   37,
+
+#if ! defined yyoverflow || YYERROR_VERBOSE
+
+/* The parser invokes alloca or malloc; define the necessary symbols.  */
+
+# ifdef YYSTACK_USE_ALLOCA
+#  if YYSTACK_USE_ALLOCA
+#   ifdef __GNUC__
+#    define YYSTACK_ALLOC __builtin_alloca
+#   elif defined __BUILTIN_VA_ARG_INCR
+#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
+#   elif defined _AIX
+#    define YYSTACK_ALLOC __alloca
+#   elif defined _MSC_VER
+#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
+#    define alloca _alloca
+#   else
+#    define YYSTACK_ALLOC alloca
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
+#     endif
+#    endif
+#   endif
+#  endif
+# endif
+
+# ifdef YYSTACK_ALLOC
+   /* Pacify GCC's `empty if-body' warning.  */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+    /* The OS might guarantee only one guard page at the bottom of the stack,
+       and a page size can be as small as 4096 bytes.  So we cannot safely
+       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
+       to allow for a few compiler-allocated temporary stack slots.  */
+#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
+#  endif
+# else
+#  define YYSTACK_ALLOC YYMALLOC
+#  define YYSTACK_FREE YYFREE
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
+#  endif
+#  if (defined __cplusplus && ! defined _STDLIB_H \
+       && ! ((defined YYMALLOC || defined malloc) \
+	     && (defined YYFREE || defined free)))
+#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
+#   endif
+#  endif
+#  ifndef YYMALLOC
+#   define YYMALLOC malloc
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+#  ifndef YYFREE
+#   define YYFREE free
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void free (void *); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+# endif
+#endif /* ! defined yyoverflow || YYERROR_VERBOSE */
+
+
+#if (! defined yyoverflow \
+     && (! defined __cplusplus \
+	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
+      + YYSTACK_GAP_MAXIMUM)
+
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined __GNUC__ && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (YYID (0))
+#  endif
+# endif
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
+
+/* YYFINAL -- State number of the termination state.  */
+#define YYFINAL  60
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   194
+
+/* YYNTOKENS -- Number of terminals.  */
+#define YYNTOKENS  44
+/* YYNNTS -- Number of nonterminals.  */
+#define YYNNTS  36
+/* YYNRULES -- Number of rules.  */
+#define YYNRULES  99
+/* YYNRULES -- Number of states.  */
+#define YYNSTATES  152
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   290
+
+#define YYTRANSLATE(YYX)						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const yytype_uint8 yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,    36,     2,     2,     2,     2,     2,     2,
+      39,    40,     2,    37,    35,    38,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    33,     2,
+       2,    34,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    41,    42,
+      43
 };
-#define YYTABLESIZE 873
-#if defined(__cplusplus) || defined(__STDC__)
-const short yytable[] =
-#else
-short yytable[] =
-#endif
-	{                                      26,
-   19,   26,   26,   26,   38,   39,   46,   34,   36,   24,
-   71,   94,   60,   76,   40,   41,    2,   47,   60,    3,
-    4,    5,   29,   71,   30,   31,  117,   32,   60,   67,
-   43,  118,   66,   19,   67,   50,   42,   11,  112,  113,
-   87,   53,  124,   33,   19,   56,   72,  119,   73,   74,
-   65,   68,   69,   78,   80,   82,   77,   89,   72,   84,
-   79,   81,   67,   83,  147,   85,   90,   88,   91,   71,
-  103,   76,   60,  125,  127,  111,  128,  112,   99,   95,
-  101,  133,  113,  135,  136,   48,    1,   67,   80,    2,
-   50,   72,   49,  126,   97,   92,   75,   70,   86,  109,
-   59,  132,  134,  131,   93,  148,  107,  102,    0,   64,
-  130,    0,    0,   96,    0,    0,   72,   77,  120,  100,
-   98,   80,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,   80,   26,    0,    0,
-   77,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   77,   12,    0,    0,    0,
-   26,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   26,    9,    0,    0,   12,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   25,    0,   25,   25,   25,
-   46,   46,   29,    0,   30,   31,   10,   32,    0,    9,
-    0,    0,   46,   46,   46,   46,   46,   46,   46,   46,
-   46,   46,   46,   33,   40,   41,   19,    0,   19,   46,
-   46,   19,   19,   19,   19,   19,   19,   19,   19,   10,
-    8,    0,    0,    0,    0,    0,   42,    0,    0,   19,
-   19,   19,   19,   19,   19,   67,    0,   67,    0,    0,
-   67,   67,   67,   67,   67,   67,   67,   67,    0,   11,
-    0,    0,    0,    8,    0,    0,    0,    0,   67,   67,
-   67,   67,   67,   67,   72,    0,   72,    0,    0,   72,
-   72,   72,   72,   72,   72,   72,   72,    0,    7,    0,
-    0,    0,   11,    0,    0,    0,    0,   72,   72,   72,
-   72,   72,   72,  117,   80,    0,   80,    0,  118,   80,
-   80,   80,   80,   80,   80,   80,   80,   15,    0,    0,
-    0,    7,    0,    0,  119,    0,    0,   80,   80,   80,
-   80,   80,   80,   77,    0,   77,    0,    0,   77,   77,
-   77,   77,   77,   77,   77,   77,   13,    0,    0,    0,
-   15,    0,    0,    0,    0,    0,   77,   77,   77,   77,
-   77,   77,    0,   26,    0,   26,    0,    0,   26,   26,
-   26,   26,   26,   26,   26,   26,   14,    0,    0,   13,
-    0,    0,    0,    0,    0,    0,   26,   26,   26,   26,
-   26,   26,   12,    0,   12,    0,    0,   12,   12,   12,
-   12,   12,   12,   12,   12,   16,    0,    0,    0,   14,
-    0,    0,    0,    0,    0,   12,   12,   12,   12,   12,
-   12,    0,    9,    0,    9,    0,    0,    9,    9,    9,
-    9,    9,    9,    9,    9,    0,    0,    0,   16,    0,
-    0,    0,    0,    0,    0,    9,    9,    9,    9,    9,
-    9,    0,   10,    0,   10,    0,    0,   10,   10,   10,
-   10,   10,   10,   10,   10,    0,    0,   17,    0,    0,
-    0,    0,    0,    0,    0,   10,   10,   10,   10,   10,
-   10,    0,    0,   43,    0,    0,    8,    0,    8,    0,
-    0,    8,    8,    8,    8,    8,    8,    8,    8,    0,
-    0,    0,    0,    0,    0,    0,   41,    0,    0,    8,
-    8,    8,    8,    8,    8,   11,    0,   11,    0,    0,
-   11,   11,   11,   11,   11,   11,   11,   11,    0,   42,
-    0,    0,    0,   17,    0,    0,    0,    0,   11,   11,
-   11,   11,   11,   11,    7,    0,    7,    0,    0,    7,
-    7,    7,    7,    7,    7,    7,    7,   43,  108,   34,
-    0,    0,    0,    0,    0,    0,    0,    7,    7,    7,
-    7,    7,    7,   15,    0,   15,    0,    0,   15,   15,
-   15,   15,   15,   15,   15,   15,   17,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,   15,   15,   15,   15,
-   15,   15,   13,    0,   13,    0,    0,   13,   13,   13,
-   13,   13,   13,   13,   13,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
-   13,    0,   14,    0,   14,    0,    0,   14,   14,   14,
-   14,   14,   14,   14,   14,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,    0,   14,   14,   14,   14,   14,
-   14,   16,    0,   16,    0,    0,   16,   16,   16,   16,
-   16,   16,   16,   16,    0,    0,    0,    0,    0,    0,
-    0,    0,    0,    0,   16,   16,   16,   16,   16,   16,
-    1,    0,    2,    0,    0,    3,    4,    5,    6,    7,
-    8,    9,   10,    0,    0,    0,    0,   40,   41,    0,
-    0,    0,    0,   11,   12,   13,   14,   15,   16,  137,
-  138,  139,  140,  141,  142,  143,  144,  145,  146,   42,
-   41,   41,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,   41,   41,   41,   41,   41,   41,   41,   41,
-   41,   41,   41,   42,   42,    0,    0,    0,    2,    0,
-    0,    3,    4,    5,    0,   42,   42,   42,   42,   42,
-   42,   42,   42,   42,   42,   42,    0,    0,    0,   11,
-    0,   43,   43,    0,   29,    0,   30,   31,    0,   32,
-    0,    0,    0,   43,   43,   43,   43,   43,   43,   43,
-   43,   43,   43,   43,    0,   33,    0,    0,    0,    0,
-    0,    2,    0,    0,    3,    4,    5,    0,    0,    0,
-    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-    0,    0,   11,
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const yytype_uint16 yyprhs[] =
+{
+       0,     0,     3,     4,     6,     8,    11,    13,    16,    19,
+      22,    25,    28,    31,    34,    38,    42,    46,    50,    52,
+      56,    58,    61,    65,    69,    73,    75,    79,    83,    85,
+      88,    90,    92,    94,    96,    98,   100,   104,   109,   111,
+     114,   118,   122,   123,   125,   127,   130,   133,   134,   138,
+     140,   144,   147,   148,   151,   154,   157,   160,   163,   166,
+     169,   172,   175,   178,   181,   184,   186,   188,   190,   192,
+     196,   200,   202,   206,   208,   212,   216,   218,   222,   224,
+     228,   232,   234,   238,   242,   244,   248,   250,   253,   255,
+     257,   259,   261,   263,   265,   269,   271,   274,   276,   278
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
+static const yytype_int8 yyrhs[] =
+{
+      45,     0,    -1,    -1,    46,    -1,    47,    -1,    46,    47,
+      -1,    28,    -1,     1,    28,    -1,    74,    50,    -1,    31,
+      72,    -1,    29,    64,    -1,    30,    67,    -1,    32,    70,
+      -1,    10,    48,    -1,    12,    74,    48,    -1,    13,    74,
+      48,    -1,    11,    66,    48,    -1,    14,    69,    48,    -1,
+      49,    -1,    48,    35,    49,    -1,     5,    -1,    36,     5,
+      -1,     5,    34,     9,    -1,     5,    37,     9,    -1,     5,
+      38,     9,    -1,    51,    -1,    50,    33,    51,    -1,    66,
+      34,    54,    -1,    53,    -1,    36,    53,    -1,     4,    -1,
+      27,    -1,     7,    -1,     6,    -1,     9,    -1,    55,    -1,
+      54,    35,    55,    -1,    60,    59,    62,    56,    -1,    63,
+      -1,    36,    63,    -1,    43,    34,     9,    -1,    42,    34,
+       9,    -1,    -1,    57,    -1,    58,    -1,    57,    58,    -1,
+      58,    57,    -1,    -1,    39,    61,    40,    -1,    74,    -1,
+      74,    33,    77,    -1,    33,    77,    -1,    -1,    62,    15,
+      -1,    62,    16,    -1,    62,    17,    -1,    62,    18,    -1,
+      62,    19,    -1,    62,    20,    -1,    62,    21,    -1,    62,
+      22,    -1,    62,    23,    -1,    62,    24,    -1,    62,    25,
+      -1,    62,    26,    -1,    27,    -1,     4,    -1,     3,    -1,
+      65,    -1,    64,    33,    65,    -1,     4,    34,    66,    -1,
+      52,    -1,    66,    35,    52,    -1,    68,    -1,    67,    33,
+      68,    -1,     4,    34,    69,    -1,    56,    -1,    69,    35,
+      56,    -1,    71,    -1,    70,    33,    71,    -1,     4,    34,
+      74,    -1,    73,    -1,    72,    33,    73,    -1,     4,    34,
+      74,    -1,    75,    -1,    74,    35,    75,    -1,    76,    -1,
+      36,    76,    -1,     4,    -1,    27,    -1,     7,    -1,     8,
+      -1,     9,    -1,    78,    -1,    77,    35,    78,    -1,    79,
+      -1,    36,    79,    -1,     4,    -1,    27,    -1,     9,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const yytype_uint16 yyrline[] =
+{
+       0,   189,   189,   190,   193,   194,   197,   200,   203,   206,
+     209,   212,   215,   218,   221,   224,   227,   230,   235,   236,
+     242,   245,   248,   251,   254,   259,   260,   266,   276,   280,
+     286,   289,   292,   295,   298,   303,   304,   338,   364,   368,
+     374,   379,   384,   388,   392,   396,   400,   406,   409,   414,
+     419,   424,   431,   434,   437,   440,   443,   446,   449,   452,
+     455,   458,   461,   464,   467,   472,   475,   478,   486,   487,
+     490,   499,   500,   506,   507,   510,   519,   520,   526,   527,
+     530,   539,   540,   543,   552,   553,   559,   563,   569,   572,
+     575,   578,   581,   586,   587,   593,   597,   603,   606,   609
 };
-#if defined(__cplusplus) || defined(__STDC__)
-const short yycheck[] =
-#else
-short yycheck[] =
 #endif
-	{                                      33,
-    0,   33,   33,   33,    8,    9,   33,   33,    7,  280,
-   44,   76,   44,   44,  257,  258,  258,  258,   44,  261,
-  262,  263,  258,   44,  260,  261,  258,  263,   44,    0,
-   33,  263,   43,   33,   45,  258,  279,  279,  286,  287,
-   61,  258,   58,  279,   44,  258,   36,  279,   38,   39,
-   61,  259,   44,   61,   61,   61,   46,  263,    0,   61,
-   58,   58,   33,   58,  129,   58,  263,   58,  263,   44,
-   40,   44,   44,   41,   61,   44,   61,  286,   82,   78,
-   84,   44,  287,  263,  263,   41,    0,   58,    0,    0,
-   41,   33,   41,  111,   80,   69,   43,   34,   60,  103,
-   17,  120,  124,  116,   71,  133,   88,   85,   -1,   22,
-  115,   -1,   -1,   79,   -1,   -1,   58,    0,   33,   83,
-   81,   33,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   58,    0,   -1,   -1,
-   33,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   58,    0,   -1,   -1,   -1,
-   33,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   58,    0,   -1,   -1,   33,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,  259,   -1,  259,  259,  259,
-  257,  258,  258,   -1,  260,  261,    0,  263,   -1,   33,
-   -1,   -1,  269,  270,  271,  272,  273,  274,  275,  276,
-  277,  278,  279,  279,  257,  258,  256,   -1,  258,  286,
-  287,  261,  262,  263,  264,  265,  266,  267,  268,   33,
-    0,   -1,   -1,   -1,   -1,   -1,  279,   -1,   -1,  279,
-  280,  281,  282,  283,  284,  256,   -1,  258,   -1,   -1,
-  261,  262,  263,  264,  265,  266,  267,  268,   -1,    0,
-   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,  279,  280,
-  281,  282,  283,  284,  256,   -1,  258,   -1,   -1,  261,
-  262,  263,  264,  265,  266,  267,  268,   -1,    0,   -1,
-   -1,   -1,   33,   -1,   -1,   -1,   -1,  279,  280,  281,
-  282,  283,  284,  258,  256,   -1,  258,   -1,  263,  261,
-  262,  263,  264,  265,  266,  267,  268,    0,   -1,   -1,
-   -1,   33,   -1,   -1,  279,   -1,   -1,  279,  280,  281,
-  282,  283,  284,  256,   -1,  258,   -1,   -1,  261,  262,
-  263,  264,  265,  266,  267,  268,    0,   -1,   -1,   -1,
-   33,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
-  283,  284,   -1,  256,   -1,  258,   -1,   -1,  261,  262,
-  263,  264,  265,  266,  267,  268,    0,   -1,   -1,   33,
-   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
-  283,  284,  256,   -1,  258,   -1,   -1,  261,  262,  263,
-  264,  265,  266,  267,  268,    0,   -1,   -1,   -1,   33,
-   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
-  284,   -1,  256,   -1,  258,   -1,   -1,  261,  262,  263,
-  264,  265,  266,  267,  268,   -1,   -1,   -1,   33,   -1,
-   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
-  284,   -1,  256,   -1,  258,   -1,   -1,  261,  262,  263,
-  264,  265,  266,  267,  268,   -1,   -1,   33,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
-  284,   -1,   -1,   33,   -1,   -1,  256,   -1,  258,   -1,
-   -1,  261,  262,  263,  264,  265,  266,  267,  268,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,  279,
-  280,  281,  282,  283,  284,  256,   -1,  258,   -1,   -1,
-  261,  262,  263,  264,  265,  266,  267,  268,   -1,   33,
-   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,  279,  280,
-  281,  282,  283,  284,  256,   -1,  258,   -1,   -1,  261,
-  262,  263,  264,  265,  266,  267,  268,   33,   58,   33,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
-  282,  283,  284,  256,   -1,  258,   -1,   -1,  261,  262,
-  263,  264,  265,  266,  267,  268,   33,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
-  283,  284,  256,   -1,  258,   -1,   -1,  261,  262,  263,
-  264,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
-  284,   -1,  256,   -1,  258,   -1,   -1,  261,  262,  263,
-  264,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
-  284,  256,   -1,  258,   -1,   -1,  261,  262,  263,  264,
-  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
-  256,   -1,  258,   -1,   -1,  261,  262,  263,  264,  265,
-  266,  267,  268,   -1,   -1,   -1,   -1,  257,  258,   -1,
-   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  269,
-  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
-  257,  258,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,  269,  270,  271,  272,  273,  274,  275,  276,
-  277,  278,  279,  257,  258,   -1,   -1,   -1,  258,   -1,
-   -1,  261,  262,  263,   -1,  269,  270,  271,  272,  273,
-  274,  275,  276,  277,  278,  279,   -1,   -1,   -1,  279,
-   -1,  257,  258,   -1,  258,   -1,  260,  261,   -1,  263,
-   -1,   -1,   -1,  269,  270,  271,  272,  273,  274,  275,
-  276,  277,  278,  279,   -1,  279,   -1,   -1,   -1,   -1,
-   -1,  258,   -1,   -1,  261,  262,  263,   -1,   -1,   -1,
-   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
-   -1,   -1,  279,
+
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
+/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "COMMAND", "ALIAS", "DEFVAR", "NTWKADDR",
+  "NETGROUP", "USERGROUP", "WORD", "DEFAULTS", "DEFAULTS_HOST",
+  "DEFAULTS_USER", "DEFAULTS_RUNAS", "DEFAULTS_CMND", "NOPASSWD", "PASSWD",
+  "NOEXEC", "EXEC", "SETENV", "NOSETENV", "LOG_INPUT", "NOLOG_INPUT",
+  "LOG_OUTPUT", "NOLOG_OUTPUT", "FOLLOW", "NOFOLLOW", "ALL", "COMMENT",
+  "HOSTALIAS", "CMNDALIAS", "USERALIAS", "RUNASALIAS", "':'", "'='", "','",
+  "'!'", "'+'", "'-'", "'('", "')'", "ERROR", "TYPE", "ROLE", "$accept",
+  "file", "line", "entry", "defaults_list", "defaults_entry", "privileges",
+  "privilege", "ophost", "host", "cmndspeclist", "cmndspec", "opcmnd",
+  "rolespec", "typespec", "selinux", "runasspec", "runaslist", "cmndtag",
+  "cmnd", "hostaliases", "hostalias", "hostlist", "cmndaliases",
+  "cmndalias", "cmndlist", "runasaliases", "runasalias", "useraliases",
+  "useralias", "userlist", "opuser", "user", "grouplist", "opgroup",
+  "group", 0
 };
-#define YYFINAL 18
-#ifndef YYDEBUG
-#define YYDEBUG 0
 #endif
-#define YYMAXTOKEN 287
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const yytype_uint16 yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,    58,    61,    44,    33,    43,    45,    40,
+      41,   288,   289,   290
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const yytype_uint8 yyr1[] =
+{
+       0,    44,    45,    45,    46,    46,    47,    47,    47,    47,
+      47,    47,    47,    47,    47,    47,    47,    47,    48,    48,
+      49,    49,    49,    49,    49,    50,    50,    51,    52,    52,
+      53,    53,    53,    53,    53,    54,    54,    55,    56,    56,
+      57,    58,    59,    59,    59,    59,    59,    60,    60,    61,
+      61,    61,    62,    62,    62,    62,    62,    62,    62,    62,
+      62,    62,    62,    62,    62,    63,    63,    63,    64,    64,
+      65,    66,    66,    67,    67,    68,    69,    69,    70,    70,
+      71,    72,    72,    73,    74,    74,    75,    75,    76,    76,
+      76,    76,    76,    77,    77,    78,    78,    79,    79,    79
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const yytype_uint8 yyr2[] =
+{
+       0,     2,     0,     1,     1,     2,     1,     2,     2,     2,
+       2,     2,     2,     2,     3,     3,     3,     3,     1,     3,
+       1,     2,     3,     3,     3,     1,     3,     3,     1,     2,
+       1,     1,     1,     1,     1,     1,     3,     4,     1,     2,
+       3,     3,     0,     1,     1,     2,     2,     0,     3,     1,
+       3,     2,     0,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     1,     1,     1,     1,     3,
+       3,     1,     3,     1,     3,     3,     1,     3,     1,     3,
+       3,     1,     3,     3,     1,     3,     1,     2,     1,     1,
+       1,     1,     1,     1,     3,     1,     2,     1,     1,     1
+};
+
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const yytype_uint8 yydefact[] =
+{
+       0,     0,    88,    90,    91,    92,     0,     0,     0,     0,
+       0,    89,     6,     0,     0,     0,     0,     0,     0,     0,
+       4,     0,    84,    86,     7,    20,     0,    13,    18,    30,
+      33,    32,    34,    31,     0,    71,    28,     0,     0,     0,
+      67,    66,    65,     0,    76,    38,     0,     0,    10,    68,
+       0,    11,    73,     0,     9,    81,     0,    12,    78,    87,
+       1,     5,     0,     8,    25,     0,     0,     0,     0,    21,
+       0,    29,     0,    16,    14,    15,    39,     0,    17,     0,
+       0,     0,     0,     0,     0,     0,     0,    85,     0,    47,
+      22,    23,    24,    19,    72,    77,    70,    69,    75,    74,
+      83,    82,    80,    79,    26,     0,    27,    35,    42,     0,
+       0,    49,    47,     0,     0,    43,    44,    52,    97,    99,
+      98,     0,    51,    93,    95,    48,     0,    36,     0,     0,
+      45,    46,     0,    96,     0,    50,    41,    40,    53,    54,
+      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
+      37,    94
+};
+
+/* YYDEFGOTO[NTERM-NUM].  */
+static const yytype_int16 yydefgoto[] =
+{
+      -1,    18,    19,    20,    27,    28,    63,    64,    35,    36,
+     106,   107,    44,   115,   116,   117,   108,   110,   132,    45,
+      48,    49,    65,    51,    52,    46,    57,    58,    54,    55,
+      21,    22,    23,   122,   123,   124
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -75
+static const yytype_int16 yypact[] =
+{
+       4,    14,   -75,   -75,   -75,   -75,    75,    16,   105,   105,
+       3,   -75,   -75,    49,    57,    58,    59,   113,    96,    37,
+     -75,    72,   -75,   -75,   -75,   111,    93,    84,   -75,   -75,
+     -75,   -75,   -75,   -75,   119,   -75,   -75,    19,    21,    21,
+     -75,   -75,   -75,   112,   -75,   -75,    24,    38,    69,   -75,
+      76,   109,   -75,   104,   110,   -75,   116,   114,   -75,   -75,
+     -75,   -75,   105,   118,   -75,   -25,   122,   144,   145,   -75,
+      75,   -75,    16,    84,    84,    84,   -75,     3,    84,    16,
+      49,     3,    57,   105,    58,   105,    59,   -75,    16,   117,
+     -75,   -75,   -75,   -75,   -75,   -75,   120,   -75,   123,   -75,
+     124,   -75,   124,   -75,   -75,    97,   126,   -75,   -15,    91,
+     127,   -14,   117,   128,   129,   115,   121,   -75,   -75,   -75,
+     -75,   125,   130,   -75,   -75,   -75,    91,   -75,   151,   157,
+     -75,   -75,    67,   -75,    91,   130,   -75,   -75,   -75,   -75,
+     -75,   -75,   -75,   -75,   -75,   -75,   -75,   -75,   -75,   -75,
+     -75,   -75
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const yytype_int16 yypgoto[] =
+{
+     -75,   -75,   -75,   149,    98,    99,   -75,    82,   100,   137,
+     -75,    61,   -74,    60,    62,   -75,   -75,   -75,   -75,   131,
+     -75,    95,    -5,   -75,   101,   103,   -75,    92,   -75,   102,
+      -8,   132,   162,    54,    47,    64
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -4
+static const yytype_int16 yytable[] =
+{
+      38,    39,    37,    95,    -2,     1,    40,    41,     2,    89,
+      72,     3,     4,     5,     6,     7,     8,     9,    10,   126,
+      29,    62,    30,    31,    25,    32,    25,   113,   114,    25,
+      42,    11,    12,    13,    14,    15,    16,    -3,     1,    43,
+      17,     2,    24,    33,     3,     4,     5,     6,     7,     8,
+       9,    10,    34,    47,    72,    26,    62,    26,   150,    77,
+      26,    50,    53,    56,    11,    12,    13,    14,    15,    16,
+      40,    41,    79,    17,    96,   100,    29,   102,    30,    31,
+      25,    32,   138,   139,   140,   141,   142,   143,   144,   145,
+     146,   147,   148,   149,    42,   118,    60,   111,    69,    33,
+     119,     2,    80,    43,     3,     4,     5,    62,    34,     2,
+      81,    26,     3,     4,     5,    40,    41,     2,   120,    70,
+       3,     4,     5,    29,    11,    30,    31,   121,    32,   118,
+     109,    90,    11,    17,   119,    73,    74,    75,    83,    42,
+      11,    17,    82,    84,    78,    66,    33,    86,    67,    68,
+      85,    88,   120,    91,    92,    72,   105,   113,    77,    62,
+     136,   112,   128,   129,   114,   134,   137,   125,    61,    93,
+     104,    71,    94,   127,    76,    97,   131,   130,   103,    59,
+     135,   151,     0,    99,    98,   133,   101,     0,     0,     0,
+       0,     0,     0,     0,    87
+};
+
+static const yytype_int16 yycheck[] =
+{
+       8,     9,     7,    77,     0,     1,     3,     4,     4,    34,
+      35,     7,     8,     9,    10,    11,    12,    13,    14,    33,
+       4,    35,     6,     7,     5,     9,     5,    42,    43,     5,
+      27,    27,    28,    29,    30,    31,    32,     0,     1,    36,
+      36,     4,    28,    27,     7,     8,     9,    10,    11,    12,
+      13,    14,    36,     4,    35,    36,    35,    36,   132,    35,
+      36,     4,     4,     4,    27,    28,    29,    30,    31,    32,
+       3,     4,    34,    36,    79,    83,     4,    85,     6,     7,
+       5,     9,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,     4,     0,   105,     5,    27,
+       9,     4,    33,    36,     7,     8,     9,    35,    36,     4,
+      34,    36,     7,     8,     9,     3,     4,     4,    27,    35,
+       7,     8,     9,     4,    27,     6,     7,    36,     9,     4,
+      33,     9,    27,    36,     9,    37,    38,    39,    34,    27,
+      27,    36,    33,    33,    46,    34,    27,    33,    37,    38,
+      34,    33,    27,     9,     9,    35,    39,    42,    35,    35,
+       9,    35,    34,    34,    43,    35,     9,    40,    19,    70,
+      88,    34,    72,   112,    43,    80,   116,   115,    86,    17,
+     126,   134,    -1,    82,    81,   121,    84,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    62
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const yytype_uint8 yystos[] =
+{
+       0,     1,     4,     7,     8,     9,    10,    11,    12,    13,
+      14,    27,    28,    29,    30,    31,    32,    36,    45,    46,
+      47,    74,    75,    76,    28,     5,    36,    48,    49,     4,
+       6,     7,     9,    27,    36,    52,    53,    66,    74,    74,
+       3,     4,    27,    36,    56,    63,    69,     4,    64,    65,
+       4,    67,    68,     4,    72,    73,     4,    70,    71,    76,
+       0,    47,    35,    50,    51,    66,    34,    37,    38,     5,
+      35,    53,    35,    48,    48,    48,    63,    35,    48,    34,
+      33,    34,    33,    34,    33,    34,    33,    75,    33,    34,
+       9,     9,     9,    49,    52,    56,    66,    65,    69,    68,
+      74,    73,    74,    71,    51,    39,    54,    55,    60,    33,
+      61,    74,    35,    42,    43,    57,    58,    59,     4,     9,
+      27,    36,    77,    78,    79,    40,    33,    55,    34,    34,
+      58,    57,    62,    79,    35,    77,     9,     9,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      56,    78
+};
+
+#define yyerrok		(yyerrstatus = 0)
+#define yyclearin	(yychar = YYEMPTY)
+#define YYEMPTY		(-2)
+#define YYEOF		0
+
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT		goto yyabortlab
+#define YYERROR		goto yyerrorlab
+
+
+/* Like YYERROR except do call yyerror.  This remains here temporarily
+   to ease the transition to the new meaning of YYERROR, for GCC.
+   Once GCC version 2 has supplanted version 1, this can go.  */
+
+#define YYFAIL		goto yyerrlab
+
+#define YYRECOVERING()  (!!yyerrstatus)
+
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK (1);						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
+      yyerror (YY_("syntax error: cannot back up")); \
+      YYERROR;							\
+    }								\
+while (YYID (0))
+
+
+#define YYTERROR	1
+#define YYERRCODE	256
+
+
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (YYID (N))                                                    \
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (YYID (0))
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
+#ifndef YY_LOCATION_PRINT
+# if YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
+#endif
+
+
+/* YYLEX -- calling `yylex' with the right arguments.  */
+
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (YYLEX_PARAM)
+#else
+# define YYLEX yylex ()
+#endif
+
+/* Enable debugging if requested.  */
 #if YYDEBUG
-#if defined(__cplusplus) || defined(__STDC__)
-const char * const yyname[] =
+
+# ifndef YYFPRINTF
+#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYFPRINTF fprintf
+# endif
+
+# define YYDPRINTF(Args)			\
+do {						\
+  if (yydebug)					\
+    YYFPRINTF Args;				\
+} while (YYID (0))
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
+do {									  \
+  if (yydebug)								  \
+    {									  \
+      YYFPRINTF (stderr, "%s ", Title);					  \
+      yy_symbol_print (stderr,						  \
+		  Type, Value); \
+      YYFPRINTF (stderr, "\n");						  \
+    }									  \
+} while (YYID (0))
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_value_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (!yyvaluep)
+    return;
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# else
+  YYUSE (yyoutput);
+# endif
+  switch (yytype)
+    {
+      default:
+	break;
+    }
+}
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (yytype < YYNTOKENS)
+    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
+  YYFPRINTF (yyoutput, ")");
+}
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (included).                                                   |
+`------------------------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+#else
+static void
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (YYID (0))
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
+#else
+static void
+yy_reduce_print (yyvsp, yyrule)
+    YYSTYPE *yyvsp;
+    int yyrule;
+#endif
+{
+  int yynrhs = yyr2[yyrule];
+  int yyi;
+  unsigned long int yylno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
+	     yyrule - 1, yylno);
+  /* The symbols being reduced.  */
+  for (yyi = 0; yyi < yynrhs; yyi++)
+    {
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
+		       &(yyvsp[(yyi + 1) - (yynrhs)])
+		       		       );
+      YYFPRINTF (stderr, "\n");
+    }
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (yyvsp, Rule); \
+} while (YYID (0))
+
+/* Nonzero means print parse trace.  It is left uninitialized so that
+   multiple parsers can coexist.  */
+int yydebug;
+#else /* !YYDEBUG */
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
+#endif /* !YYDEBUG */
+
+
+/* YYINITDEPTH -- initial size of the parser's stacks.  */
+#ifndef	YYINITDEPTH
+# define YYINITDEPTH 200
+#endif
+
+/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
+   if the built-in stack extension method is used).
+
+   Do not make this value too large; the results are undefined if
+   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
+   evaluated with infinite-precision integer arithmetic.  */
+
+#ifndef YYMAXDEPTH
+# define YYMAXDEPTH 10000
+#endif
+
+
+
+#if YYERROR_VERBOSE
+
+# ifndef yystrlen
+#  if defined __GLIBC__ && defined _STRING_H
+#   define yystrlen strlen
+#  else
+/* Return the length of YYSTR.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static YYSIZE_T
+yystrlen (const char *yystr)
+#else
+static YYSIZE_T
+yystrlen (yystr)
+    const char *yystr;
+#endif
+{
+  YYSIZE_T yylen;
+  for (yylen = 0; yystr[yylen]; yylen++)
+    continue;
+  return yylen;
+}
+#  endif
+# endif
+
+# ifndef yystpcpy
+#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
+#   define yystpcpy stpcpy
+#  else
+/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
+   YYDEST.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static char *
+yystpcpy (char *yydest, const char *yysrc)
 #else
-char *yyname[] =
+static char *
+yystpcpy (yydest, yysrc)
+    char *yydest;
+    const char *yysrc;
 #endif
+{
+  char *yyd = yydest;
+  const char *yys = yysrc;
+
+  while ((*yyd++ = *yys++) != '\0')
+    continue;
+
+  return yyd - 1;
+}
+#  endif
+# endif
+
+# ifndef yytnamerr
+/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
+   quotes and backslashes, so that it's suitable for yyerror.  The
+   heuristic is that double-quoting is unnecessary unless the string
+   contains an apostrophe, a comma, or backslash (other than
+   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
+   null, do not copy; instead, return the length of what the result
+   would have been.  */
+static YYSIZE_T
+yytnamerr (char *yyres, const char *yystr)
+{
+  if (*yystr == '"')
+    {
+      YYSIZE_T yyn = 0;
+      char const *yyp = yystr;
+
+      for (;;)
+	switch (*++yyp)
+	  {
+	  case '\'':
+	  case ',':
+	    goto do_not_strip_quotes;
+
+	  case '\\':
+	    if (*++yyp != '\\')
+	      goto do_not_strip_quotes;
+	    /* Fall through.  */
+	  default:
+	    if (yyres)
+	      yyres[yyn] = *yyp;
+	    yyn++;
+	    break;
+
+	  case '"':
+	    if (yyres)
+	      yyres[yyn] = '\0';
+	    return yyn;
+	  }
+    do_not_strip_quotes: ;
+    }
+
+  if (! yyres)
+    return yystrlen (yystr);
+
+  return yystpcpy (yyres, yystr) - yyres;
+}
+# endif
+
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
+{
+  int yyn = yypact[yystate];
+
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
+    {
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
+
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
+
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
 	{
-"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-"'!'",0,0,0,0,0,0,"'('","')'",0,"'+'","','","'-'",0,0,0,0,0,0,0,0,0,0,0,0,"':'",
-0,0,"'='",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-"COMMAND","ALIAS","DEFVAR","NTWKADDR","NETGROUP","USERGROUP","WORD","DEFAULTS",
-"DEFAULTS_HOST","DEFAULTS_USER","DEFAULTS_RUNAS","DEFAULTS_CMND","NOPASSWD",
-"PASSWD","NOEXEC","EXEC","SETENV","NOSETENV","LOG_INPUT","NOLOG_INPUT",
-"LOG_OUTPUT","NOLOG_OUTPUT","ALL","COMMENT","HOSTALIAS","CMNDALIAS","USERALIAS",
-"RUNASALIAS","ERROR","TYPE","ROLE",
-};
-#if defined(__cplusplus) || defined(__STDC__)
-const char * const yyrule[] =
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
+}
+#endif /* YYERROR_VERBOSE */
+
+
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
 #else
-char *yyrule[] =
+static void
+yydestruct (yymsg, yytype, yyvaluep)
+    const char *yymsg;
+    int yytype;
+    YYSTYPE *yyvaluep;
 #endif
-	{"$accept : file",
-"file :",
-"file : line",
-"line : entry",
-"line : line entry",
-"entry : COMMENT",
-"entry : error COMMENT",
-"entry : userlist privileges",
-"entry : USERALIAS useraliases",
-"entry : HOSTALIAS hostaliases",
-"entry : CMNDALIAS cmndaliases",
-"entry : RUNASALIAS runasaliases",
-"entry : DEFAULTS defaults_list",
-"entry : DEFAULTS_USER userlist defaults_list",
-"entry : DEFAULTS_RUNAS userlist defaults_list",
-"entry : DEFAULTS_HOST hostlist defaults_list",
-"entry : DEFAULTS_CMND cmndlist defaults_list",
-"defaults_list : defaults_entry",
-"defaults_list : defaults_list ',' defaults_entry",
-"defaults_entry : DEFVAR",
-"defaults_entry : '!' DEFVAR",
-"defaults_entry : DEFVAR '=' WORD",
-"defaults_entry : DEFVAR '+' WORD",
-"defaults_entry : DEFVAR '-' WORD",
-"privileges : privilege",
-"privileges : privileges ':' privilege",
-"privilege : hostlist '=' cmndspeclist",
-"ophost : host",
-"ophost : '!' host",
-"host : ALIAS",
-"host : ALL",
-"host : NETGROUP",
-"host : NTWKADDR",
-"host : WORD",
-"cmndspeclist : cmndspec",
-"cmndspeclist : cmndspeclist ',' cmndspec",
-"cmndspec : runasspec selinux cmndtag opcmnd",
-"opcmnd : cmnd",
-"opcmnd : '!' cmnd",
-"rolespec : ROLE '=' WORD",
-"typespec : TYPE '=' WORD",
-"selinux :",
-"selinux : rolespec",
-"selinux : typespec",
-"selinux : rolespec typespec",
-"selinux : typespec rolespec",
-"runasspec :",
-"runasspec : '(' runaslist ')'",
-"runaslist : userlist",
-"runaslist : userlist ':' grouplist",
-"runaslist : ':' grouplist",
-"cmndtag :",
-"cmndtag : cmndtag NOPASSWD",
-"cmndtag : cmndtag PASSWD",
-"cmndtag : cmndtag NOEXEC",
-"cmndtag : cmndtag EXEC",
-"cmndtag : cmndtag SETENV",
-"cmndtag : cmndtag NOSETENV",
-"cmndtag : cmndtag LOG_INPUT",
-"cmndtag : cmndtag NOLOG_INPUT",
-"cmndtag : cmndtag LOG_OUTPUT",
-"cmndtag : cmndtag NOLOG_OUTPUT",
-"cmnd : ALL",
-"cmnd : ALIAS",
-"cmnd : COMMAND",
-"hostaliases : hostalias",
-"hostaliases : hostaliases ':' hostalias",
-"hostalias : ALIAS '=' hostlist",
-"hostlist : ophost",
-"hostlist : hostlist ',' ophost",
-"cmndaliases : cmndalias",
-"cmndaliases : cmndaliases ':' cmndalias",
-"cmndalias : ALIAS '=' cmndlist",
-"cmndlist : opcmnd",
-"cmndlist : cmndlist ',' opcmnd",
-"runasaliases : runasalias",
-"runasaliases : runasaliases ':' runasalias",
-"runasalias : ALIAS '=' userlist",
-"useraliases : useralias",
-"useraliases : useraliases ':' useralias",
-"useralias : ALIAS '=' userlist",
-"userlist : opuser",
-"userlist : userlist ',' opuser",
-"opuser : user",
-"opuser : '!' user",
-"user : ALIAS",
-"user : ALL",
-"user : NETGROUP",
-"user : USERGROUP",
-"user : WORD",
-"grouplist : opgroup",
-"grouplist : grouplist ',' opgroup",
-"opgroup : group",
-"opgroup : '!' group",
-"group : ALIAS",
-"group : ALL",
-"group : WORD",
-};
+{
+  YYUSE (yyvaluep);
+
+  if (!yymsg)
+    yymsg = "Deleting";
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
+
+  switch (yytype)
+    {
+
+      default:
+	break;
+    }
+}
+
+/* Prevent warnings from -Wmissing-prototypes.  */
+#ifdef YYPARSE_PARAM
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void *YYPARSE_PARAM);
+#else
+int yyparse ();
+#endif
+#else /* ! YYPARSE_PARAM */
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void);
+#else
+int yyparse ();
 #endif
-#ifdef YYSTACKSIZE
-#undef YYMAXDEPTH
-#define YYMAXDEPTH YYSTACKSIZE
+#endif /* ! YYPARSE_PARAM */
+
+
+/* The lookahead symbol.  */
+int yychar;
+
+/* The semantic value of the lookahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
+
+
+
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
+
+#ifdef YYPARSE_PARAM
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void *YYPARSE_PARAM)
 #else
-#ifdef YYMAXDEPTH
-#define YYSTACKSIZE YYMAXDEPTH
+int
+yyparse (YYPARSE_PARAM)
+    void *YYPARSE_PARAM;
+#endif
+#else /* ! YYPARSE_PARAM */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void)
 #else
-#define YYSTACKSIZE 10000
-#define YYMAXDEPTH 10000
+int
+yyparse ()
+
+#endif
 #endif
+{
+
+
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
+
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
+
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
+
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
+
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
+
+    YYSIZE_T yystacksize;
+
+  int yyn;
+  int yyresult;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+#if YYERROR_VERBOSE
+  /* Buffer for error messages, and its allocated size.  */
+  char yymsgbuf[128];
+  char *yymsg = yymsgbuf;
+  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
+#endif
+
+#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
+
+  /* The number of symbols on the RHS of the reduced rule.
+     Keep to zero when no symbol should be popped.  */
+  int yylen = 0;
+
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
+  YYDPRINTF ((stderr, "Starting parse\n"));
+
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
+  yychar = YYEMPTY; /* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+  yyssp = yyss;
+  yyvsp = yyvs;
+
+  goto yysetstate;
+
+/*------------------------------------------------------------.
+| yynewstate -- Push a new state, which is found in yystate.  |
+`------------------------------------------------------------*/
+ yynewstate:
+  /* In all cases, when you get here, the value and location stacks
+     have just been pushed.  So pushing a state here evens the stacks.  */
+  yyssp++;
+
+ yysetstate:
+  *yyssp = yystate;
+
+  if (yyss + yystacksize - 1 <= yyssp)
+    {
+      /* Get the current used size of the three stacks, in elements.  */
+      YYSIZE_T yysize = yyssp - yyss + 1;
+
+#ifdef yyoverflow
+      {
+	/* Give user a chance to reallocate the stack.  Use copies of
+	   these so that the &'s don't force the real ones into
+	   memory.  */
+	YYSTYPE *yyvs1 = yyvs;
+	yytype_int16 *yyss1 = yyss;
+
+	/* Each stack pointer address is followed by the size of the
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
+	yyoverflow (YY_("memory exhausted"),
+		    &yyss1, yysize * sizeof (*yyssp),
+		    &yyvs1, yysize * sizeof (*yyvsp),
+		    &yystacksize);
+
+	yyss = yyss1;
+	yyvs = yyvs1;
+      }
+#else /* no yyoverflow */
+# ifndef YYSTACK_RELOCATE
+      goto yyexhaustedlab;
+# else
+      /* Extend the stack our own way.  */
+      if (YYMAXDEPTH <= yystacksize)
+	goto yyexhaustedlab;
+      yystacksize *= 2;
+      if (YYMAXDEPTH < yystacksize)
+	yystacksize = YYMAXDEPTH;
+
+      {
+	yytype_int16 *yyss1 = yyss;
+	union yyalloc *yyptr =
+	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+	if (! yyptr)
+	  goto yyexhaustedlab;
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+#  undef YYSTACK_RELOCATE
+	if (yyss1 != yyssa)
+	  YYSTACK_FREE (yyss1);
+      }
+# endif
+#endif /* no yyoverflow */
+
+      yyssp = yyss + yysize - 1;
+      yyvsp = yyvs + yysize - 1;
+
+      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
+		  (unsigned long int) yystacksize));
+
+      if (yyss + yystacksize - 1 <= yyssp)
+	YYABORT;
+    }
+
+  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
+
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
+  goto yybackup;
+
+/*-----------.
+| yybackup.  |
+`-----------*/
+yybackup:
+
+  /* Do appropriate processing given the current state.  Read a
+     lookahead token if we need one and don't already have one.  */
+
+  /* First try to decide what to do without reference to lookahead token.  */
+  yyn = yypact[yystate];
+  if (yyn == YYPACT_NINF)
+    goto yydefault;
+
+  /* Not known => get a lookahead token if don't already have one.  */
+
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  if (yychar == YYEMPTY)
+    {
+      YYDPRINTF ((stderr, "Reading a token: "));
+      yychar = YYLEX;
+    }
+
+  if (yychar <= YYEOF)
+    {
+      yychar = yytoken = YYEOF;
+      YYDPRINTF ((stderr, "Now at end of input.\n"));
+    }
+  else
+    {
+      yytoken = YYTRANSLATE (yychar);
+      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
+    }
+
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
+    goto yydefault;
+  yyn = yytable[yyn];
+  if (yyn <= 0)
+    {
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
+      yyn = -yyn;
+      goto yyreduce;
+    }
+
+  /* Count tokens shifted since error; after three, turn off error
+     status.  */
+  if (yyerrstatus)
+    yyerrstatus--;
+
+  /* Shift the lookahead token.  */
+  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
+
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
+
+  yystate = yyn;
+  *++yyvsp = yylval;
+
+  goto yynewstate;
+
+
+/*-----------------------------------------------------------.
+| yydefault -- do the default action for the current state.  |
+`-----------------------------------------------------------*/
+yydefault:
+  yyn = yydefact[yystate];
+  if (yyn == 0)
+    goto yyerrlab;
+  goto yyreduce;
+
+
+/*-----------------------------.
+| yyreduce -- Do a reduction.  |
+`-----------------------------*/
+yyreduce:
+  /* yyn is the number of a rule to reduce with.  */
+  yylen = yyr2[yyn];
+
+  /* If YYLEN is nonzero, implement the default value of the action:
+     `$$ = $1'.
+
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
+     users should not rely upon it.  Assigning to YYVAL
+     unconditionally makes the parser a bit smaller, and it avoids a
+     GCC warning that YYVAL may be used uninitialized.  */
+  yyval = yyvsp[1-yylen];
+
+
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 2:
+
+/* Line 1455 of yacc.c  */
+#line 189 "gram.y"
+    { ; }
+    break;
+
+  case 6:
+
+/* Line 1455 of yacc.c  */
+#line 197 "gram.y"
+    {
+			    ;
+			}
+    break;
+
+  case 7:
+
+/* Line 1455 of yacc.c  */
+#line 200 "gram.y"
+    {
+			    yyerrok;
+			}
+    break;
+
+  case 8:
+
+/* Line 1455 of yacc.c  */
+#line 203 "gram.y"
+    {
+			    add_userspec((yyvsp[(1) - (2)].member), (yyvsp[(2) - (2)].privilege));
+			}
+    break;
+
+  case 9:
+
+/* Line 1455 of yacc.c  */
+#line 206 "gram.y"
+    {
+			    ;
+			}
+    break;
+
+  case 10:
+
+/* Line 1455 of yacc.c  */
+#line 209 "gram.y"
+    {
+			    ;
+			}
+    break;
+
+  case 11:
+
+/* Line 1455 of yacc.c  */
+#line 212 "gram.y"
+    {
+			    ;
+			}
+    break;
+
+  case 12:
+
+/* Line 1455 of yacc.c  */
+#line 215 "gram.y"
+    {
+			    ;
+			}
+    break;
+
+  case 13:
+
+/* Line 1455 of yacc.c  */
+#line 218 "gram.y"
+    {
+			    add_defaults(DEFAULTS, NULL, (yyvsp[(2) - (2)].defaults));
+			}
+    break;
+
+  case 14:
+
+/* Line 1455 of yacc.c  */
+#line 221 "gram.y"
+    {
+			    add_defaults(DEFAULTS_USER, (yyvsp[(2) - (3)].member), (yyvsp[(3) - (3)].defaults));
+			}
+    break;
+
+  case 15:
+
+/* Line 1455 of yacc.c  */
+#line 224 "gram.y"
+    {
+			    add_defaults(DEFAULTS_RUNAS, (yyvsp[(2) - (3)].member), (yyvsp[(3) - (3)].defaults));
+			}
+    break;
+
+  case 16:
+
+/* Line 1455 of yacc.c  */
+#line 227 "gram.y"
+    {
+			    add_defaults(DEFAULTS_HOST, (yyvsp[(2) - (3)].member), (yyvsp[(3) - (3)].defaults));
+			}
+    break;
+
+  case 17:
+
+/* Line 1455 of yacc.c  */
+#line 230 "gram.y"
+    {
+			    add_defaults(DEFAULTS_CMND, (yyvsp[(2) - (3)].member), (yyvsp[(3) - (3)].defaults));
+			}
+    break;
+
+  case 19:
+
+/* Line 1455 of yacc.c  */
+#line 236 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].defaults), (yyvsp[(3) - (3)].defaults));
+			    (yyval.defaults) = (yyvsp[(1) - (3)].defaults);
+			}
+    break;
+
+  case 20:
+
+/* Line 1455 of yacc.c  */
+#line 242 "gram.y"
+    {
+			    (yyval.defaults) = new_default((yyvsp[(1) - (1)].string), NULL, TRUE);
+			}
+    break;
+
+  case 21:
+
+/* Line 1455 of yacc.c  */
+#line 245 "gram.y"
+    {
+			    (yyval.defaults) = new_default((yyvsp[(2) - (2)].string), NULL, FALSE);
+			}
+    break;
+
+  case 22:
+
+/* Line 1455 of yacc.c  */
+#line 248 "gram.y"
+    {
+			    (yyval.defaults) = new_default((yyvsp[(1) - (3)].string), (yyvsp[(3) - (3)].string), TRUE);
+			}
+    break;
+
+  case 23:
+
+/* Line 1455 of yacc.c  */
+#line 251 "gram.y"
+    {
+			    (yyval.defaults) = new_default((yyvsp[(1) - (3)].string), (yyvsp[(3) - (3)].string), '+');
+			}
+    break;
+
+  case 24:
+
+/* Line 1455 of yacc.c  */
+#line 254 "gram.y"
+    {
+			    (yyval.defaults) = new_default((yyvsp[(1) - (3)].string), (yyvsp[(3) - (3)].string), '-');
+			}
+    break;
+
+  case 26:
+
+/* Line 1455 of yacc.c  */
+#line 260 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].privilege), (yyvsp[(3) - (3)].privilege));
+			    (yyval.privilege) = (yyvsp[(1) - (3)].privilege);
+			}
+    break;
+
+  case 27:
+
+/* Line 1455 of yacc.c  */
+#line 266 "gram.y"
+    {
+			    struct privilege *p = emalloc(sizeof(*p));
+			    list2tq(&p->hostlist, (yyvsp[(1) - (3)].member));
+			    list2tq(&p->cmndlist, (yyvsp[(3) - (3)].cmndspec));
+			    p->prev = p;
+			    p->next = NULL;
+			    (yyval.privilege) = p;
+			}
+    break;
+
+  case 28:
+
+/* Line 1455 of yacc.c  */
+#line 276 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(1) - (1)].member);
+			    (yyval.member)->negated = FALSE;
+			}
+    break;
+
+  case 29:
+
+/* Line 1455 of yacc.c  */
+#line 280 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(2) - (2)].member);
+			    (yyval.member)->negated = TRUE;
+			}
+    break;
+
+  case 30:
+
+/* Line 1455 of yacc.c  */
+#line 286 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), ALIAS);
+			}
+    break;
+
+  case 31:
+
+/* Line 1455 of yacc.c  */
+#line 289 "gram.y"
+    {
+			    (yyval.member) = new_member(NULL, ALL);
+			}
+    break;
+
+  case 32:
+
+/* Line 1455 of yacc.c  */
+#line 292 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), NETGROUP);
+			}
+    break;
+
+  case 33:
+
+/* Line 1455 of yacc.c  */
+#line 295 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), NTWKADDR);
+			}
+    break;
+
+  case 34:
+
+/* Line 1455 of yacc.c  */
+#line 298 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), WORD);
+			}
+    break;
+
+  case 36:
+
+/* Line 1455 of yacc.c  */
+#line 304 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].cmndspec), (yyvsp[(3) - (3)].cmndspec));
+#ifdef HAVE_SELINUX
+			    /* propagate role and type */
+			    if ((yyvsp[(3) - (3)].cmndspec)->role == NULL)
+				(yyvsp[(3) - (3)].cmndspec)->role = (yyvsp[(3) - (3)].cmndspec)->prev->role;
+			    if ((yyvsp[(3) - (3)].cmndspec)->type == NULL)
+				(yyvsp[(3) - (3)].cmndspec)->type = (yyvsp[(3) - (3)].cmndspec)->prev->type;
+#endif /* HAVE_SELINUX */
+			    /* propagate tags and runas list */
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.nopasswd == UNSPEC)
+				(yyvsp[(3) - (3)].cmndspec)->tags.nopasswd = (yyvsp[(3) - (3)].cmndspec)->prev->tags.nopasswd;
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.noexec == UNSPEC)
+				(yyvsp[(3) - (3)].cmndspec)->tags.noexec = (yyvsp[(3) - (3)].cmndspec)->prev->tags.noexec;
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.setenv == UNSPEC &&
+				(yyvsp[(3) - (3)].cmndspec)->prev->tags.setenv != IMPLIED)
+				(yyvsp[(3) - (3)].cmndspec)->tags.setenv = (yyvsp[(3) - (3)].cmndspec)->prev->tags.setenv;
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.log_input == UNSPEC)
+				(yyvsp[(3) - (3)].cmndspec)->tags.log_input = (yyvsp[(3) - (3)].cmndspec)->prev->tags.log_input;
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.log_output == UNSPEC)
+				(yyvsp[(3) - (3)].cmndspec)->tags.log_output = (yyvsp[(3) - (3)].cmndspec)->prev->tags.log_output;
+			    if ((yyvsp[(3) - (3)].cmndspec)->tags.follow == UNSPEC)
+				(yyvsp[(3) - (3)].cmndspec)->tags.follow = (yyvsp[(3) - (3)].cmndspec)->prev->tags.follow;
+			    if ((tq_empty(&(yyvsp[(3) - (3)].cmndspec)->runasuserlist) &&
+				 tq_empty(&(yyvsp[(3) - (3)].cmndspec)->runasgrouplist)) &&
+				(!tq_empty(&(yyvsp[(3) - (3)].cmndspec)->prev->runasuserlist) ||
+				 !tq_empty(&(yyvsp[(3) - (3)].cmndspec)->prev->runasgrouplist))) {
+				(yyvsp[(3) - (3)].cmndspec)->runasuserlist = (yyvsp[(3) - (3)].cmndspec)->prev->runasuserlist;
+				(yyvsp[(3) - (3)].cmndspec)->runasgrouplist = (yyvsp[(3) - (3)].cmndspec)->prev->runasgrouplist;
+			    }
+			    (yyval.cmndspec) = (yyvsp[(1) - (3)].cmndspec);
+			}
+    break;
+
+  case 37:
+
+/* Line 1455 of yacc.c  */
+#line 338 "gram.y"
+    {
+			    struct cmndspec *cs = emalloc(sizeof(*cs));
+			    if ((yyvsp[(1) - (4)].runas) != NULL) {
+				list2tq(&cs->runasuserlist, (yyvsp[(1) - (4)].runas)->runasusers);
+				list2tq(&cs->runasgrouplist, (yyvsp[(1) - (4)].runas)->runasgroups);
+				efree((yyvsp[(1) - (4)].runas));
+			    } else {
+				tq_init(&cs->runasuserlist);
+				tq_init(&cs->runasgrouplist);
+			    }
+#ifdef HAVE_SELINUX
+			    cs->role = (yyvsp[(2) - (4)].seinfo).role;
+			    cs->type = (yyvsp[(2) - (4)].seinfo).type;
+#endif
+			    cs->tags = (yyvsp[(3) - (4)].tag);
+			    cs->cmnd = (yyvsp[(4) - (4)].member);
+			    cs->prev = cs;
+			    cs->next = NULL;
+			    /* sudo "ALL" implies the SETENV tag */
+			    if (cs->cmnd->type == ALL && !cs->cmnd->negated &&
+				cs->tags.setenv == UNSPEC)
+				cs->tags.setenv = IMPLIED;
+			    (yyval.cmndspec) = cs;
+			}
+    break;
+
+  case 38:
+
+/* Line 1455 of yacc.c  */
+#line 364 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(1) - (1)].member);
+			    (yyval.member)->negated = FALSE;
+			}
+    break;
+
+  case 39:
+
+/* Line 1455 of yacc.c  */
+#line 368 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(2) - (2)].member);
+			    (yyval.member)->negated = TRUE;
+			}
+    break;
+
+  case 40:
+
+/* Line 1455 of yacc.c  */
+#line 374 "gram.y"
+    {
+			    (yyval.string) = (yyvsp[(3) - (3)].string);
+			}
+    break;
+
+  case 41:
+
+/* Line 1455 of yacc.c  */
+#line 379 "gram.y"
+    {
+			    (yyval.string) = (yyvsp[(3) - (3)].string);
+			}
+    break;
+
+  case 42:
+
+/* Line 1455 of yacc.c  */
+#line 384 "gram.y"
+    {
+			    (yyval.seinfo).role = NULL;
+			    (yyval.seinfo).type = NULL;
+			}
+    break;
+
+  case 43:
+
+/* Line 1455 of yacc.c  */
+#line 388 "gram.y"
+    {
+			    (yyval.seinfo).role = (yyvsp[(1) - (1)].string);
+			    (yyval.seinfo).type = NULL;
+			}
+    break;
+
+  case 44:
+
+/* Line 1455 of yacc.c  */
+#line 392 "gram.y"
+    {
+			    (yyval.seinfo).type = (yyvsp[(1) - (1)].string);
+			    (yyval.seinfo).role = NULL;
+			}
+    break;
+
+  case 45:
+
+/* Line 1455 of yacc.c  */
+#line 396 "gram.y"
+    {
+			    (yyval.seinfo).role = (yyvsp[(1) - (2)].string);
+			    (yyval.seinfo).type = (yyvsp[(2) - (2)].string);
+			}
+    break;
+
+  case 46:
+
+/* Line 1455 of yacc.c  */
+#line 400 "gram.y"
+    {
+			    (yyval.seinfo).type = (yyvsp[(1) - (2)].string);
+			    (yyval.seinfo).role = (yyvsp[(2) - (2)].string);
+			}
+    break;
+
+  case 47:
+
+/* Line 1455 of yacc.c  */
+#line 406 "gram.y"
+    {
+			    (yyval.runas) = NULL;
+			}
+    break;
+
+  case 48:
+
+/* Line 1455 of yacc.c  */
+#line 409 "gram.y"
+    {
+			    (yyval.runas) = (yyvsp[(2) - (3)].runas);
+			}
+    break;
+
+  case 49:
+
+/* Line 1455 of yacc.c  */
+#line 414 "gram.y"
+    {
+			    (yyval.runas) = emalloc(sizeof(struct runascontainer));
+			    (yyval.runas)->runasusers = (yyvsp[(1) - (1)].member);
+			    (yyval.runas)->runasgroups = NULL;
+			}
+    break;
+
+  case 50:
+
+/* Line 1455 of yacc.c  */
+#line 419 "gram.y"
+    {
+			    (yyval.runas) = emalloc(sizeof(struct runascontainer));
+			    (yyval.runas)->runasusers = (yyvsp[(1) - (3)].member);
+			    (yyval.runas)->runasgroups = (yyvsp[(3) - (3)].member);
+			}
+    break;
+
+  case 51:
+
+/* Line 1455 of yacc.c  */
+#line 424 "gram.y"
+    {
+			    (yyval.runas) = emalloc(sizeof(struct runascontainer));
+			    (yyval.runas)->runasusers = NULL;
+			    (yyval.runas)->runasgroups = (yyvsp[(2) - (2)].member);
+			}
+    break;
+
+  case 52:
+
+/* Line 1455 of yacc.c  */
+#line 431 "gram.y"
+    {
+			    TAGS_INIT((yyval.tag));
+			}
+    break;
+
+  case 53:
+
+/* Line 1455 of yacc.c  */
+#line 434 "gram.y"
+    {
+			    (yyval.tag).nopasswd = TRUE;
+			}
+    break;
+
+  case 54:
+
+/* Line 1455 of yacc.c  */
+#line 437 "gram.y"
+    {
+			    (yyval.tag).nopasswd = FALSE;
+			}
+    break;
+
+  case 55:
+
+/* Line 1455 of yacc.c  */
+#line 440 "gram.y"
+    {
+			    (yyval.tag).noexec = TRUE;
+			}
+    break;
+
+  case 56:
+
+/* Line 1455 of yacc.c  */
+#line 443 "gram.y"
+    {
+			    (yyval.tag).noexec = FALSE;
+			}
+    break;
+
+  case 57:
+
+/* Line 1455 of yacc.c  */
+#line 446 "gram.y"
+    {
+			    (yyval.tag).setenv = TRUE;
+			}
+    break;
+
+  case 58:
+
+/* Line 1455 of yacc.c  */
+#line 449 "gram.y"
+    {
+			    (yyval.tag).setenv = FALSE;
+			}
+    break;
+
+  case 59:
+
+/* Line 1455 of yacc.c  */
+#line 452 "gram.y"
+    {
+			    (yyval.tag).log_input = TRUE;
+			}
+    break;
+
+  case 60:
+
+/* Line 1455 of yacc.c  */
+#line 455 "gram.y"
+    {
+			    (yyval.tag).log_input = FALSE;
+			}
+    break;
+
+  case 61:
+
+/* Line 1455 of yacc.c  */
+#line 458 "gram.y"
+    {
+			    (yyval.tag).log_output = TRUE;
+			}
+    break;
+
+  case 62:
+
+/* Line 1455 of yacc.c  */
+#line 461 "gram.y"
+    {
+			    (yyval.tag).log_output = FALSE;
+			}
+    break;
+
+  case 63:
+
+/* Line 1455 of yacc.c  */
+#line 464 "gram.y"
+    {
+			    (yyval.tag).follow = TRUE;
+			}
+    break;
+
+  case 64:
+
+/* Line 1455 of yacc.c  */
+#line 467 "gram.y"
+    {
+			    (yyval.tag).follow = FALSE;
+			}
+    break;
+
+  case 65:
+
+/* Line 1455 of yacc.c  */
+#line 472 "gram.y"
+    {
+			    (yyval.member) = new_member(NULL, ALL);
+			}
+    break;
+
+  case 66:
+
+/* Line 1455 of yacc.c  */
+#line 475 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), ALIAS);
+			}
+    break;
+
+  case 67:
+
+/* Line 1455 of yacc.c  */
+#line 478 "gram.y"
+    {
+			    struct sudo_command *c = emalloc(sizeof(*c));
+			    c->cmnd = (yyvsp[(1) - (1)].command).cmnd;
+			    c->args = (yyvsp[(1) - (1)].command).args;
+			    (yyval.member) = new_member((char *)c, COMMAND);
+			}
+    break;
+
+  case 70:
+
+/* Line 1455 of yacc.c  */
+#line 490 "gram.y"
+    {
+			    char *s;
+			    if ((s = alias_add((yyvsp[(1) - (3)].string), HOSTALIAS, (yyvsp[(3) - (3)].member))) != NULL) {
+				yyerror(s);
+				YYERROR;
+			    }
+			}
+    break;
+
+  case 72:
+
+/* Line 1455 of yacc.c  */
+#line 500 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].member), (yyvsp[(3) - (3)].member));
+			    (yyval.member) = (yyvsp[(1) - (3)].member);
+			}
+    break;
+
+  case 75:
+
+/* Line 1455 of yacc.c  */
+#line 510 "gram.y"
+    {
+			    char *s;
+			    if ((s = alias_add((yyvsp[(1) - (3)].string), CMNDALIAS, (yyvsp[(3) - (3)].member))) != NULL) {
+				yyerror(s);
+				YYERROR;
+			    }
+			}
+    break;
+
+  case 77:
+
+/* Line 1455 of yacc.c  */
+#line 520 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].member), (yyvsp[(3) - (3)].member));
+			    (yyval.member) = (yyvsp[(1) - (3)].member);
+			}
+    break;
+
+  case 80:
+
+/* Line 1455 of yacc.c  */
+#line 530 "gram.y"
+    {
+			    char *s;
+			    if ((s = alias_add((yyvsp[(1) - (3)].string), RUNASALIAS, (yyvsp[(3) - (3)].member))) != NULL) {
+				yyerror(s);
+				YYERROR;
+			    }
+			}
+    break;
+
+  case 83:
+
+/* Line 1455 of yacc.c  */
+#line 543 "gram.y"
+    {
+			    char *s;
+			    if ((s = alias_add((yyvsp[(1) - (3)].string), USERALIAS, (yyvsp[(3) - (3)].member))) != NULL) {
+				yyerror(s);
+				YYERROR;
+			    }
+			}
+    break;
+
+  case 85:
+
+/* Line 1455 of yacc.c  */
+#line 553 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].member), (yyvsp[(3) - (3)].member));
+			    (yyval.member) = (yyvsp[(1) - (3)].member);
+			}
+    break;
+
+  case 86:
+
+/* Line 1455 of yacc.c  */
+#line 559 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(1) - (1)].member);
+			    (yyval.member)->negated = FALSE;
+			}
+    break;
+
+  case 87:
+
+/* Line 1455 of yacc.c  */
+#line 563 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(2) - (2)].member);
+			    (yyval.member)->negated = TRUE;
+			}
+    break;
+
+  case 88:
+
+/* Line 1455 of yacc.c  */
+#line 569 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), ALIAS);
+			}
+    break;
+
+  case 89:
+
+/* Line 1455 of yacc.c  */
+#line 572 "gram.y"
+    {
+			    (yyval.member) = new_member(NULL, ALL);
+			}
+    break;
+
+  case 90:
+
+/* Line 1455 of yacc.c  */
+#line 575 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), NETGROUP);
+			}
+    break;
+
+  case 91:
+
+/* Line 1455 of yacc.c  */
+#line 578 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), USERGROUP);
+			}
+    break;
+
+  case 92:
+
+/* Line 1455 of yacc.c  */
+#line 581 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), WORD);
+			}
+    break;
+
+  case 94:
+
+/* Line 1455 of yacc.c  */
+#line 587 "gram.y"
+    {
+			    list_append((yyvsp[(1) - (3)].member), (yyvsp[(3) - (3)].member));
+			    (yyval.member) = (yyvsp[(1) - (3)].member);
+			}
+    break;
+
+  case 95:
+
+/* Line 1455 of yacc.c  */
+#line 593 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(1) - (1)].member);
+			    (yyval.member)->negated = FALSE;
+			}
+    break;
+
+  case 96:
+
+/* Line 1455 of yacc.c  */
+#line 597 "gram.y"
+    {
+			    (yyval.member) = (yyvsp[(2) - (2)].member);
+			    (yyval.member)->negated = TRUE;
+			}
+    break;
+
+  case 97:
+
+/* Line 1455 of yacc.c  */
+#line 603 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), ALIAS);
+			}
+    break;
+
+  case 98:
+
+/* Line 1455 of yacc.c  */
+#line 606 "gram.y"
+    {
+			    (yyval.member) = new_member(NULL, ALL);
+			}
+    break;
+
+  case 99:
+
+/* Line 1455 of yacc.c  */
+#line 609 "gram.y"
+    {
+			    (yyval.member) = new_member((yyvsp[(1) - (1)].string), WORD);
+			}
+    break;
+
+
+
+/* Line 1455 of yacc.c  */
+#line 2484 "y.tab.c"
+      default: break;
+    }
+  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
+
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+
+  *++yyvsp = yyval;
+
+  /* Now `shift' the result of the reduction.  Determine what state
+     that goes to, based on the state we popped back to and the rule
+     number reduced by.  */
+
+  yyn = yyr1[yyn];
+
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+    yystate = yytable[yystate];
+  else
+    yystate = yydefgoto[yyn - YYNTOKENS];
+
+  goto yynewstate;
+
+
+/*------------------------------------.
+| yyerrlab -- here on detecting error |
+`------------------------------------*/
+yyerrlab:
+  /* If not already recovering from an error, report this error.  */
+  if (!yyerrstatus)
+    {
+      ++yynerrs;
+#if ! YYERROR_VERBOSE
+      yyerror (YY_("syntax error"));
+#else
+      {
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
+      }
+#endif
+    }
+
+
+
+  if (yyerrstatus == 3)
+    {
+      /* If just tried and failed to reuse lookahead token after an
+	 error, discard it.  */
+
+      if (yychar <= YYEOF)
+	{
+	  /* Return failure if at end of input.  */
+	  if (yychar == YYEOF)
+	    YYABORT;
+	}
+      else
+	{
+	  yydestruct ("Error: discarding",
+		      yytoken, &yylval);
+	  yychar = YYEMPTY;
+	}
+    }
+
+  /* Else will try to reuse lookahead token after shifting the error
+     token.  */
+  goto yyerrlab1;
+
+
+/*---------------------------------------------------.
+| yyerrorlab -- error raised explicitly by YYERROR.  |
+`---------------------------------------------------*/
+yyerrorlab:
+
+  /* Pacify compilers like GCC when the user code never invokes
+     YYERROR and the label yyerrorlab therefore never appears in user
+     code.  */
+  if (/*CONSTCOND*/ 0)
+     goto yyerrorlab;
+
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYERROR.  */
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+  yystate = *yyssp;
+  goto yyerrlab1;
+
+
+/*-------------------------------------------------------------.
+| yyerrlab1 -- common code for both syntax error and YYERROR.  |
+`-------------------------------------------------------------*/
+yyerrlab1:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+
+  for (;;)
+    {
+      yyn = yypact[yystate];
+      if (yyn != YYPACT_NINF)
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
+
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
+
+
+      yydestruct ("Error: popping",
+		  yystos[yystate], yyvsp);
+      YYPOPSTACK (1);
+      yystate = *yyssp;
+      YY_STACK_PRINT (yyss, yyssp);
+    }
+
+  *++yyvsp = yylval;
+
+
+  /* Shift the error token.  */
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-------------------------------------.
+| yyacceptlab -- YYACCEPT comes here.  |
+`-------------------------------------*/
+yyacceptlab:
+  yyresult = 0;
+  goto yyreturn;
+
+/*-----------------------------------.
+| yyabortlab -- YYABORT comes here.  |
+`-----------------------------------*/
+yyabortlab:
+  yyresult = 1;
+  goto yyreturn;
+
+#if !defined(yyoverflow) || YYERROR_VERBOSE
+/*-------------------------------------------------.
+| yyexhaustedlab -- memory exhaustion comes here.  |
+`-------------------------------------------------*/
+yyexhaustedlab:
+  yyerror (YY_("memory exhausted"));
+  yyresult = 2;
+  /* Fall through.  */
+#endif
+
+yyreturn:
+  if (yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYABORT or YYACCEPT.  */
+  YYPOPSTACK (yylen);
+  YY_STACK_PRINT (yyss, yyssp);
+  while (yyssp != yyss)
+    {
+      yydestruct ("Cleanup: popping",
+		  yystos[*yyssp], yyvsp);
+      YYPOPSTACK (1);
+    }
+#ifndef yyoverflow
+  if (yyss != yyssa)
+    YYSTACK_FREE (yyss);
+#endif
+#if YYERROR_VERBOSE
+  if (yymsg != yymsgbuf)
+    YYSTACK_FREE (yymsg);
 #endif
-#define YYINITSTACKSIZE 200
-/* LINTUSED */
-int yydebug;
-int yynerrs;
-int yyerrflag;
-int yychar;
-short *yyssp;
-YYSTYPE *yyvsp;
-YYSTYPE yyval;
-YYSTYPE yylval;
-short *yyss;
-short *yysslim;
-YYSTYPE *yyvs;
-int yystacksize;
-#line 606 "gram.y"
+  /* Make sure YYID is used.  */
+  return YYID (yyresult);
+}
+
+
+
+/* Line 1675 of yacc.c  */
+#line 614 "gram.y"
+
 static struct defaults *
 new_default(var, val, op)
     char *var;
@@ -823,843 +2884,4 @@ init_parser(path, quiet)
     sudolineno = 1;
     verbose = !quiet;
 }
-#line 775 "y.tab.c"
-/* allocate initial stack or double stack size, up to YYMAXDEPTH */
-#if defined(__cplusplus) || defined(__STDC__)
-static int yygrowstack(void)
-#else
-static int yygrowstack()
-#endif
-{
-    int newsize, i;
-    short *newss;
-    YYSTYPE *newvs;
-
-    if ((newsize = yystacksize) == 0)
-        newsize = YYINITSTACKSIZE;
-    else if (newsize >= YYMAXDEPTH)
-        return -1;
-    else if ((newsize *= 2) > YYMAXDEPTH)
-        newsize = YYMAXDEPTH;
-    i = yyssp - yyss;
-#ifdef SIZE_MAX
-#define YY_SIZE_MAX SIZE_MAX
-#else
-#define YY_SIZE_MAX 0x7fffffff
-#endif
-    if (newsize && YY_SIZE_MAX / newsize < sizeof *newss)
-        goto bail;
-    newss = yyss ? (short *)realloc(yyss, newsize * sizeof *newss) :
-      (short *)malloc(newsize * sizeof *newss); /* overflow check above */
-    if (newss == NULL)
-        goto bail;
-    yyss = newss;
-    yyssp = newss + i;
-    if (newsize && YY_SIZE_MAX / newsize < sizeof *newvs)
-        goto bail;
-    newvs = yyvs ? (YYSTYPE *)realloc(yyvs, newsize * sizeof *newvs) :
-      (YYSTYPE *)malloc(newsize * sizeof *newvs); /* overflow check above */
-    if (newvs == NULL)
-        goto bail;
-    yyvs = newvs;
-    yyvsp = newvs + i;
-    yystacksize = newsize;
-    yysslim = yyss + newsize - 1;
-    return 0;
-bail:
-    if (yyss)
-            free(yyss);
-    if (yyvs)
-            free(yyvs);
-    yyss = yyssp = NULL;
-    yyvs = yyvsp = NULL;
-    yystacksize = 0;
-    return -1;
-}
 
-#define YYABORT goto yyabort
-#define YYREJECT goto yyabort
-#define YYACCEPT goto yyaccept
-#define YYERROR goto yyerrlab
-int
-#if defined(__cplusplus) || defined(__STDC__)
-yyparse(void)
-#else
-yyparse()
-#endif
-{
-    int yym, yyn, yystate;
-#if YYDEBUG
-#if defined(__cplusplus) || defined(__STDC__)
-    const char *yys;
-#else /* !(defined(__cplusplus) || defined(__STDC__)) */
-    char *yys;
-#endif /* !(defined(__cplusplus) || defined(__STDC__)) */
-
-    if ((yys = getenv("YYDEBUG")))
-    {
-        yyn = *yys;
-        if (yyn >= '0' && yyn <= '9')
-            yydebug = yyn - '0';
-    }
-#endif /* YYDEBUG */
-
-    yynerrs = 0;
-    yyerrflag = 0;
-    yychar = (-1);
-
-    if (yyss == NULL && yygrowstack()) goto yyoverflow;
-    yyssp = yyss;
-    yyvsp = yyvs;
-    *yyssp = yystate = 0;
-
-yyloop:
-    if ((yyn = yydefred[yystate]) != 0) goto yyreduce;
-    if (yychar < 0)
-    {
-        if ((yychar = yylex()) < 0) yychar = 0;
-#if YYDEBUG
-        if (yydebug)
-        {
-            yys = 0;
-            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
-            if (!yys) yys = "illegal-symbol";
-            printf("%sdebug: state %d, reading %d (%s)\n",
-                    YYPREFIX, yystate, yychar, yys);
-        }
-#endif
-    }
-    if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
-            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
-    {
-#if YYDEBUG
-        if (yydebug)
-            printf("%sdebug: state %d, shifting to state %d\n",
-                    YYPREFIX, yystate, yytable[yyn]);
-#endif
-        if (yyssp >= yysslim && yygrowstack())
-        {
-            goto yyoverflow;
-        }
-        *++yyssp = yystate = yytable[yyn];
-        *++yyvsp = yylval;
-        yychar = (-1);
-        if (yyerrflag > 0)  --yyerrflag;
-        goto yyloop;
-    }
-    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
-            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
-    {
-        yyn = yytable[yyn];
-        goto yyreduce;
-    }
-    if (yyerrflag) goto yyinrecovery;
-#if defined(lint) || defined(__GNUC__)
-    goto yynewerror;
-#endif
-yynewerror:
-    yyerror("syntax error");
-#if defined(lint) || defined(__GNUC__)
-    goto yyerrlab;
-#endif
-yyerrlab:
-    ++yynerrs;
-yyinrecovery:
-    if (yyerrflag < 3)
-    {
-        yyerrflag = 3;
-        for (;;)
-        {
-            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&
-                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
-            {
-#if YYDEBUG
-                if (yydebug)
-                    printf("%sdebug: state %d, error recovery shifting\
- to state %d\n", YYPREFIX, *yyssp, yytable[yyn]);
-#endif
-                if (yyssp >= yysslim && yygrowstack())
-                {
-                    goto yyoverflow;
-                }
-                *++yyssp = yystate = yytable[yyn];
-                *++yyvsp = yylval;
-                goto yyloop;
-            }
-            else
-            {
-#if YYDEBUG
-                if (yydebug)
-                    printf("%sdebug: error recovery discarding state %d\n",
-                            YYPREFIX, *yyssp);
-#endif
-                if (yyssp <= yyss) goto yyabort;
-                --yyssp;
-                --yyvsp;
-            }
-        }
-    }
-    else
-    {
-        if (yychar == 0) goto yyabort;
-#if YYDEBUG
-        if (yydebug)
-        {
-            yys = 0;
-            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
-            if (!yys) yys = "illegal-symbol";
-            printf("%sdebug: state %d, error recovery discards token %d (%s)\n",
-                    YYPREFIX, yystate, yychar, yys);
-        }
-#endif
-        yychar = (-1);
-        goto yyloop;
-    }
-yyreduce:
-#if YYDEBUG
-    if (yydebug)
-        printf("%sdebug: state %d, reducing by rule %d (%s)\n",
-                YYPREFIX, yystate, yyn, yyrule[yyn]);
-#endif
-    yym = yylen[yyn];
-    if (yym)
-        yyval = yyvsp[1-yym];
-    else
-        memset(&yyval, 0, sizeof yyval);
-    switch (yyn)
-    {
-case 1:
-#line 187 "gram.y"
-{ ; }
-break;
-case 5:
-#line 195 "gram.y"
-{
-			    ;
-			}
-break;
-case 6:
-#line 198 "gram.y"
-{
-			    yyerrok;
-			}
-break;
-case 7:
-#line 201 "gram.y"
-{
-			    add_userspec(yyvsp[-1].member, yyvsp[0].privilege);
-			}
-break;
-case 8:
-#line 204 "gram.y"
-{
-			    ;
-			}
-break;
-case 9:
-#line 207 "gram.y"
-{
-			    ;
-			}
-break;
-case 10:
-#line 210 "gram.y"
-{
-			    ;
-			}
-break;
-case 11:
-#line 213 "gram.y"
-{
-			    ;
-			}
-break;
-case 12:
-#line 216 "gram.y"
-{
-			    add_defaults(DEFAULTS, NULL, yyvsp[0].defaults);
-			}
-break;
-case 13:
-#line 219 "gram.y"
-{
-			    add_defaults(DEFAULTS_USER, yyvsp[-1].member, yyvsp[0].defaults);
-			}
-break;
-case 14:
-#line 222 "gram.y"
-{
-			    add_defaults(DEFAULTS_RUNAS, yyvsp[-1].member, yyvsp[0].defaults);
-			}
-break;
-case 15:
-#line 225 "gram.y"
-{
-			    add_defaults(DEFAULTS_HOST, yyvsp[-1].member, yyvsp[0].defaults);
-			}
-break;
-case 16:
-#line 228 "gram.y"
-{
-			    add_defaults(DEFAULTS_CMND, yyvsp[-1].member, yyvsp[0].defaults);
-			}
-break;
-case 18:
-#line 234 "gram.y"
-{
-			    list_append(yyvsp[-2].defaults, yyvsp[0].defaults);
-			    yyval.defaults = yyvsp[-2].defaults;
-			}
-break;
-case 19:
-#line 240 "gram.y"
-{
-			    yyval.defaults = new_default(yyvsp[0].string, NULL, TRUE);
-			}
-break;
-case 20:
-#line 243 "gram.y"
-{
-			    yyval.defaults = new_default(yyvsp[0].string, NULL, FALSE);
-			}
-break;
-case 21:
-#line 246 "gram.y"
-{
-			    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, TRUE);
-			}
-break;
-case 22:
-#line 249 "gram.y"
-{
-			    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, '+');
-			}
-break;
-case 23:
-#line 252 "gram.y"
-{
-			    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, '-');
-			}
-break;
-case 25:
-#line 258 "gram.y"
-{
-			    list_append(yyvsp[-2].privilege, yyvsp[0].privilege);
-			    yyval.privilege = yyvsp[-2].privilege;
-			}
-break;
-case 26:
-#line 264 "gram.y"
-{
-			    struct privilege *p = emalloc(sizeof(*p));
-			    list2tq(&p->hostlist, yyvsp[-2].member);
-			    list2tq(&p->cmndlist, yyvsp[0].cmndspec);
-			    p->prev = p;
-			    p->next = NULL;
-			    yyval.privilege = p;
-			}
-break;
-case 27:
-#line 274 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = FALSE;
-			}
-break;
-case 28:
-#line 278 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = TRUE;
-			}
-break;
-case 29:
-#line 284 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, ALIAS);
-			}
-break;
-case 30:
-#line 287 "gram.y"
-{
-			    yyval.member = new_member(NULL, ALL);
-			}
-break;
-case 31:
-#line 290 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, NETGROUP);
-			}
-break;
-case 32:
-#line 293 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, NTWKADDR);
-			}
-break;
-case 33:
-#line 296 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, WORD);
-			}
-break;
-case 35:
-#line 302 "gram.y"
-{
-			    list_append(yyvsp[-2].cmndspec, yyvsp[0].cmndspec);
-#ifdef HAVE_SELINUX
-			    /* propagate role and type */
-			    if (yyvsp[0].cmndspec->role == NULL)
-				yyvsp[0].cmndspec->role = yyvsp[0].cmndspec->prev->role;
-			    if (yyvsp[0].cmndspec->type == NULL)
-				yyvsp[0].cmndspec->type = yyvsp[0].cmndspec->prev->type;
-#endif /* HAVE_SELINUX */
-			    /* propagate tags and runas list */
-			    if (yyvsp[0].cmndspec->tags.nopasswd == UNSPEC)
-				yyvsp[0].cmndspec->tags.nopasswd = yyvsp[0].cmndspec->prev->tags.nopasswd;
-			    if (yyvsp[0].cmndspec->tags.noexec == UNSPEC)
-				yyvsp[0].cmndspec->tags.noexec = yyvsp[0].cmndspec->prev->tags.noexec;
-			    if (yyvsp[0].cmndspec->tags.setenv == UNSPEC &&
-				yyvsp[0].cmndspec->prev->tags.setenv != IMPLIED)
-				yyvsp[0].cmndspec->tags.setenv = yyvsp[0].cmndspec->prev->tags.setenv;
-			    if (yyvsp[0].cmndspec->tags.log_input == UNSPEC)
-				yyvsp[0].cmndspec->tags.log_input = yyvsp[0].cmndspec->prev->tags.log_input;
-			    if (yyvsp[0].cmndspec->tags.log_output == UNSPEC)
-				yyvsp[0].cmndspec->tags.log_output = yyvsp[0].cmndspec->prev->tags.log_output;
-			    if ((tq_empty(&yyvsp[0].cmndspec->runasuserlist) &&
-				 tq_empty(&yyvsp[0].cmndspec->runasgrouplist)) &&
-				(!tq_empty(&yyvsp[0].cmndspec->prev->runasuserlist) ||
-				 !tq_empty(&yyvsp[0].cmndspec->prev->runasgrouplist))) {
-				yyvsp[0].cmndspec->runasuserlist = yyvsp[0].cmndspec->prev->runasuserlist;
-				yyvsp[0].cmndspec->runasgrouplist = yyvsp[0].cmndspec->prev->runasgrouplist;
-			    }
-			    yyval.cmndspec = yyvsp[-2].cmndspec;
-			}
-break;
-case 36:
-#line 334 "gram.y"
-{
-			    struct cmndspec *cs = emalloc(sizeof(*cs));
-			    if (yyvsp[-3].runas != NULL) {
-				list2tq(&cs->runasuserlist, yyvsp[-3].runas->runasusers);
-				list2tq(&cs->runasgrouplist, yyvsp[-3].runas->runasgroups);
-				efree(yyvsp[-3].runas);
-			    } else {
-				tq_init(&cs->runasuserlist);
-				tq_init(&cs->runasgrouplist);
-			    }
-#ifdef HAVE_SELINUX
-			    cs->role = yyvsp[-2].seinfo.role;
-			    cs->type = yyvsp[-2].seinfo.type;
-#endif
-			    cs->tags = yyvsp[-1].tag;
-			    cs->cmnd = yyvsp[0].member;
-			    cs->prev = cs;
-			    cs->next = NULL;
-			    /* sudo "ALL" implies the SETENV tag */
-			    if (cs->cmnd->type == ALL && !cs->cmnd->negated &&
-				cs->tags.setenv == UNSPEC)
-				cs->tags.setenv = IMPLIED;
-			    yyval.cmndspec = cs;
-			}
-break;
-case 37:
-#line 360 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = FALSE;
-			}
-break;
-case 38:
-#line 364 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = TRUE;
-			}
-break;
-case 39:
-#line 370 "gram.y"
-{
-			    yyval.string = yyvsp[0].string;
-			}
-break;
-case 40:
-#line 375 "gram.y"
-{
-			    yyval.string = yyvsp[0].string;
-			}
-break;
-case 41:
-#line 380 "gram.y"
-{
-			    yyval.seinfo.role = NULL;
-			    yyval.seinfo.type = NULL;
-			}
-break;
-case 42:
-#line 384 "gram.y"
-{
-			    yyval.seinfo.role = yyvsp[0].string;
-			    yyval.seinfo.type = NULL;
-			}
-break;
-case 43:
-#line 388 "gram.y"
-{
-			    yyval.seinfo.type = yyvsp[0].string;
-			    yyval.seinfo.role = NULL;
-			}
-break;
-case 44:
-#line 392 "gram.y"
-{
-			    yyval.seinfo.role = yyvsp[-1].string;
-			    yyval.seinfo.type = yyvsp[0].string;
-			}
-break;
-case 45:
-#line 396 "gram.y"
-{
-			    yyval.seinfo.type = yyvsp[-1].string;
-			    yyval.seinfo.role = yyvsp[0].string;
-			}
-break;
-case 46:
-#line 402 "gram.y"
-{
-			    yyval.runas = NULL;
-			}
-break;
-case 47:
-#line 405 "gram.y"
-{
-			    yyval.runas = yyvsp[-1].runas;
-			}
-break;
-case 48:
-#line 410 "gram.y"
-{
-			    yyval.runas = emalloc(sizeof(struct runascontainer));
-			    yyval.runas->runasusers = yyvsp[0].member;
-			    yyval.runas->runasgroups = NULL;
-			}
-break;
-case 49:
-#line 415 "gram.y"
-{
-			    yyval.runas = emalloc(sizeof(struct runascontainer));
-			    yyval.runas->runasusers = yyvsp[-2].member;
-			    yyval.runas->runasgroups = yyvsp[0].member;
-			}
-break;
-case 50:
-#line 420 "gram.y"
-{
-			    yyval.runas = emalloc(sizeof(struct runascontainer));
-			    yyval.runas->runasusers = NULL;
-			    yyval.runas->runasgroups = yyvsp[0].member;
-			}
-break;
-case 51:
-#line 427 "gram.y"
-{
-			    yyval.tag.nopasswd = yyval.tag.noexec = yyval.tag.setenv =
-				yyval.tag.log_input = yyval.tag.log_output = UNSPEC;
-			}
-break;
-case 52:
-#line 431 "gram.y"
-{
-			    yyval.tag.nopasswd = TRUE;
-			}
-break;
-case 53:
-#line 434 "gram.y"
-{
-			    yyval.tag.nopasswd = FALSE;
-			}
-break;
-case 54:
-#line 437 "gram.y"
-{
-			    yyval.tag.noexec = TRUE;
-			}
-break;
-case 55:
-#line 440 "gram.y"
-{
-			    yyval.tag.noexec = FALSE;
-			}
-break;
-case 56:
-#line 443 "gram.y"
-{
-			    yyval.tag.setenv = TRUE;
-			}
-break;
-case 57:
-#line 446 "gram.y"
-{
-			    yyval.tag.setenv = FALSE;
-			}
-break;
-case 58:
-#line 449 "gram.y"
-{
-			    yyval.tag.log_input = TRUE;
-			}
-break;
-case 59:
-#line 452 "gram.y"
-{
-			    yyval.tag.log_input = FALSE;
-			}
-break;
-case 60:
-#line 455 "gram.y"
-{
-			    yyval.tag.log_output = TRUE;
-			}
-break;
-case 61:
-#line 458 "gram.y"
-{
-			    yyval.tag.log_output = FALSE;
-			}
-break;
-case 62:
-#line 463 "gram.y"
-{
-			    yyval.member = new_member(NULL, ALL);
-			}
-break;
-case 63:
-#line 466 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, ALIAS);
-			}
-break;
-case 64:
-#line 469 "gram.y"
-{
-			    struct sudo_command *c = emalloc(sizeof(*c));
-			    c->cmnd = yyvsp[0].command.cmnd;
-			    c->args = yyvsp[0].command.args;
-			    yyval.member = new_member((char *)c, COMMAND);
-			}
-break;
-case 67:
-#line 481 "gram.y"
-{
-			    char *s;
-			    if ((s = alias_add(yyvsp[-2].string, HOSTALIAS, yyvsp[0].member)) != NULL) {
-				yyerror(s);
-				YYERROR;
-			    }
-			}
-break;
-case 69:
-#line 491 "gram.y"
-{
-			    list_append(yyvsp[-2].member, yyvsp[0].member);
-			    yyval.member = yyvsp[-2].member;
-			}
-break;
-case 72:
-#line 501 "gram.y"
-{
-			    char *s;
-			    if ((s = alias_add(yyvsp[-2].string, CMNDALIAS, yyvsp[0].member)) != NULL) {
-				yyerror(s);
-				YYERROR;
-			    }
-			}
-break;
-case 74:
-#line 511 "gram.y"
-{
-			    list_append(yyvsp[-2].member, yyvsp[0].member);
-			    yyval.member = yyvsp[-2].member;
-			}
-break;
-case 77:
-#line 521 "gram.y"
-{
-			    char *s;
-			    if ((s = alias_add(yyvsp[-2].string, RUNASALIAS, yyvsp[0].member)) != NULL) {
-				yyerror(s);
-				YYERROR;
-			    }
-			}
-break;
-case 80:
-#line 534 "gram.y"
-{
-			    char *s;
-			    if ((s = alias_add(yyvsp[-2].string, USERALIAS, yyvsp[0].member)) != NULL) {
-				yyerror(s);
-				YYERROR;
-			    }
-			}
-break;
-case 82:
-#line 544 "gram.y"
-{
-			    list_append(yyvsp[-2].member, yyvsp[0].member);
-			    yyval.member = yyvsp[-2].member;
-			}
-break;
-case 83:
-#line 550 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = FALSE;
-			}
-break;
-case 84:
-#line 554 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = TRUE;
-			}
-break;
-case 85:
-#line 560 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, ALIAS);
-			}
-break;
-case 86:
-#line 563 "gram.y"
-{
-			    yyval.member = new_member(NULL, ALL);
-			}
-break;
-case 87:
-#line 566 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, NETGROUP);
-			}
-break;
-case 88:
-#line 569 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, USERGROUP);
-			}
-break;
-case 89:
-#line 572 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, WORD);
-			}
-break;
-case 91:
-#line 578 "gram.y"
-{
-			    list_append(yyvsp[-2].member, yyvsp[0].member);
-			    yyval.member = yyvsp[-2].member;
-			}
-break;
-case 92:
-#line 584 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = FALSE;
-			}
-break;
-case 93:
-#line 588 "gram.y"
-{
-			    yyval.member = yyvsp[0].member;
-			    yyval.member->negated = TRUE;
-			}
-break;
-case 94:
-#line 594 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, ALIAS);
-			}
-break;
-case 95:
-#line 597 "gram.y"
-{
-			    yyval.member = new_member(NULL, ALL);
-			}
-break;
-case 96:
-#line 600 "gram.y"
-{
-			    yyval.member = new_member(yyvsp[0].string, WORD);
-			}
-break;
-#line 1544 "y.tab.c"
-    }
-    yyssp -= yym;
-    yystate = *yyssp;
-    yyvsp -= yym;
-    yym = yylhs[yyn];
-    if (yystate == 0 && yym == 0)
-    {
-#if YYDEBUG
-        if (yydebug)
-            printf("%sdebug: after reduction, shifting from state 0 to\
- state %d\n", YYPREFIX, YYFINAL);
-#endif
-        yystate = YYFINAL;
-        *++yyssp = YYFINAL;
-        *++yyvsp = yyval;
-        if (yychar < 0)
-        {
-            if ((yychar = yylex()) < 0) yychar = 0;
-#if YYDEBUG
-            if (yydebug)
-            {
-                yys = 0;
-                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
-                if (!yys) yys = "illegal-symbol";
-                printf("%sdebug: state %d, reading %d (%s)\n",
-                        YYPREFIX, YYFINAL, yychar, yys);
-            }
-#endif
-        }
-        if (yychar == 0) goto yyaccept;
-        goto yyloop;
-    }
-    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
-            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
-        yystate = yytable[yyn];
-    else
-        yystate = yydgoto[yym];
-#if YYDEBUG
-    if (yydebug)
-        printf("%sdebug: after reduction, shifting from state %d \
-to state %d\n", YYPREFIX, *yyssp, yystate);
-#endif
-    if (yyssp >= yysslim && yygrowstack())
-    {
-        goto yyoverflow;
-    }
-    *++yyssp = yystate;
-    *++yyvsp = yyval;
-    goto yyloop;
-yyoverflow:
-    yyerror("yacc stack overflow");
-yyabort:
-    if (yyss)
-            free(yyss);
-    if (yyvs)
-            free(yyvs);
-    yyss = yyssp = NULL;
-    yyvs = yyvsp = NULL;
-    yystacksize = 0;
-    return (1);
-yyaccept:
-    if (yyss)
-            free(yyss);
-    if (yyvs)
-            free(yyvs);
-    yyss = yyssp = NULL;
-    yyvs = yyvsp = NULL;
-    yystacksize = 0;
-    return (0);
-}
--- a/gram.h
+++ b/gram.h
@@ -1,37 +1,124 @@
-#define COMMAND 257
-#define ALIAS 258
-#define DEFVAR 259
-#define NTWKADDR 260
-#define NETGROUP 261
-#define USERGROUP 262
-#define WORD 263
-#define DEFAULTS 264
-#define DEFAULTS_HOST 265
-#define DEFAULTS_USER 266
-#define DEFAULTS_RUNAS 267
-#define DEFAULTS_CMND 268
-#define NOPASSWD 269
-#define PASSWD 270
-#define NOEXEC 271
-#define EXEC 272
-#define SETENV 273
-#define NOSETENV 274
-#define LOG_INPUT 275
-#define NOLOG_INPUT 276
-#define LOG_OUTPUT 277
-#define NOLOG_OUTPUT 278
-#define ALL 279
-#define COMMENT 280
-#define HOSTALIAS 281
-#define CMNDALIAS 282
-#define USERALIAS 283
-#define RUNASALIAS 284
-#define ERROR 285
-#define TYPE 286
-#define ROLE 287
-#ifndef YYSTYPE_DEFINED
-#define YYSTYPE_DEFINED
-typedef union {
+
+/* A Bison parser, made by GNU Bison 2.4.1.  */
+
+/* Skeleton interface for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* As a special exception, you may create a larger work that contains
+   part or all of the Bison parser skeleton and distribute that work
+   under terms of your choice, so long as that work isn't itself a
+   parser generator using the skeleton or a modified version thereof
+   as a parser skeleton.  Alternatively, if you modify or redistribute
+   the parser skeleton itself, you may (at your option) remove this
+   special exception, which will cause the skeleton and the resulting
+   Bison output files to be licensed under the GNU General Public
+   License without this special exception.
+   
+   This special exception was added by the Free Software Foundation in
+   version 2.2 of Bison.  */
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     COMMAND = 258,
+     ALIAS = 259,
+     DEFVAR = 260,
+     NTWKADDR = 261,
+     NETGROUP = 262,
+     USERGROUP = 263,
+     WORD = 264,
+     DEFAULTS = 265,
+     DEFAULTS_HOST = 266,
+     DEFAULTS_USER = 267,
+     DEFAULTS_RUNAS = 268,
+     DEFAULTS_CMND = 269,
+     NOPASSWD = 270,
+     PASSWD = 271,
+     NOEXEC = 272,
+     EXEC = 273,
+     SETENV = 274,
+     NOSETENV = 275,
+     LOG_INPUT = 276,
+     NOLOG_INPUT = 277,
+     LOG_OUTPUT = 278,
+     NOLOG_OUTPUT = 279,
+     FOLLOW = 280,
+     NOFOLLOW = 281,
+     ALL = 282,
+     COMMENT = 283,
+     HOSTALIAS = 284,
+     CMNDALIAS = 285,
+     USERALIAS = 286,
+     RUNASALIAS = 287,
+     ERROR = 288,
+     TYPE = 289,
+     ROLE = 290
+   };
+#endif
+/* Tokens.  */
+#define COMMAND 258
+#define ALIAS 259
+#define DEFVAR 260
+#define NTWKADDR 261
+#define NETGROUP 262
+#define USERGROUP 263
+#define WORD 264
+#define DEFAULTS 265
+#define DEFAULTS_HOST 266
+#define DEFAULTS_USER 267
+#define DEFAULTS_RUNAS 268
+#define DEFAULTS_CMND 269
+#define NOPASSWD 270
+#define PASSWD 271
+#define NOEXEC 272
+#define EXEC 273
+#define SETENV 274
+#define NOSETENV 275
+#define LOG_INPUT 276
+#define NOLOG_INPUT 277
+#define LOG_OUTPUT 278
+#define NOLOG_OUTPUT 279
+#define FOLLOW 280
+#define NOFOLLOW 281
+#define ALL 282
+#define COMMENT 283
+#define HOSTALIAS 284
+#define CMNDALIAS 285
+#define USERALIAS 286
+#define RUNASALIAS 287
+#define ERROR 288
+#define TYPE 289
+#define ROLE 290
+
+
+
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+{
+
+/* Line 1676 of yacc.c  */
+#line 112 "gram.y"
+
     struct cmndspec *cmndspec;
     struct defaults *defaults;
     struct member *member;
@@ -42,6 +129,17 @@ typedef union {
     struct selinux_info seinfo;
     char *string;
     int tok;
+
+
+
+/* Line 1676 of yacc.c  */
+#line 137 "y.tab.h"
 } YYSTYPE;
-#endif /* YYSTYPE_DEFINED */
+# define YYSTYPE_IS_TRIVIAL 1
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+#endif
+
 extern YYSTYPE yylval;
+
+
--- a/toke.c
+++ b/toke.c
@@ -1,70 +1,113 @@
-/*	$OpenBSD: flex.skl,v 1.10 2007/01/26 14:38:19 tsi Exp $	*/
 
-/* A lexical scanner generated by flex */
+#line 3 "lex.yy.c"
 
-/* Scanner skeleton version:
- * $Header: /home/cvs/openbsd/src/usr.bin/lex/flex.skl,v 1.10 2007/01/26 14:38:19 tsi Exp $
- */
+#define  YY_INT_ALIGNED short int
+
+/* A lexical scanner generated by flex */
 
 #define FLEX_SCANNER
 #define YY_FLEX_MAJOR_VERSION 2
 #define YY_FLEX_MINOR_VERSION 5
+#define YY_FLEX_SUBMINOR_VERSION 35
+#if YY_FLEX_SUBMINOR_VERSION > 0
+#define FLEX_BETA
+#endif
+
+/* First, we deal with  platform-specific or compiler-specific issues. */
 
+/* begin standard C headers. */
 #include <stdio.h>
+#include <string.h>
 #include <errno.h>
+#include <stdlib.h>
 
+/* end standard C headers. */
 
-/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
-#ifdef c_plusplus
-#ifndef __cplusplus
-#define __cplusplus
-#endif
+/* flex integer type definitions */
+
+#ifndef FLEXINT_H
+#define FLEXINT_H
+
+/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
+
+#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
+
+/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
+ * if you want the limit (max/min) macros for int types. 
+ */
+#ifndef __STDC_LIMIT_MACROS
+#define __STDC_LIMIT_MACROS 1
 #endif
 
+#include <inttypes.h>
+typedef int8_t flex_int8_t;
+typedef uint8_t flex_uint8_t;
+typedef int16_t flex_int16_t;
+typedef uint16_t flex_uint16_t;
+typedef int32_t flex_int32_t;
+typedef uint32_t flex_uint32_t;
+#else
+typedef signed char flex_int8_t;
+typedef short int flex_int16_t;
+typedef int flex_int32_t;
+typedef unsigned char flex_uint8_t; 
+typedef unsigned short int flex_uint16_t;
+typedef unsigned int flex_uint32_t;
 
-#ifdef __cplusplus
+/* Limits of integral types. */
+#ifndef INT8_MIN
+#define INT8_MIN               (-128)
+#endif
+#ifndef INT16_MIN
+#define INT16_MIN              (-32767-1)
+#endif
+#ifndef INT32_MIN
+#define INT32_MIN              (-2147483647-1)
+#endif
+#ifndef INT8_MAX
+#define INT8_MAX               (127)
+#endif
+#ifndef INT16_MAX
+#define INT16_MAX              (32767)
+#endif
+#ifndef INT32_MAX
+#define INT32_MAX              (2147483647)
+#endif
+#ifndef UINT8_MAX
+#define UINT8_MAX              (255U)
+#endif
+#ifndef UINT16_MAX
+#define UINT16_MAX             (65535U)
+#endif
+#ifndef UINT32_MAX
+#define UINT32_MAX             (4294967295U)
+#endif
 
-#include <stdlib.h>
-#include <unistd.h>
+#endif /* ! C99 */
+
+#endif /* ! FLEXINT_H */
 
-/* Use prototypes in function declarations. */
-#define YY_USE_PROTOS
+#ifdef __cplusplus
 
 /* The "const" storage-class-modifier is valid. */
 #define YY_USE_CONST
 
 #else	/* ! __cplusplus */
 
-#ifdef __STDC__
+/* C99 requires __STDC__ to be defined as 1. */
+#if defined (__STDC__)
 
-#define YY_USE_PROTOS
 #define YY_USE_CONST
 
-#endif	/* __STDC__ */
+#endif	/* defined (__STDC__) */
 #endif	/* ! __cplusplus */
 
-#ifdef __TURBOC__
- #pragma warn -rch
- #pragma warn -use
-#include <io.h>
-#include <stdlib.h>
-#define YY_USE_CONST
-#define YY_USE_PROTOS
-#endif
-
 #ifdef YY_USE_CONST
 #define yyconst const
 #else
 #define yyconst
 #endif
 
-
-#ifdef YY_USE_PROTOS
-#define YY_PROTO(proto) proto
-#else
-#define YY_PROTO(proto) ()
-#endif
-
 /* Returned upon end-of-file. */
 #define YY_NULL 0
 
@@ -79,71 +122,78 @@
  * but we do it the disgusting crufty way forced on us by the ()-less
  * definition of BEGIN.
  */
-#define BEGIN yy_start = 1 + 2 *
+#define BEGIN (yy_start) = 1 + 2 *
 
 /* Translate the current start state into a value that can be later handed
  * to BEGIN to return to the state.  The YYSTATE alias is for lex
  * compatibility.
  */
-#define YY_START ((yy_start - 1) / 2)
+#define YY_START (((yy_start) - 1) / 2)
 #define YYSTATE YY_START
 
 /* Action number for EOF rule of a given start state. */
 #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
 
 /* Special action meaning "start processing a new file". */
-#define YY_NEW_FILE yyrestart( yyin )
+#define YY_NEW_FILE yyrestart(yyin  )
 
 #define YY_END_OF_BUFFER_CHAR 0
 
 /* Size of default input buffer. */
+#ifndef YY_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k.
+ * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
+ * Ditto for the __ia64__ case accordingly.
+ */
+#define YY_BUF_SIZE 32768
+#else
 #define YY_BUF_SIZE 16384
+#endif /* __ia64__ */
+#endif
 
+/* The state buf must be large enough to hold one state per character in the main buffer.
+ */
+#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
+
+#ifndef YY_TYPEDEF_YY_BUFFER_STATE
+#define YY_TYPEDEF_YY_BUFFER_STATE
 typedef struct yy_buffer_state *YY_BUFFER_STATE;
+#endif
 
 extern int yyleng;
+
 extern FILE *yyin, *yyout;
 
 #define EOB_ACT_CONTINUE_SCAN 0
 #define EOB_ACT_END_OF_FILE 1
 #define EOB_ACT_LAST_MATCH 2
 
-/* The funky do-while in the following #define is used to turn the definition
- * int a single C statement (which needs a semi-colon terminator).  This
- * avoids problems with code like:
- *
- * 	if ( condition_holds )
- *		yyless( 5 );
- *	else
- *		do_something_else();
- *
- * Prior to using the do-while the compiler would get upset at the
- * "else" because it interpreted the "if" statement as being all
- * done when it reached the ';' after the yyless() call.
- */
-
-/* Return all but the first 'n' matched characters back to the input stream. */
-
+    #define YY_LESS_LINENO(n)
+    
+/* Return all but the first "n" matched characters back to the input stream. */
 #define yyless(n) \
 	do \
 		{ \
 		/* Undo effects of setting up yytext. */ \
-		*yy_cp = yy_hold_char; \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		*yy_cp = (yy_hold_char); \
 		YY_RESTORE_YY_MORE_OFFSET \
-		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
+		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
 		} \
 	while ( 0 )
 
-#define unput(c) yyunput( c, yytext_ptr )
-
-/* The following is because we cannot portably get our hands on size_t
- * (without autoconf's help, which isn't available because we want
- * flex-generated scanners to compile on their own).
- */
-typedef unsigned int yy_size_t;
+#define unput(c) yyunput( c, (yytext_ptr)  )
 
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef size_t yy_size_t;
+#endif
 
+#ifndef YY_STRUCT_YY_BUFFER_STATE
+#define YY_STRUCT_YY_BUFFER_STATE
 struct yy_buffer_state
 	{
 	FILE *yy_input_file;
@@ -180,12 +230,16 @@ struct yy_buffer_state
 	 */
 	int yy_at_bol;
 
+    int yy_bs_lineno; /**< The line count. */
+    int yy_bs_column; /**< The column count. */
+    
 	/* Whether to try to fill the input buffer when we reach the
 	 * end of it.
 	 */
 	int yy_fill_buffer;
 
 	int yy_buffer_status;
+
 #define YY_BUFFER_NEW 0
 #define YY_BUFFER_NORMAL 1
 	/* When an EOF's been seen but there's still some text to process
@@ -199,28 +253,38 @@ struct yy_buffer_state
 	 * just pointing yyin at a new input file.
 	 */
 #define YY_BUFFER_EOF_PENDING 2
+
 	};
+#endif /* !YY_STRUCT_YY_BUFFER_STATE */
 
-static YY_BUFFER_STATE yy_current_buffer = 0;
+/* Stack of input buffers. */
+static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
+static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
+static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
 
 /* We provide macros for accessing buffer states in case in the
  * future we want to put the buffer states in a more general
  * "scanner state".
+ *
+ * Returns the top of the stack, or NULL.
  */
-#define YY_CURRENT_BUFFER yy_current_buffer
+#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
+                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
+                          : NULL)
 
+/* Same as previous macro, but useful when we know that the buffer stack is not
+ * NULL or when we need an lvalue. For internal use only.
+ */
+#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
 
 /* yy_hold_char holds the character lost when yytext is formed. */
 static char yy_hold_char;
-
 static int yy_n_chars;		/* number of characters read into yy_ch_buf */
-
-
 int yyleng;
 
 /* Points to current character in buffer. */
 static char *yy_c_buf_p = (char *) 0;
-static int yy_init = 1;		/* whether we need to initialize */
+static int yy_init = 0;		/* whether we need to initialize */
 static int yy_start = 0;	/* start state number */
 
 /* Flag which is used to allow yywrap()'s to do buffer switches
@@ -228,134 +292,161 @@ static int yy_start = 0;	/* start state
  */
 static int yy_did_buffer_switch_on_eof;
 
-void yyrestart YY_PROTO(( FILE *input_file ));
-
-void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
-void yy_load_buffer_state YY_PROTO(( void ));
-YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
-void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
-void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
-void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
-#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
-
-YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
-YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
-YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
-
-static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
-static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
-static void yy_flex_free YY_PROTO(( void * ));
+void yyrestart (FILE *input_file  );
+void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
+YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
+void yy_delete_buffer (YY_BUFFER_STATE b  );
+void yy_flush_buffer (YY_BUFFER_STATE b  );
+void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
+void yypop_buffer_state (void );
+
+static void yyensure_buffer_stack (void );
+static void yy_load_buffer_state (void );
+static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
+
+#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
+
+YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
+YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
+YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
+
+void *yyalloc (yy_size_t  );
+void *yyrealloc (void *,yy_size_t  );
+void yyfree (void *  );
 
 #define yy_new_buffer yy_create_buffer
 
 #define yy_set_interactive(is_interactive) \
 	{ \
-	if ( ! yy_current_buffer ) \
-		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
-	yy_current_buffer->yy_is_interactive = is_interactive; \
+	if ( ! YY_CURRENT_BUFFER ){ \
+        yyensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            yy_create_buffer(yyin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
 	}
 
 #define yy_set_bol(at_bol) \
 	{ \
-	if ( ! yy_current_buffer ) \
-		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
-	yy_current_buffer->yy_at_bol = at_bol; \
+	if ( ! YY_CURRENT_BUFFER ){\
+        yyensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            yy_create_buffer(yyin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
 	}
 
-#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)
+#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
 
+/* Begin user sect3 */
 
-#define yywrap() 1
+#define yywrap(n) 1
 #define YY_SKIP_YYWRAP
+
 typedef unsigned char YY_CHAR;
+
 FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
+
 typedef int yy_state_type;
+
+extern int yylineno;
+
+int yylineno = 1;
+
 extern char *yytext;
 #define yytext_ptr yytext
 
-static yy_state_type yy_get_previous_state YY_PROTO(( void ));
-static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
-static int yy_get_next_buffer YY_PROTO(( void ));
-static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));
+static yy_state_type yy_get_previous_state (void );
+static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
+static int yy_get_next_buffer (void );
+static void yy_fatal_error (yyconst char msg[]  );
 
 /* Done after the current pattern has been matched and before the
  * corresponding action - sets up yytext.
  */
 #define YY_DO_BEFORE_ACTION \
-	yytext_ptr = yy_bp; \
-	yyleng = (int) (yy_cp - yy_bp); \
-	yy_hold_char = *yy_cp; \
+	(yytext_ptr) = yy_bp; \
+	yyleng = (size_t) (yy_cp - yy_bp); \
+	(yy_hold_char) = *yy_cp; \
 	*yy_cp = '\0'; \
-	yy_c_buf_p = yy_cp;
+	(yy_c_buf_p) = yy_cp;
 
-#define YY_NUM_RULES 50
-#define YY_END_OF_BUFFER 51
-static yyconst short int yy_accept[555] =
+#define YY_NUM_RULES 52
+#define YY_END_OF_BUFFER 53
+/* This struct is not used in this scanner,
+   but its presence is necessary. */
+struct yy_trans_info
+	{
+	flex_int32_t yy_verify;
+	flex_int32_t yy_nxt;
+	};
+static yyconst flex_int16_t yy_accept[571] =
     {   0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,   51,   38,   46,   45,   44,   38,   49,   38,
-       39,   40,   38,   41,   38,   38,   38,   38,   43,   42,
-       49,   33,   33,   33,   33,   33,   33,   49,   38,   38,
-       46,   49,   33,   33,   33,   33,   33,    1,   49,   38,
-       38,   16,   15,   16,   15,   15,   49,   49,   49,    2,
-        8,    7,    8,    3,    8,    4,   49,   12,   12,   12,
-       10,   11,   38,    0,   46,   44,   38,    0,    0,    0,
-       48,    0,   38,   28,    0,    0,   27,    0,   36,   36,
-        0,   38,   38,    0,   38,   38,   38,   38,    0,   31,
-
-       33,   33,   33,   33,   33,   33,   38,   47,   38,   46,
-        0,    0,    0,    0,    0,    0,   38,   38,   38,   38,
-       38,    1,    0,   34,   34,    0,   38,   16,   16,   14,
-       13,   14,    0,    0,    2,    8,    0,    5,    6,    8,
-        8,   12,    0,   12,   12,    0,    9,   37,   37,    0,
-        0,   28,    0,    0,   38,   38,   38,   38,   38,    0,
-        0,   31,   31,   33,   33,   33,   33,   33,   33,   33,
-       38,    0,    0,    0,    0,    0,    0,   38,   38,   38,
-       38,   38,    0,   38,    9,    0,   38,   38,   38,   38,
-       38,   38,    0,   32,   32,   32,    0,    0,   31,   31,
-
-       31,   31,   31,   31,   31,   33,   33,   33,   33,   33,
-       33,   33,   38,    0,    0,    0,    0,    0,    0,   38,
-       38,   38,   38,   38,   38,   38,    0,    0,   32,   32,
-       32,    0,   31,   31,    0,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,    0,   24,   33,   33,
-       33,   33,   33,   38,    0,    0,    0,    0,   38,   38,
-       38,   38,   38,   38,   38,   38,    0,   32,    0,   31,
-       31,   31,    0,    0,    0,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   31,   33,   33,
-       33,   33,   33,   38,    0,    0,    0,   38,   38,   38,
-
-       29,   29,   29,    0,    0,   31,   31,   31,   31,   31,
-       31,   31,    0,    0,    0,    0,    0,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
-       31,    0,   23,   33,   33,    0,   22,    0,   25,   38,
-        0,    0,    0,   38,   38,   38,   38,   29,   29,   29,
-       29,    0,   31,    0,   31,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,    0,    0,    0,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
-       31,   33,   33,   35,    0,    0,    0,   38,   19,   34,
-       38,   30,   30,   30,   31,    0,    0,    0,   31,   31,
-
-       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
-       31,    0,    0,    0,    0,    0,   31,   31,   31,   31,
-       31,   31,   31,   31,    0,   21,    0,   26,    0,   19,
-        0,    0,   38,    0,   38,   38,   38,   30,   30,   30,
-       30,   30,    0,    0,    0,    0,    0,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,    0,    0,    0,
-       20,   19,    0,    0,   19,    0,   38,   38,   38,   30,
-       30,    0,    0,    0,   31,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
-
-       31,   31,   20,    0,   17,    0,   38,   38,   38,   38,
-       38,    0,    0,    0,    0,    0,   31,   31,   31,   31,
-       31,   31,   31,   31,    0,   38,   38,   38,   31,   31,
-       31,   31,   31,   31,    0,   38,   38,   38,   38,   38,
-       31,   31,   31,   31,   31,    0,   18,   29,   29,   29,
-       29,   29,   29,    0
+        0,    0,   53,   40,   48,   47,   46,   40,   51,   40,
+       41,   42,   40,   43,   40,   40,   40,   40,   45,   44,
+       51,   35,   35,   35,   35,   35,   35,   35,   51,   40,
+       40,   48,   51,   35,   35,   35,   35,   35,    1,   51,
+       40,   40,   16,   15,   16,   15,   15,   51,   51,   51,
+        2,    8,    7,    8,    3,    8,    4,   51,   12,   12,
+       12,   10,   11,   40,    0,   48,   46,   40,    0,    0,
+        0,   50,    0,   40,   30,    0,    0,   29,    0,   38,
+       38,    0,   40,   40,    0,   40,   40,   40,   40,    0,
+
+       33,   35,   35,   35,   35,   35,   35,   35,   40,   49,
+       40,   48,    0,    0,    0,    0,    0,    0,   40,   40,
+       40,   40,   40,    1,    0,   36,   36,    0,   40,   16,
+       16,   14,   13,   14,    0,    0,    2,    8,    0,    5,
+        6,    8,    8,   12,    0,   12,   12,    0,    9,   39,
+       39,    0,    0,   30,    0,    0,   40,   40,   40,   40,
+       40,    0,    0,   33,   33,   35,   35,   35,   35,   35,
+       35,   35,   35,   35,   40,    0,    0,    0,    0,    0,
+        0,   40,   40,   40,   40,   40,    0,   40,    9,    0,
+       40,   40,   40,   40,   40,   40,    0,   34,   34,   34,
+
+        0,    0,   33,   33,   33,   33,   33,   33,   33,   35,
+       35,   35,   35,   35,   35,   35,   35,   35,   40,    0,
+        0,    0,    0,    0,    0,   40,   40,   40,   40,   40,
+       40,   40,    0,    0,   34,   34,   34,    0,   33,   33,
+        0,   33,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,    0,   24,   35,   35,   35,   35,   35,   35,
+       35,   40,    0,    0,    0,    0,   40,   40,   40,   40,
+       40,   40,   40,   40,    0,   34,    0,   33,   33,   33,
+        0,    0,    0,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,   33,   33,   33,   35,   35,   35,   35,
+
+       35,   35,   35,   40,    0,    0,    0,   40,   40,   40,
+       31,   31,   31,    0,    0,   33,   33,   33,   33,   33,
+       33,   33,    0,    0,    0,    0,    0,   33,   33,   33,
+       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,    0,   27,    0,   23,   35,   35,   35,    0,   22,
+        0,   25,   40,    0,    0,    0,   40,   40,   40,   40,
+       31,   31,   31,   31,    0,   33,    0,   33,   33,   33,
+       33,   33,   33,   33,   33,   33,   33,   33,    0,    0,
+        0,   33,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,   33,   35,   35,   35,   37,    0,    0,
+
+        0,   40,   19,   36,   40,   32,   32,   32,   33,    0,
+        0,    0,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,   33,   33,    0,    0,    0,    0,    0,
+       33,   33,   33,   33,   33,   33,   33,   33,    0,   28,
+        0,   21,    0,   26,    0,   19,    0,    0,   40,    0,
+       40,   40,   40,   32,   32,   32,   32,   32,    0,    0,
+        0,    0,    0,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,    0,    0,    0,   20,   19,    0,    0,
+       19,    0,   40,   40,   40,   32,   32,    0,    0,    0,
+
+       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
+       33,   33,   33,   33,   33,   33,   33,   33,   20,    0,
+       17,    0,   40,   40,   40,   40,   40,    0,    0,    0,
+        0,    0,   33,   33,   33,   33,   33,   33,   33,   33,
+        0,   40,   40,   40,   33,   33,   33,   33,   33,   33,
+        0,   40,   40,   40,   40,   40,   33,   33,   33,   33,
+       33,    0,   18,   31,   31,   31,   31,   31,   31,    0
     } ;
 
-static yyconst int yy_ec[256] =
+static yyconst flex_int32_t yy_ec[256] =
     {   0,
         1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -363,14 +454,14 @@ static yyconst int yy_ec[256] =
         1,    2,    4,    5,    6,    1,    7,    1,    1,    8,
         9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
        19,   20,   21,   22,   22,   22,   23,   24,    1,    1,
-       25,   26,   10,   27,   28,   29,   30,   31,   32,   29,
-       33,   34,   33,   33,   33,   33,   33,   35,   36,   37,
-       33,   38,   39,   40,   41,   42,   43,   44,   33,   33,
-       10,   45,   10,    1,   46,    1,   47,   48,   49,   50,
-
-       51,   52,   53,   53,   54,   53,   53,   55,   56,   57,
-       58,   53,   53,   59,   60,   61,   62,   53,   53,   53,
-       53,   53,    1,    1,    1,    1,    1,    1,    1,    1,
+       25,   26,   10,   27,   28,   29,   30,   31,   32,   33,
+       34,   35,   34,   34,   34,   36,   34,   37,   38,   39,
+       34,   40,   41,   42,   43,   44,   45,   46,   34,   34,
+       10,   47,   10,    1,   48,    1,   49,   50,   51,   52,
+
+       53,   54,   55,   55,   56,   55,   55,   57,   58,   59,
+       60,   55,   55,   61,   62,   63,   64,   55,   55,   55,
+       55,   55,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -387,563 +478,567 @@ static yyconst int yy_ec[256] =
         1,    1,    1,    1,    1
     } ;
 
-static yyconst int yy_meta[63] =
+static yyconst flex_int32_t yy_meta[65] =
     {   0,
         1,    2,    3,    4,    5,    2,    1,    6,    6,    1,
         1,    2,    1,    7,    8,    9,    9,    9,    9,    9,
         9,    9,    9,   10,   11,    6,    1,    9,    9,    9,
-        9,    9,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    1,    1,   12,   13,   14,   14,   14,   14,
-       14,   14,   13,   13,   13,   13,   13,   13,   13,   13,
-       13,   13
+        9,    9,    9,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,   12,   13,   14,   14,
+       14,   14,   14,   14,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13
     } ;
 
-static yyconst short int yy_base[621] =
+static yyconst flex_int16_t yy_base[638] =
     {   0,
-        0,   61,   62,   63,   69,   84,  128,  189,  250,  294,
-       80,  101, 2394, 2348, 2390, 3541, 2387,  338,  381,   52,
-     3541, 3541, 2345, 3541,  107,  391,  119,  137, 2351, 3541,
-     3541,  443, 2330,  490, 2337, 2335, 2320,  541,  145,   55,
-      167,  565, 2293, 2297, 2289, 2258, 2257, 2314,  193,  256,
-       56,    0, 3541, 2311, 3541,    0,  264,  617,   77,    0,
-     2261, 3541,   82, 3541,   99, 3541,  110, 2243,  126,  106,
-     3541,  145, 2240,  306, 2282, 2279,  639, 2277, 2276, 2263,
-     3541,  201,  209,   74, 2211,  347, 2208,  550,  276, 2199,
-      587,  410,  669, 2210, 2210,  306,  358,  317, 2163,  179,
-
-      706,    0, 2154,  240, 2111, 2109,  389, 3541,   76,  355,
-     2082, 2076, 2066, 2061, 2062,   63,  115,  219,   29,  212,
-       98, 2116,  507,  361, 2071,  598,  154,    0, 2111,  256,
-     3541, 3541,  636,  284,    0, 2069,  567, 3541, 3541, 2066,
-      532, 2050, 2087,  271,  300,  288, 2089, 2038, 3541, 2057,
-     2055, 1986,  669,  603,  745,  777,  809,  841, 2014, 2003,
-      878,  268,  916,  953, 1996, 1980, 1971, 1945, 1911, 1915,
-      236, 1862, 1866, 1856, 1843, 1848,  317,  157, 1851,  307,
-      266,  258,  777,  296, 1880, 1877,  686,  402,  992, 1024,
-      725,  337, 1839, 1838,  787,  499, 1782, 1781,  343,  755,
-
-     1056,  796,  694, 1094,  819, 1745,  393, 1736, 1728, 1711,
-     1707, 1697,  373, 1681, 1666, 1651, 1664, 1623,  543,  400,
-      556,  233,  506, 1133, 1165, 1197, 1657, 1655,  827, 1640,
-     1638, 1637, 1621,  540,  858,  546,  895,  602, 1229,    0,
-      935, 1240,  970,  731, 1278, 1002,  601, 3541, 1614, 1604,
-     1610, 1595, 1583,  486, 1565, 1548, 1548,  387,  343,  380,
-      616, 1010,  423, 1317, 1349, 1044, 1555, 1554, 1553, 1506,
-     1379,  645, 1076, 1113, 1143,  652,  983, 1035, 1151, 1042,
-     1418,    0, 1175, 1429, 1184,  866, 1467, 1207,  644, 1451,
-     1458,  648,  672,  625, 1447, 1419,  680,  576,  487,  715,
-
-     1505, 1536, 1567, 1449, 1447, 1432, 1215, 1599, 1257,  903,
-     1636, 1297, 1325, 1441, 1335, 1359, 1369,  841, 1024, 1067,
-     1124, 1396, 1308, 1675,    0, 1448, 1686, 1484, 1265, 1724,
-     1515,  955, 3541, 1423, 1364,  956, 3541,  975, 3541,  807,
-     1350, 1300,  591, 1074,  569,  917, 1523,  155, 1762, 1793,
-     1546, 1336, 1300, 1553,  768, 1576,  810, 1825,    0,  429,
-     1836, 1584, 1404, 1873, 1618, 1655, 1705, 1743, 1288, 1335,
-     1734, 1772, 1772, 1803, 1912,    0, 1805, 1923, 1781, 1492,
-     1814,  993, 1156, 1276, 1251, 1244,  730,  635, 1952, 1222,
-     1984, 2016, 2048, 2080, 1242, 1855, 1892, 1943, 1241, 1184,
-
-     1198, 1964, 1350, 2112,    0,  762, 2123, 1972, 1992, 2160,
-     2000, 2024, 1227, 2034, 2058, 2068, 1369, 1609, 1934,  772,
-      806, 2199,    0,  844, 1173, 3541, 1468, 3541, 1192, 2086,
-     1389,  142,  991,  604,  736, 2140, 1038, 2209, 2241, 2273,
-     2305, 2103, 2177, 1163, 2219, 2229, 2251, 1152, 1116, 1656,
-     1706, 2257, 1837, 2337,    0,  881, 2348, 2281, 2088, 2385,
-     2291, 2314, 2323, 2366, 1855, 1122,  927, 1042, 1031,  902,
-      951,  990, 1725, 2416, 1836, 2437, 2450, 2482, 2514, 2434,
-     1951, 2464, 2492, 2502,  936,  919, 1893, 2001, 2522, 2035,
-     2546,    0, 1031, 2557, 2530, 2148, 2576,  838, 2595, 2604,
-
-     2473,  773, 3541,  659, 3541, 1065, 2612, 1195, 2644, 2676,
-     2623, 2629,  618, 2655, 2665, 2686,  573,  566, 2049,  557,
-      549, 2694,    0, 1078, 1545, 2708, 2740, 2772, 2716, 2724,
-     2748,  509,    0,  455,  357, 2756, 1535, 2804, 2836, 2786,
-     3541, 2792, 2816, 2185, 3541,  345, 3541, 2824, 2844, 2854,
-       25, 2874, 2866, 3541, 2919, 2933, 2947, 2961, 2975, 2989,
-     3003, 3017, 3031, 3045, 3051, 3065, 3079, 1107, 3093, 3107,
-     3121, 3135, 3149, 3163, 3177, 3191, 3197, 3204, 3218, 3232,
-     3238, 3245, 3251, 3257, 3263, 3270, 3276, 3282, 3288, 3295,
-     3303, 3309, 3315, 3321, 3328, 3336, 3342, 3348, 3355, 3363,
-
-     3369, 3377, 3384, 3392, 3398, 3406, 3413, 3421, 3435, 3449,
-     3455, 3463, 3470, 3484, 3490, 3498, 3504, 3512, 1600, 3526
+        0,   63,   64,   65,   71,   85,  131,  194,  257,  303,
+       97,  109, 2558, 2510, 2548, 3539, 2536,  349,  394,   57,
+     3539, 3539, 2492, 3539,  112,  404,  129,  144, 2505, 3539,
+     3539,  458, 2478, 2485,  507, 2484, 2467, 2455,  560,  152,
+       21,  174,  584, 2428, 2432, 2424, 2419, 2412, 2464,  202,
+      263,   43,    0, 3539, 2461, 3539,    0,  271,  638,  120,
+        0, 2417, 3539,   61, 3539,   92, 3539,  122, 2407,   82,
+       68, 3539,  138, 2396,  204, 2438, 2435,  660, 2425, 2415,
+     2406, 3539,  215,  303,   58, 2359,  334, 2358,  360,  323,
+     2349,  436,  372,  692, 2351, 2357,  360,  382,  281, 2346,
+
+      104,  731,    0, 2335, 2329,  246, 2323, 2321,  152, 3539,
+       84,  540, 2303, 2288, 2277, 2272, 2271,  285,   83,  153,
+      164,  180,  233, 2329,  527,  569, 2283,  606,  106,    0,
+     2325,  199, 3539, 3539,  603,  262,    0, 2280,  586, 3539,
+     3539, 2279,  288, 2278, 2302,  264,  290,  290, 2287, 2241,
+     3539, 2284, 2283, 2238,  669,  677,  772,  806,  840,  874,
+     2270, 2244,  913,  288,  953,  992, 2237, 2230, 2183, 2190,
+     2199, 2185, 2165, 2171,  270, 2143, 2147, 2138, 2140, 2137,
+      336,  282, 2123,   29,  298,  382,  694,  305, 2133, 2131,
+      627,  392, 1033, 1067,  718,  309, 2108, 2107,  750,  516,
+
+     2100, 2090,  426,  780, 1101,  788,  617, 1141,  816, 2080,
+      339, 2063, 2068, 2062, 2021, 1996, 1965, 1952,  399, 1936,
+     1922, 1907, 1920, 1906,  310,  361,  529,  402,  543, 1182,
+     1216, 1250, 1926, 1925,  824, 1901, 1899, 1897, 1865,  550,
+      848,  673,  856,  702, 1284,    0,  408, 1295,  892,  796,
+     1335,  933,  565, 3539, 1842, 1823, 1815, 1809, 1817, 1799,
+     1769,  547, 1764, 1747, 1730,  549,  419,  494,  651,  971,
+      595, 1376, 1410, 1012, 1767, 1734, 1716, 1698, 1442,  652,
+     1044, 1054, 1077,  667,  716,  763, 1085,  924, 1483,    0,
+      461, 1494, 1119,  864, 1534, 1161,  615,  668, 1683, 1675,
+
+     1682,  703,  731,  643, 1690, 1644,  576,  606,  853,  842,
+     1574, 1607, 1640, 1662, 1629, 1628, 1190, 1674, 1198,  901,
+     1713, 1226, 1234, 1604, 1260, 1270, 1315, 1012, 1024, 1152,
+     1173, 1353, 1306, 1754,    0,  532, 1765, 1384,  979, 1805,
+     1394,  755, 3539,  955, 3539, 1537, 1530, 1496,  956, 3539,
+     1014, 3539,  954, 1433, 1406,  846, 1022,  839,  972, 1420,
+      803, 1845, 1878, 1362, 1394, 1319, 1428,  807, 1460, 1068,
+     1912,    0,  559, 1923, 1512, 1127, 1962, 1554, 1584, 1594,
+     1617, 1207, 1270, 1545, 1627, 1627, 1650, 2003,    0,  706,
+     2014, 1650, 1207, 1661, 1055, 1125, 1336, 1290, 1266, 1234,
+
+     1339,  580, 1805, 1194, 2055, 2089, 2123, 2157, 1165, 1694,
+     1733, 1785, 1144, 1251, 1411, 1823, 1585, 2191,    0,  753,
+     2202, 1853, 1468, 2241, 1863, 1886, 1114, 1896, 1943, 1982,
+     1661, 1685, 1724,  837,  945, 2282,    0, 1087, 1337, 3539,
+     1338, 3539, 1432, 3539,  991, 1515, 1617, 1465, 1064, 1532,
+     1533, 2032, 1248, 2292, 2326, 2360, 2394, 1743, 2064, 1023,
+     2074, 2099, 2109, 1010,  954, 1675, 1786, 2131, 1864, 2428,
+        0, 1090, 2439, 2139, 1988, 2165, 2175, 2221, 2260, 2301,
+     1896,  946, 1171,  878,  852, 1517,  711, 1534, 1843, 2326,
+     1844, 2360, 2480, 2514, 2548, 2371, 2023, 2381, 2405, 2415,
+
+      732,  680, 1924, 1944,    0, 1973, 2582,    0, 1236, 2593,
+     2337, 2040, 2459,  665, 2489, 2498, 2148,  637, 3539,  467,
+     3539, 1258, 2525, 1405, 2634, 2668, 2535, 2557,  453, 2567,
+     2613, 2644,  347,  324, 2075,  270,  262, 2652,    0, 1398,
+     2523, 2702, 2736, 2770, 2676, 2684, 2710,  216,    0,  189,
+      174, 2718, 1408, 2804, 2838, 2750, 3539, 2756, 2782, 2229,
+     3539,  154, 3539, 2790, 2822, 2854,   31, 2870, 2815, 3539,
+     2917, 2931, 2945, 2959, 2973, 2987, 3001, 3015, 3029, 3043,
+     3049, 3063, 3077, 1440, 3091, 3105, 3119, 3133, 3147, 3161,
+     3175, 3189, 3195, 3202, 3216, 3230, 3236, 3243, 3249, 3255,
+
+     3261, 3268, 3274, 3280, 3286, 3293, 3301, 3307, 3313, 3319,
+     3326, 3334, 3340, 3346, 3353, 3361, 3367, 3375, 3382, 3390,
+     3396, 3404, 3411, 3419, 3433, 3447, 3453, 3461, 1913, 3468,
+     3482, 3488, 3496, 3502, 3510, 2124, 3524
     } ;
 
-static yyconst short int yy_def[621] =
+static yyconst flex_int16_t yy_def[638] =
     {   0,
-      554,    1,    1,    1,  555,  555,  556,  556,  557,  557,
-      558,  558,  554,  559,  554,  554,  554,  560,  561,  562,
-      554,  554,  563,  554,  564,  559,   26,   26,  565,  554,
-      554,  554,   32,   32,   34,   34,   34,  559,   26,  559,
-      554,  561,   32,   32,   34,   34,   34,  554,  554,  566,
-      559,  567,  554,  567,  554,  567,  554,  561,  554,  568,
-      569,  554,  569,  554,  569,  554,  570,  571,  571,  571,
-      554,  554,  559,  559,  554,  554,  560,  572,  560,  573,
-      554,  574,  554,  562,  575,  562,  563,  563,  564,  576,
-      559,  559,   26,  565,   93,   93,   93,   93,  577,  578,
-
-       32,   34,   34,   34,   34,   34,  559,  554,  559,  554,
-      554,  554,  554,  554,  554,  573,  559,   93,  559,  559,
-      559,  554,  554,  566,  579,  559,  559,  567,  567,  554,
-      554,  554,  574,  554,  568,  569,  569,  554,  554,  569,
-      569,  571,  554,  571,  571,  554,  554,  559,  554,  573,
-      580,  575,  575,  554,  559,  559,  559,   93,  158,  581,
-      554,  582,  554,   32,   34,   34,   34,   34,   34,   34,
-      559,  554,  554,  554,  554,  554,  573,  559,  158,  559,
-      559,  559,  554,  559,  554,  580,  559,  559,  559,  559,
-      559,  559,  583,  584,  584,  195,  585,  584,  586,  163,
-
-      554,  201,  201,  554,  201,   34,   34,   34,   34,   34,
-       34,   34,  559,  554,  554,  554,  554,  554,  573,  559,
-      559,  559,  559,  559,  559,  559,  554,  587,  587,  229,
-      587,  588,  589,  590,  554,  591,  204,  591,  591,  239,
-      591,  554,  242,  242,  554,  242,  554,  554,   34,   34,
-       34,   34,   34,  559,  554,  554,  554,  573,  559,  559,
-      559,  559,  559,  559,  559,  559,  592,  592,  593,  594,
-      554,  554,  554,  554,  554,  595,  595,  596,  245,  596,
-      596,  281,  596,  554,  284,  284,  554,  284,   34,   34,
-       34,   34,   34,  559,  554,  554,  573,  559,  559,  559,
-
-      559,  559,  559,  554,  597,  598,  271,  554,  308,  308,
-      554,  308,  554,  554,  554,  554,  554,  554,  599,  599,
-      600,  287,  600,  600,  324,  600,  554,  327,  327,  554,
-      327,  554,  554,   34,   34,  554,  554,  554,  554,  559,
-      554,  554,  573,  559,  559,  559,  559,  559,  559,  559,
-      559,  554,  601,  554,  602,  311,  602,  602,  358,  358,
-      554,  361,  361,  554,  361,  554,  554,  554,  554,  603,
-      603,  604,  330,  604,  604,  375,  604,  554,  378,  378,
-      378,   34,   34,  559,  554,  554,  573,  559,  559,  559,
-      559,  559,  559,  559,  554,  554,  554,  554,  605,  605,
-
-      606,  364,  606,  606,  404,  404,  554,  407,  407,  554,
-      407,  554,  554,  554,  554,  554,  554,  607,  607,  608,
-      608,  608,  422,  422,  554,  554,  554,  554,  554,  554,
-      573,  573,  559,  609,  610,  559,  559,  559,  559,  559,
-      559,  559,  554,  554,  554,  554,  554,  554,  611,  611,
-      612,  410,  612,  612,  454,  454,  554,  457,  457,  554,
-      457,  554,  554,  554,  554,  613,  613,  554,  614,  573,
-      559,  609,  609,  609,  610,  610,  559,  559,  559,  559,
-      559,  554,  554,  554,  554,  615,  615,  616,  460,  616,
-      616,  491,  491,  554,  494,  494,  494,  554,  554,  554,
-
-      554,  554,  554,  614,  554,  573,  559,  559,  559,  559,
-      559,  554,  554,  554,  554,  554,  554,  617,  617,  618,
-      618,  618,  522,  522,  573,  559,  559,  559,  554,  554,
-      554,  554,  619,  619,  620,  559,  559,  559,  559,  559,
-      554,  554,  554,  554,  554,  620,  554,  559,  559,  559,
-      559,  559,  559,    0,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
+      570,    1,    1,    1,  571,  571,  572,  572,  573,  573,
+      574,  574,  570,  575,  570,  570,  570,  576,  577,  578,
+      570,  570,  579,  570,  580,  575,   26,   26,  581,  570,
+      570,  570,   32,   32,   32,   35,   35,   35,  575,   26,
+      575,  570,  577,   32,   32,   35,   35,   35,  570,  570,
+      582,  575,  583,  570,  583,  570,  583,  570,  577,  570,
+      584,  585,  570,  585,  570,  585,  570,  586,  587,  587,
+      587,  570,  570,  575,  575,  570,  570,  576,  588,  576,
+      589,  570,  590,  570,  578,  591,  578,  579,  579,  580,
+      592,  575,  575,   26,  581,   94,   94,   94,   94,  593,
+
+      594,   32,   35,   35,   35,   35,   35,   35,  575,  570,
+      575,  570,  570,  570,  570,  570,  570,  589,  575,   94,
+      575,  575,  575,  570,  570,  582,  595,  575,  575,  583,
+      583,  570,  570,  570,  590,  570,  584,  585,  585,  570,
+      570,  585,  585,  587,  570,  587,  587,  570,  570,  575,
+      570,  589,  596,  591,  591,  570,  575,  575,  575,   94,
+      160,  597,  570,  598,  570,   32,   35,   35,   35,   35,
+       35,   35,   35,   35,  575,  570,  570,  570,  570,  570,
+      589,  575,  160,  575,  575,  575,  570,  575,  570,  596,
+      575,  575,  575,  575,  575,  575,  599,  600,  600,  199,
+
+      601,  600,  602,  165,  570,  205,  205,  570,  205,   35,
+       35,   35,   35,   35,   35,   35,   35,   35,  575,  570,
+      570,  570,  570,  570,  589,  575,  575,  575,  575,  575,
+      575,  575,  570,  603,  603,  235,  603,  604,  605,  606,
+      570,  607,  208,  607,  607,  245,  245,  570,  248,  248,
+      570,  248,  570,  570,   35,   35,   35,   35,   35,   35,
+       35,  575,  570,  570,  570,  589,  575,  575,  575,  575,
+      575,  575,  575,  575,  608,  608,  609,  610,  570,  570,
+      570,  570,  570,  611,  611,  612,  251,  612,  612,  289,
+      289,  570,  292,  292,  570,  292,   35,   35,   35,   35,
+
+       35,   35,   35,  575,  570,  570,  589,  575,  575,  575,
+      575,  575,  575,  570,  613,  614,  279,  570,  318,  318,
+      570,  318,  570,  570,  570,  570,  570,  570,  615,  615,
+      616,  295,  616,  616,  334,  334,  570,  337,  337,  570,
+      337,  570,  570,  570,  570,   35,   35,   35,  570,  570,
+      570,  570,  575,  570,  570,  589,  575,  575,  575,  575,
+      575,  575,  575,  575,  570,  617,  570,  618,  321,  618,
+      618,  371,  371,  570,  374,  374,  570,  374,  570,  570,
+      570,  570,  619,  619,  620,  340,  620,  620,  388,  388,
+      570,  391,  391,  391,   35,   35,   35,  575,  570,  570,
+
+      589,  575,  575,  575,  575,  575,  575,  575,  570,  570,
+      570,  570,  621,  621,  622,  377,  622,  622,  418,  418,
+      570,  421,  421,  570,  421,  570,  570,  570,  570,  570,
+      570,  623,  623,  624,  624,  624,  436,  436,  570,  570,
+      570,  570,  570,  570,  570,  570,  589,  589,  575,  625,
+      626,  575,  575,  575,  575,  575,  575,  575,  570,  570,
+      570,  570,  570,  570,  627,  627,  628,  424,  628,  628,
+      470,  470,  570,  473,  473,  629,  473,  570,  570,  570,
+      570,  630,  630,  570,  631,  589,  575,  625,  625,  625,
+      626,  626,  575,  575,  575,  575,  575,  570,  570,  570,
+
+      570,  632,  632,  633,  629,  633,  633,  507,  507,  570,
+      510,  510,  510,  570,  570,  570,  570,  570,  570,  631,
+      570,  589,  575,  575,  575,  575,  575,  570,  570,  570,
+      570,  570,  570,  634,  634,  635,  635,  635,  538,  538,
+      589,  575,  575,  575,  570,  570,  570,  570,  636,  636,
+      637,  575,  575,  575,  575,  575,  570,  570,  570,  570,
+      570,  637,  570,  575,  575,  575,  575,  575,  575,    0,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
 
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570
     } ;
 
-static yyconst short int yy_nxt[3604] =
+static yyconst flex_int16_t yy_nxt[3604] =
     {   0,
        14,   15,   16,   17,   18,   19,   20,   21,   22,   14,
        23,   24,   14,   14,   25,   26,   27,   28,   26,   26,
        26,   26,   26,   29,   30,   31,   14,   32,   32,   32,
-       32,   33,   34,   34,   35,   34,   36,   34,   37,   34,
-       34,   34,   34,   34,   38,   14,   39,   39,   39,   39,
-       39,   39,   14,   14,   14,   14,   14,   14,   14,   40,
-       14,   14,   41,   48,   48,   81,   42,   49,   49,   74,
-       15,   53,   54,   74,   55,   85,   50,   50,  134,  108,
-       55,   69,   16,   70,   71,   15,   53,   54,  180,   55,
-       43,   44,   55,   56,   45,   55,   86,  554,   46,   74,
-
-       74,   47,   69,   16,   70,   71,  138,   55,   56,  145,
-       90,  141,  108,   57,   90,   90,  109,  127,   86,  177,
-       74,   51,   51,  139,   72,  171,  137,  144,   57,   15,
-       16,   17,   90,   58,   96,   96,   96,   96,   96,   96,
-       96,   96,   74,  137,   81,   72,  146,  147,  182,  142,
-      143,   91,   97,   97,   97,   97,   97,   98,   73,   74,
-       95,   95,   95,   95,   95,   95,   95,   95,  110,  347,
-      143,  178,   59,   60,   60,   60,   60,   60,   60,   60,
-       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
-       15,   16,   17,  161,   58,  470,  111,  112,   74,   74,
-
-      113,   74,  163,  184,  114,  123,  220,  115,   83,   83,
-       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
-       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
-       83,   83,   73,   59,   60,   60,   60,   60,   60,   60,
-       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
-       60,   15,   16,   17,   62,   58,   74,  134,  108,  125,
-       63,   64,   65,  125,  125,  130,  108,  131,  181,  132,
-      179,  166,  144,  131,   66,  132,  167,   74,  168,   90,
-       74,  125,  161,   90,   90,  134,  108,  132,  132,  146,
-      147,  200,  220,  213,   67,   15,   16,   17,   62,   58,
-
-      126,   90,   74,  145,   63,   64,   65,   73,  132,   73,
-       74,   73,  222,   73,   73,  143,  220,   73,   66,   81,
-       91,  159,  159,  159,  159,  159,  159,  159,  159,   73,
-       73,   73,  159,  159,  159,  159,  159,  159,   67,   78,
-       74,   78,   73,   78,  143,   78,   78,  547,   84,   78,
-       84,   74,   84,  223,   84,   84,  110,  161,   84,  547,
-       94,   78,   78,   78,  125,  219,  200,  220,  125,  125,
-      298,   84,   84,  159,  159,  159,  159,  159,  159,  159,
-      159,   74,   79,   81,  111,  112,  125,   74,  113,   81,
-      134,  108,  114,   82,  247,  115,   83,   83,   83,   83,
-
-       83,   83,   83,   83,   92,  126,   93,   93,   93,   93,
-       93,   93,   93,   93,   94,  187,  248,   74,   95,   95,
-       95,   95,   95,  254,   74,  155,  156,  157,  155,  155,
-      155,  155,  155,   74,  299,   74,  262,   95,   95,   95,
-       95,   95,   95,   73,   74,  259,   74,   73,  297,   73,
-      399,  399,   73,   73,   74,   73,   73,   73,  101,  101,
-      101,  101,  101,  101,  101,  101,   94,   74,  354,   73,
-      101,  101,  101,  101,  101,  102,  102,  102,  102,  102,
-      102,  102,  102,  102,  102,  102,  102,   74,  102,   95,
-       95,   95,   95,   95,   95,   73,   73,   73,   73,   73,
-
-       73,   73,   73,   73,   73,  102,  102,  102,  102,  102,
-      102,  102,  102,  554,  231,  231,  231,  102,  102,  102,
-      102,  102,   83,   83,   83,   83,   83,   83,   83,   83,
-       74,   74,  489,  134,  108,  294,   73,   73,   73,   73,
-       73,   73,  107,  108,   73,   81,   73,  345,   73,   73,
-       74,   87,   73,   87,  161,   87,  261,   87,   87,  235,
-      161,   87,  554,  200,   73,   73,   73,   81,  136,  237,
-      354,  136,  136,   87,   87,   87,  137,   82,  136,   94,
-       83,   83,   83,   83,   83,   83,   83,   83,   89,  489,
-       73,  136,   89,   81,   73,   73,  452,  258,   89,  124,
-
-       74,   73,  247,  124,   90,   73,   73,  473,   90,  124,
-       89,   89,   73,   74,   90,  554,  161,  260,  116,   81,
-       74,  124,  124,   73,  248,  237,   90,   90,  389,  133,
-      344,  512,  554,  554,  554,  554,  554,  554,  554,  554,
-       78,  387,   78,  148,   78,  332,   78,   78,  474,  336,
-       78,  554,  554,  554,  554,  554,  554,  554,  554,  161,
-       74,  505,   78,   78,   78,  300,  161,  333,  200,   74,
-      152,  337,  152,  338,  152,  237,  152,  152,  340,   74,
-      152,  433,   81,   79,  158,  158,  158,  158,  158,  158,
-      158,  158,  152,  152,  152,  339,  158,  158,  158,  158,
-
-      158,  224,  225,  226,  224,  224,  224,  224,  224,  240,
-      240,  240,  240,  240,  241,  158,  158,  158,  158,  158,
-      158,  164,  164,  164,  164,  164,  164,  164,  164,  343,
-       74,  431,   81,  164,  164,  164,  164,  164,  187,  473,
-      188,  188,  188,  188,  188,  188,  282,  282,  282,  282,
-      282,  283,  158,  158,  158,  158,  158,  158,  187,   74,
-      188,  188,  188,  188,  188,  188,  188,  188,  346,   74,
-      205,  205,  205,  205,  205,  205,  205,  205,  125,  432,
-      476,  354,  125,  449,  449,  235,  161,  161,  125,   74,
-      187,  356,  189,  189,  189,  189,  189,  189,  189,  189,
-
-      125,  125,  229,  229,  230,  231,  231,  231,  231,  231,
-      197,  239,  239,  239,  239,  239,  239,  239,  239,  554,
-      161,   74,  187,  554,  190,  190,  190,  190,  190,  191,
-      188,  188,  554,  356,  238,  238,  238,  238,  238,  238,
-      238,  238,  268,  268,  268,  268,  268,  268,  268,  268,
-      197,   74,  161,   74,   73,  161,  192,  192,  192,  192,
-      192,  192,  192,  192,  237,  466,  466,  384,  192,  192,
-      192,  192,  192,  273,  274,  275,  273,  273,  273,  273,
-      273,  325,  325,  325,  325,  325,  326,  192,  192,  192,
-      192,  192,  192,  194,  195,  196,  196,  196,  196,  196,
-
-      196,  197,  486,  486,   81,  198,  198,  198,  198,  198,
-      246,  246,  246,  246,  246,  246,  246,  246,  359,  359,
-      359,  359,  359,  360,  198,  198,  198,  198,  198,  198,
-      161,  201,  202,  203,  201,  201,  201,  201,  201,  204,
-      235,  161,  452,  205,  205,  205,  205,  205,  235,  161,
-      277,  277,  277,  277,  277,  277,  332,  336,  237,  402,
-      506,   74,  205,  205,  205,  205,  205,  205,  206,  206,
-      206,  206,  206,  206,  206,  206,  338,  390,  333,  337,
-      206,  206,  206,  206,  206,  281,  281,  281,  281,  281,
-      281,  281,  281,  554,  425,   74,  235,  161,  339,  192,
-
-      192,  192,  192,  192,  192,  187,  237,  188,  188,  188,
-      188,  188,  188,  188,  188,  554,  426,  280,  280,  280,
-      280,  280,  280,  280,  280,  301,  302,  303,  301,  301,
-      301,  301,  301,  505,  474,   74,   74,  187,  161,  188,
-      188,  188,  188,  188,  188,  188,  188,  279,  235,  161,
-      471,  436,  518,  518,   74,  554,  161,  262,  279,  263,
-      263,  263,  263,  263,  263,  279,  525,   81,   74,  235,
-      161,  236,  236,  236,  236,  236,  236,  236,  236,  237,
-      235,  161,   74,  238,  238,  238,  238,  238,   74,  313,
-      279,  314,  314,  314,  314,  314,  314,  314,  314,  533,
-
-      533,  503,  238,  238,  238,  238,  238,  238,  161,  242,
-      243,  244,  242,  242,  242,  242,  242,  245,   74,  135,
-      135,  246,  246,  246,  246,  246,  313,  388,  315,  315,
-      315,  315,  315,  315,  315,  315,  161,  235,  161,  402,
-      246,  246,  246,  246,  246,  246,  262,  322,  263,  263,
-      263,  263,  263,  263,  263,  263,  313,  427,  316,  316,
-      316,  316,  316,  317,  314,  314,  288,  288,  288,  288,
-      288,  288,  288,  288,  425,  356,  443,   74,  262,  428,
-      264,  264,  264,  264,  264,  264,  264,  264,  235,  161,
-      320,  320,  320,  320,  320,  320,  426,  354,  279,  324,
-
-      324,  324,  324,  324,  324,  324,  324,  356,  507,   74,
-      262,  354,  265,  265,  265,  265,  265,  266,  263,  263,
-      554,  402,  323,  323,  323,  323,  323,  323,  323,  323,
-      312,  312,  312,  312,  312,  312,  312,  312,  468,   74,
-      412,   74,  235,  161,  277,  277,  277,  277,  277,  277,
-      277,  277,  237,  235,  161,  278,  278,  278,  278,  278,
-      278,  278,  278,  279,  356,  307,   74,  280,  280,  280,
-      280,  280,  358,  358,  358,  358,  358,  358,  358,  358,
-      376,  376,  376,  376,  376,  377,  280,  280,  280,  280,
-      280,  280,  161,  284,  285,  286,  284,  284,  284,  284,
-
-      284,  287,  161,  430,  429,  288,  288,  288,  288,  288,
-      554,  279,  357,  357,  357,  357,  357,  357,  357,  357,
-       74,  554,  161,  307,  288,  288,  288,  288,  288,  288,
-      262,  322,  263,  263,  263,  263,  263,  263,  263,  263,
-      366,  367,  368,  366,  366,  366,  366,  366,  313,  161,
-      314,  314,  314,  314,  314,  314,  314,  314,  322,  233,
-      386,   74,  262,  554,  263,  263,  263,  263,  263,  263,
-      263,  263,  313,  402,  314,  314,  314,  314,  314,  314,
-      314,  314,  313,  161,  314,  314,  314,  314,  314,  314,
-      431,   81,  322,   74,  308,  309,  310,  308,  308,  308,
-
-      308,  308,  311,  469,  385,  383,  312,  312,  312,  312,
-      312,  331,  331,  331,  331,  331,  331,  331,  331,  405,
-      405,  405,  405,  405,  406,  312,  312,  312,  312,  312,
-      312,  235,  161,  320,  320,  320,  320,  320,  320,  320,
-      320,  279,  235,  161,  321,  321,  321,  321,  321,  321,
-      321,  321,  322,  382,  313,  307,  323,  323,  323,  323,
-      323,  235,  161,  371,  371,  371,  371,  371,  371,  427,
-      233,  322,  197,  342,  341,  323,  323,  323,  323,  323,
-      323,  161,  327,  328,  329,  327,  327,  327,  327,  327,
-      330,  428,  335,  334,  331,  331,  331,  331,  331,  375,
-
-      375,  375,  375,  375,  375,  375,  375,  423,  423,  423,
-      423,  423,  424,  331,  331,  331,  331,  331,  331,  347,
-      348,  348,  348,  348,  348,  348,  348,  348,  554,  307,
-      374,  374,  374,  374,  374,  374,  374,  374,  391,  392,
-      393,  394,  391,  391,  391,  391,  525,   81,  536,   74,
-      347,  349,  349,  349,  349,  349,  349,  349,  349,  535,
-      347,  348,  348,  348,  348,  348,  348,   74,  396,  397,
-      398,  396,  396,  396,  396,  396,  233,  197,  197,   74,
-       74,  347,  350,  350,  350,  350,  350,  351,  348,  348,
-       74,  365,  365,  365,  365,  365,  365,  365,  365,  404,
-
-      404,  404,  404,  404,  404,  404,  404,  255,  545,  296,
-      295,   74,  354,  545,  355,  355,  355,  355,  355,  355,
-      355,  355,  356,  161,  293,  292,  357,  357,  357,  357,
-      357,  554,  373,  403,  403,  403,  403,  403,  403,  403,
-      403,  291,  290,  289,  271,  357,  357,  357,  357,  357,
-      357,  361,  362,  363,  361,  361,  361,  361,  361,  364,
-      233,  197,  267,  365,  365,  365,  365,  365,  412,  354,
-      413,  413,  413,  413,  413,  413,  413,  413,  197,  402,
-      100,  255,  365,  365,  365,  365,  365,  365,  235,  161,
-      371,  371,  371,  371,  371,  371,  371,  371,  322,  235,
-
-      161,  372,  372,  372,  372,  372,  372,  372,  372,  373,
-      257,  255,  256,  374,  374,  374,  374,  374,  412,  354,
-      414,  414,  414,  414,  414,  414,  414,  414,  554,  452,
-      255,  253,  374,  374,  374,  374,  374,  374,  161,  378,
-      379,  380,  378,  378,  378,  378,  378,  235,  161,  252,
-      251,  381,  381,  381,  381,  381,  412,  322,  415,  415,
-      415,  415,  415,  416,  413,  413,  250,  249,   94,  474,
-      381,  381,  381,  381,  381,  381,  347,  348,  348,  348,
-      348,  348,  348,  348,  348,  235,  161,  381,  381,  381,
-      381,  381,  381,  381,  381,  373,  422,  422,  422,  422,
-
-      422,  422,  422,  422,  197,  233,   74,  347,  348,  348,
-      348,  348,  348,  348,  348,  348,  554,  161,  235,  161,
-      419,  419,  419,  419,  419,  419,  373,  554,  373,  421,
-      421,  421,  421,  421,  421,  421,  421,   74,  354,  554,
-      400,  400,  400,  400,  400,  400,  400,  400,  356,  354,
-      554,  401,  401,  401,  401,  401,  401,  401,  401,  402,
-      452,  197,  100,  403,  403,  403,  403,  403,  443,  161,
-      444,  444,  444,  444,  444,  444,  444,  444,  373,   81,
-      476,  185,  403,  403,  403,  403,  403,  403,  407,  408,
-      409,  407,  407,  407,  407,  407,  410,  221,  218,  217,
-
-      411,  411,  411,  411,  411,  443,  354,  445,  445,  445,
-      445,  445,  445,  445,  445,  216,  452,  215,  214,  411,
-      411,  411,  411,  411,  411,  235,  161,  419,  419,  419,
-      419,  419,  419,  419,  419,  373,  235,  161,  420,  420,
-      420,  420,  420,  420,  420,  420,  212,  235,  161,  211,
-      421,  421,  421,  421,  421,  434,  443,  373,  446,  446,
-      446,  446,  446,  447,  444,  444,  481,  481,  481,  421,
-      421,  421,  421,  421,  421,  434,  210,  434,  435,  411,
-      411,  411,  411,  411,  411,  411,  411,  454,  454,  454,
-      454,  454,  454,  454,  454,   74,   74,  436,  209,  437,
-
-      437,  437,  437,  437,  437,  437,  437,  455,  455,  455,
-      455,  455,  456,  554,  354,  453,  453,  453,  453,  453,
-      453,  453,  453,  208,  489,  207,  100,   92,   74,  436,
-      153,  438,  438,  438,  438,  438,  438,  438,  438,  462,
-      463,  464,  462,  462,  462,  462,  462,  412,  554,  413,
-      413,  413,  413,  413,  413,  413,  413,   81,  489,   81,
-       74,  436,  354,  439,  439,  439,  439,  439,  440,  441,
-      441,  412,  489,  413,  413,  413,  413,  413,  413,  413,
-      413,  412,   74,  413,  413,  413,  413,  413,  413,  434,
-      185,  142,   74,  436,  143,  442,  442,  442,  437,  437,
-
-      437,  437,  437,  492,  492,  492,  492,  492,  493,  434,
-      137,  434,  434,  137,  129,  183,  436,  122,  481,  481,
-      481,  176,  175,  174,   74,  354,  173,  450,  450,  450,
-      450,  450,  450,  450,  450,  402,  354,  172,  451,  451,
-      451,  451,  451,  451,  451,  451,  452,   74,  170,  169,
-      453,  453,  453,  453,  453,  477,  478,  479,  477,  477,
-      477,  477,  477,  523,  523,  523,  523,  523,  524,  453,
-      453,  453,  453,  453,  453,  457,  458,  459,  457,  457,
-      457,  457,  457,  460,   74,  165,  100,  461,  461,  461,
-      461,  461,  482,  483,  484,  482,  482,  482,  482,  482,
-
-      541,  541,  541,  541,  541,  541,  461,  461,  461,  461,
-      461,  461,  235,  161,  467,  467,  467,  467,  467,  467,
-      467,  467,  436,   73,  441,  441,  441,  441,  441,  441,
-      441,  441,  443,  100,  444,  444,  444,  444,  444,  444,
-      444,  444,  443,  154,  444,  444,  444,  444,  444,  444,
-      444,  444,   88,   74,  436,  153,  441,  441,  441,  441,
-      441,  441,  441,  441,  443,   81,  444,  444,  444,  444,
-      444,  444,  461,  461,  461,  461,  461,  461,  461,  461,
-      148,  149,   76,   75,   74,   74,  436,  143,  441,  441,
-      441,  441,  441,  441,  480,  480,  491,  491,  491,  491,
-
-      491,  491,  491,  491,  554,  137,  490,  490,  490,  490,
-      490,  490,  490,  490,  129,  122,  121,   74,  436,  120,
-      480,  480,  480,  480,  480,  480,  480,  480,  161,  498,
-      498,  498,  498,  498,  498,  498,  498,  161,  499,  499,
-      499,  499,  499,  499,  499,  499,  119,  118,  117,   74,
-      354,  106,  487,  487,  487,  487,  487,  487,  487,  487,
-      452,  354,  105,  488,  488,  488,  488,  488,  488,  488,
-      488,  489,  104,  103,  100,  490,  490,  490,  490,  490,
-      161,  500,  500,  500,  500,  500,  501,  498,  498,   88,
-       76,   75,   74,  554,  490,  490,  490,  490,  490,  490,
-
-      494,  495,  496,  494,  494,  494,  494,  494,  554,  554,
-      554,  554,  497,  497,  497,  497,  497,  472,  554,  554,
-      554,  472,  554,  472,  472,  554,  554,  472,  554,  554,
-      554,  497,  497,  497,  497,  497,  497,  554,  475,  472,
-      472,  472,  475,  554,  475,  475,  554,  554,  475,  480,
-      480,  480,  480,  480,  480,  480,  480,  554,  554,  554,
-      475,  475,  475,  507,  554,  508,  508,  508,  508,  508,
-      508,  508,  508,  554,  554,  554,  554,  512,   74,  513,
-      513,  513,  513,  513,  513,  513,  513,  161,  498,  498,
-      498,  498,  498,  498,   74,  507,  554,  509,  509,  509,
-
-      509,  509,  509,  509,  509,  512,  554,  514,  514,  514,
-      514,  514,  514,  514,  514,  512,  554,  515,  515,  515,
-      515,  515,  516,  513,  513,  554,   74,  507,  554,  510,
-      510,  510,  510,  510,  511,  508,  508,  497,  497,  497,
-      497,  497,  497,  497,  497,  522,  522,  522,  522,  522,
-      522,  522,  522,  554,  554,  554,  554,  554,   74,  354,
-      554,  519,  519,  519,  519,  519,  519,  519,  519,  489,
-      354,  554,  520,  520,  520,  520,  520,  520,  520,  520,
-      554,  554,  554,  554,  521,  521,  521,  521,  521,  554,
-      554,  521,  521,  521,  521,  521,  521,  521,  521,  554,
-
-      554,  554,  554,  521,  521,  521,  521,  521,  521,  161,
-      498,  498,  498,  498,  498,  498,  498,  498,  161,  498,
-      498,  498,  498,  498,  498,  498,  498,  526,  527,  528,
-      526,  526,  526,  526,  526,  554,  507,  554,  508,  508,
-      508,  508,  508,  508,  529,  530,  531,  529,  529,  529,
-      529,  529,  554,  554,  554,  554,   74,  507,  554,  508,
-      508,  508,  508,  508,  508,  508,  508,   74,  512,  554,
-      513,  513,  513,  513,  513,  513,  513,  513,  512,  554,
-      513,  513,  513,  513,  513,  513,  513,  513,   74,  507,
-      554,  508,  508,  508,  508,  508,  508,  508,  508,  512,
-
-      554,  513,  513,  513,  513,  513,  513,  354,  554,  534,
-      534,  534,  534,  534,  534,  534,  534,  554,  554,  554,
-       74,  536,  554,  537,  537,  537,  537,  537,  537,  537,
-      537,  541,  541,  541,  541,  541,  541,  541,  541,  542,
-      542,  542,  542,  542,  542,  542,  542,  554,  554,  554,
-      554,  554,   74,  536,  554,  538,  538,  538,  538,  538,
-      538,  538,  538,  543,  543,  543,  543,  543,  544,  541,
-      541,  548,  549,  550,  548,  548,  548,  548,  548,  554,
-      554,  554,  554,  554,   74,  536,  554,  539,  539,  539,
-      539,  539,  540,  537,  537,  554,  554,  554,  554,  536,
-
-       74,  537,  537,  537,  537,  537,  537,  541,  541,  541,
-      541,  541,  541,  541,  541,  554,   74,  536,  554,  537,
-      537,  537,  537,  537,  537,  537,  537,  554,  554,  554,
-       74,  541,  541,  541,  541,  541,  541,  541,  541,  551,
-      551,  551,  551,  551,  551,  551,  551,  554,   74,  536,
-      554,  537,  537,  537,  537,  537,  537,  537,  537,  548,
-      548,  548,  548,  548,  548,  548,  548,  554,   74,  552,
-      552,  552,  552,  552,  553,  551,  551,  554,  554,  554,
-       74,  551,  551,  551,  551,  551,  551,  554,   74,  551,
-      551,  551,  551,  551,  551,  551,  551,  554,   74,  554,
-
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-       74,  554,  554,  554,  554,  554,  554,  554,   74,   52,
-       52,   52,   52,   52,   52,   52,   52,   52,   52,   52,
-       52,   52,   52,   31,   31,   31,   31,   31,   31,   31,
-       31,   31,   31,   31,   31,   31,   31,   61,   61,   61,
+       32,   33,   34,   35,   35,   35,   36,   35,   37,   35,
+       38,   35,   35,   35,   35,   35,   39,   14,   40,   40,
+       40,   40,   40,   40,   14,   14,   14,   14,   14,   14,
+       14,   41,   14,   14,   42,   49,   49,   75,   43,   50,
+       50,  147,   15,   54,   55,   75,   56,   75,   51,   51,
+       86,  570,   56,  146,  111,  140,   15,   54,   55,   75,
+       56,  226,   44,   45,   56,   57,   56,   46,   70,   16,
+
+       71,   72,   47,   87,   87,   48,  129,  139,   56,   57,
+       70,   16,   71,   72,  145,   91,  141,   58,  163,   91,
+       91,  136,  110,  143,  110,   52,   52,  165,  145,   75,
+       75,   58,   15,   16,   17,  175,   59,   91,  139,  148,
+      149,  182,  144,   73,   97,   97,   97,   97,   97,   97,
+       97,   97,   75,  136,  110,   73,  563,  188,   92,   98,
+       98,   98,   98,   98,   99,   74,   74,   96,   96,   96,
+       96,   96,   96,   96,   96,  112,  563,   60,   61,   61,
        61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
-       61,   68,   68,   68,   68,   68,   68,   68,   68,   68,
-       68,   68,   68,   68,   68,   73,  554,  554,  554,   73,
-      554,   73,   73,   73,  554,  554,   73,   73,   73,   77,
-       77,  554,   77,   77,   77,   77,   77,   77,   77,   77,
-
-       77,   77,   77,   80,   80,   80,   80,   80,   80,   80,
-       80,   80,   80,   80,   80,   80,   80,   84,  554,  554,
-      554,   84,  554,   84,   84,   84,   84,  554,   84,   84,
-       84,   87,  554,  554,  554,   87,  554,   87,   87,   87,
-      554,  554,   87,   87,   87,   89,  554,  554,   89,   89,
-       89,   89,   89,   89,  554,  554,   89,   89,   89,   99,
-       99,  554,  554,  554,   99,  124,  554,  554,  124,  124,
-      124,  124,  124,  124,  554,  554,  124,  124,  124,  128,
-      554,  554,  128,  128,  128,  128,  128,  128,  554,  128,
-      554,  128,  128,  136,  554,  554,  136,  554,  136,  136,
-
-      136,  136,  136,  554,  136,  136,  136,  140,  140,  140,
-      140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
-      140,  142,  142,  554,  142,  554,  142,  142,  142,  142,
-      142,  142,  142,  142,  142,   78,   78,  554,   78,   78,
-       78,   78,   78,   78,   78,   78,   78,   78,   78,  150,
-      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
-      150,  150,  150,  151,  151,  554,  151,  151,  151,  151,
-      151,  151,  151,  151,  151,  151,  151,  152,  554,  554,
-      554,  152,  554,  152,  152,  152,  554,  554,  152,  152,
-      152,   90,  554,  554,   90,   90,   90,   90,   90,   90,
-
-      554,  554,   90,   90,   90,  160,  160,  554,  554,  554,
-      160,  162,  162,  162,  554,  554,  554,  162,  125,  554,
-      554,  125,  125,  125,  125,  125,  125,  554,  554,  125,
-      125,  125,  186,  186,  186,  186,  186,  186,  186,  186,
-      186,  186,  186,  186,  186,  186,  193,  193,  554,  554,
-      554,  193,  199,  199,  199,  554,  554,  554,  199,  227,
-      227,  554,  554,  554,  227,  228,  228,  554,  554,  554,
-      228,  232,  232,  554,  554,  554,  232,  234,  234,  234,
-      554,  554,  554,  234,  267,  267,  554,  554,  554,  267,
-      269,  269,  554,  554,  554,  269,  270,  270,  554,  554,
-
-      554,  270,  272,  272,  272,  554,  554,  554,  272,  276,
-      276,  276,  276,  554,  554,  554,  276,  304,  304,  554,
-      554,  554,  304,  305,  305,  554,  554,  554,  305,  306,
-      306,  554,  554,  554,  306,  318,  318,  318,  554,  554,
-      554,  318,  319,  319,  319,  319,  554,  554,  554,  319,
-      352,  352,  554,  554,  554,  352,  353,  353,  554,  554,
-      554,  353,  369,  369,  369,  554,  554,  554,  369,  370,
-      370,  370,  370,  554,  554,  554,  370,  395,  395,  554,
-      554,  554,  395,  399,  554,  399,  399,  554,  554,  554,
-      399,  417,  417,  417,  554,  554,  554,  417,  418,  418,
-
-      418,  418,  554,  554,  554,  418,  448,  448,  554,  554,
-      554,  448,  449,  554,  449,  449,  554,  554,  554,  449,
-      465,  465,  465,  554,  554,  554,  465,  466,  466,  466,
-      554,  554,  554,  554,  466,  472,  554,  554,  472,  472,
-      554,  472,  472,  472,  554,  554,  472,  472,  472,  475,
-      554,  554,  475,  475,  554,  475,  475,  475,  554,  554,
-      475,  475,  475,  485,  485,  554,  554,  554,  485,  486,
-      554,  486,  486,  554,  554,  554,  486,  502,  502,  554,
-      554,  554,  554,  502,  504,  504,  504,  504,  504,  504,
-      504,  504,  504,  504,  504,  504,  504,  504,  517,  517,
-
-      554,  554,  554,  517,  518,  554,  518,  518,  554,  554,
-      554,  518,  532,  532,  554,  554,  554,  532,  533,  554,
-      533,  554,  554,  554,  554,  533,  546,  546,  546,  546,
-      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
-       13,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
+       61,   61,   61,   61,   61,   15,   16,   17,   75,   59,
+
+      136,  110,  367,  113,  114,   74,  183,   74,  115,   74,
+       75,   74,   74,  116,  125,   74,  117,   84,   84,   84,
+       84,   84,   84,   84,   84,  184,   75,   74,   74,   74,
+       84,   84,   84,   84,   84,   84,   84,   84,  185,  505,
+       60,   61,   61,   61,   61,   61,   61,   61,   61,   61,
+       61,   61,   61,   61,   61,   61,   61,   61,   15,   16,
+       17,   63,   59,  136,  110,  146,  127,   64,   65,   66,
+      127,  127,  132,  110,  133,  570,  134,  169,  170,   75,
+      133,   67,  134,  367,  171,  186,  172,   82,  127,  136,
+      110,  148,  149,  147,  134,  134,  161,  161,  161,  161,
+
+      161,  161,  163,   68,   15,   16,   17,   63,   59,  128,
+      145,  204,   82,   64,   65,   66,   75,  134,   84,   84,
+       84,   84,   84,   84,   84,   84,   91,   67,   75,  219,
+       91,   91,   95,  226,  139,   85,  145,   85,   82,   85,
+      253,   85,   85,  181,   75,   85,  228,  505,   91,   68,
+       79,   75,   79,   74,   79,   75,   79,   79,   85,   85,
+       79,   88,  254,   88,  229,   88,  266,   88,   88,   92,
+      468,   88,   79,   79,   79,  161,  161,  161,  161,  161,
+      161,  161,  161,   88,   88,   88,  225,  157,  158,  159,
+      157,  157,  157,  157,  157,   80,   82,  161,  161,  161,
+
+      161,  161,  161,  161,  161,  191,   83,   75,  267,   84,
+       84,   84,   84,   84,   84,   84,   84,   93,   75,   94,
+       94,   94,   94,   94,   94,   94,   94,   95,   75,  284,
+      284,   96,   96,   96,   96,   96,   96,   90,   75,   74,
+      163,   90,  226,   74,   74,   75,  308,   90,   75,  204,
+       75,  262,   96,   96,   96,   96,   96,   96,   74,   90,
+       90,   74,   74,  226,   74,   75,  528,   74,   74,  521,
+       74,   74,   74,  102,  102,  102,  102,  102,  102,  102,
+      102,   95,  329,  329,   74,  102,  102,  102,  102,  102,
+      102,  103,  103,  103,  103,  103,  103,  103,  103,  103,
+
+      103,  103,  103,  103,   75,  103,   96,   96,   96,   96,
+       96,   96,   74,   74,   74,   74,   74,   74,   74,   74,
+       74,   74,  103,  103,  103,  103,  103,  103,  103,  103,
+      570,  237,  237,  237,  103,  103,  103,  103,  103,  103,
+       75,  112,   84,   84,   84,   84,   84,   84,   84,   84,
+      309,   82,   95,  383,  383,   74,   74,   74,   74,   74,
+       74,  109,  110,   74,  163,   74,  253,   74,   74,  113,
+      114,   74,  127,  204,  115,   75,  127,  127,   82,  116,
+      413,  413,  117,   74,   74,   74,   82,  138,  254,   75,
+      138,  138,  268,   75,  127,  269,   83,  138,  304,   84,
+
+       84,   84,   84,   84,   84,   84,   84,  126,  270,   74,
+      138,  126,  307,   74,   74,  128,  342,  126,  570,  570,
+      570,  570,  570,  570,  570,  570,   75,  356,  449,  126,
+      126,   74,  246,  246,  246,  246,  246,  247,  343,  118,
+       82,   75,  230,  231,  232,  230,  230,  230,  230,  230,
+      135,  163,   75,  570,  570,  570,  570,  570,  570,  570,
+      570,   79,  357,   79,  150,   79,  163,   79,   79,  344,
+      154,   79,  154,   75,  154,  204,  154,  154,   91,  163,
+      154,  163,   91,   79,   79,   79,  241,  163,   91,   75,
+      243,  345,  154,  154,  154,  127,  243,   75,  353,  127,
+
+       91,   91,  310,  468,  349,  127,   80,  160,  160,  160,
+      160,  160,  160,  160,  160,  570,  163,  127,  127,  160,
+      160,  160,  160,  160,  160,  243,  350,  432,  432,  241,
+      163,  191,  351,  192,  192,  192,  192,  192,  192,  243,
+      160,  160,  160,  160,  160,  160,  166,  166,  166,  166,
+      166,  166,  166,  166,  352,  416,  342,   75,  166,  166,
+      166,  166,  166,  166,   75,  235,  235,  236,  237,  237,
+      237,  237,  237,  201,  465,  465,  241,  163,  343,  160,
+      160,  160,  160,  160,  160,  191,  287,  192,  192,  192,
+      192,  192,  192,  192,  192,  209,  209,  209,  209,  209,
+
+      209,  209,  209,  245,  245,  245,  245,  245,  245,  245,
+      245,  290,  290,  290,  290,  290,  291,  360,   75,  191,
+      367,  193,  193,  193,  193,  193,  193,  193,  193,  570,
+      369,  244,  244,  244,  244,  244,  244,  244,  244,  276,
+      276,  276,  276,  276,  276,  276,  276,  201,   82,   75,
+      241,  163,   75,  191,  521,  194,  194,  194,  194,  194,
+      195,  192,  192,  281,  282,  283,  281,  281,  281,  281,
+      281,  252,  252,  252,  252,  252,  252,  252,  252,  335,
+      335,  335,  335,  335,  336,   75,   75,   74,   75,  196,
+      196,  196,  196,  196,  196,  196,  196,  359,  401,   75,
+
+      403,  196,  196,  196,  196,  196,  196,  289,  289,  289,
+      289,  289,  289,  289,  289,  358,  372,  372,  372,  372,
+      372,  373,  196,  196,  196,  196,  196,  196,  198,  199,
+      200,  200,  200,  200,  200,  200,  201,  570,  163,  519,
+      202,  202,  202,  202,  202,  202,  570,  287,  288,  288,
+      288,  288,  288,  288,  288,  288,  344,  349,  570,  163,
+      163,  202,  202,  202,  202,  202,  202,  163,  205,  206,
+      207,  205,  205,  205,  205,  205,  208,  416,  345,  350,
+      209,  209,  209,  209,  209,  209,  311,  312,  313,  311,
+      311,  311,  311,  311,  389,  389,  389,  389,  389,  390,
+
+       75,  209,  209,  209,  209,  209,  209,  210,  210,  210,
+      210,  210,  210,  210,  210,  351,  398,   75,   75,  210,
+      210,  210,  210,  210,  210,  270,  163,  271,  271,  271,
+      271,  271,  271,  369,  404,  243,  459,  352,  163,  484,
+      196,  196,  196,  196,  196,  196,  191,  287,  192,  192,
+      192,  192,  192,  192,  192,  192,  439,  323,   75,  324,
+      324,  324,  324,  324,  324,  324,  324,  323,   75,  325,
+      325,  325,  325,  325,  325,  325,  325,  402,  440,   75,
+      191,  570,  192,  192,  192,  192,  192,  192,  192,  192,
+      323,  369,  326,  326,  326,  326,  326,  327,  324,  324,
+
+      296,  296,  296,  296,  296,  296,  296,  296,  482,  482,
+       75,  502,  502,   75,  241,  163,  242,  242,  242,  242,
+      242,  242,  242,  242,  243,  487,  441,  426,  244,  244,
+      244,  244,  244,  244,  334,  334,  334,  334,  334,  334,
+      334,  334,  419,  419,  419,  419,  419,  420,  442,  244,
+      244,  244,  244,  244,  244,  163,  248,  249,  250,  248,
+      248,  248,  248,  248,  251,  241,  163,  369,  252,  252,
+      252,  252,  252,  252,  570,  287,  333,  333,  333,  333,
+      333,  333,  333,  333,  241,  163,  241,  163,  317,  252,
+      252,  252,  252,  252,  252,  270,  332,  271,  271,  271,
+
+      271,  271,  271,  271,  271,  322,  322,  322,  322,  322,
+      322,  322,  322,  371,  371,  371,  371,  371,  371,  371,
+      371,  163,  437,  437,  437,  437,  437,  438,   75,  270,
+      287,  272,  272,  272,  272,  272,  272,  272,  272,  570,
+       75,  370,  370,  370,  370,  370,  370,  370,  370,  379,
+      380,  381,  379,  379,  379,  379,  379,  534,  534,  541,
+       82,  452,   75,  270,  367,  273,  273,  273,  273,  273,
+      274,  271,  271,  323,  369,  324,  324,  324,  324,  324,
+      324,  324,  324,  323,  163,  324,  324,  324,  324,  324,
+      324,  324,  324,  332,   75,  446,   75,  241,  163,  285,
+
+      285,  285,  285,  285,  285,  285,  285,  243,  241,  163,
+      286,  286,  286,  286,  286,  286,  286,  286,  287,  570,
+      163,  445,  288,  288,  288,  288,  288,  288,  323,  332,
+      324,  324,  324,  324,  324,  324,   75,  443,  439,  441,
+      447,   82,  317,  288,  288,  288,  288,  288,  288,  163,
+      292,  293,  294,  292,  292,  292,  292,  292,  295,  444,
+      440,  442,  296,  296,  296,  296,  296,  296,  341,  341,
+      341,  341,  341,  341,  341,  341,  360,  361,  361,  361,
+      361,  361,  361,  296,  296,  296,  296,  296,  296,  270,
+      448,  271,  271,  271,  271,  271,  271,  271,  271,  388,
+
+      388,  388,  388,  388,  388,  388,  388,  570,   75,  387,
+      387,  387,  387,  387,  387,  387,  387,  239,  523,  549,
+      549,  552,   75,  270,  367,  271,  271,  271,  271,  271,
+      271,  271,  271,  443,  416,  405,  406,  407,  408,  405,
+      405,  405,  405,  410,  411,  412,  410,  410,  410,  410,
+      410,   75,  137,  137,   75,  444,   75,  318,  319,  320,
+      318,  318,  318,  318,  318,  321,   75,   82,  400,  322,
+      322,  322,  322,  322,  322,  378,  378,  378,  378,  378,
+      378,  378,  378,  471,  471,  471,  471,  471,  472,  399,
+      322,  322,  322,  322,  322,  322,  241,  163,  330,  330,
+
+      330,  330,  330,  330,  330,  330,  287,  241,  163,  331,
+      331,  331,  331,  331,  331,  331,  331,  332,  450,   82,
+      486,  333,  333,  333,  333,  333,  333,  418,  418,  418,
+      418,  418,  418,  418,  418,  489,  489,  570,  450,  397,
+      450,  450,  333,  333,  333,  333,  333,  333,  163,  337,
+      338,  339,  337,  337,  337,  337,  337,  340,  241,  163,
+      396,  341,  341,  341,  341,  341,  341,  570,  332,  417,
+      417,  417,  417,  417,  417,  417,  417,  522,  490,  492,
+      490,  395,  341,  341,  341,  341,  341,  341,  360,  361,
+      361,  361,  361,  361,  361,  361,  361,  426,  570,  427,
+
+      427,  427,  427,  427,  427,  427,  427,  426,  416,  428,
+      428,  428,  428,  428,  428,  428,  428,  323,  447,   82,
+       75,  360,  362,  362,  362,  362,  362,  362,  362,  362,
+      426,  485,  429,  429,  429,  429,  429,  430,  427,  427,
+      241,  163,  394,  394,  394,  394,  394,  394,  394,  394,
+      386,  317,  239,   75,  360,  363,  363,  363,  363,  363,
+      364,  361,  361,  570,  163,  436,  436,  436,  436,  436,
+      436,  436,  436,  386,  570,  163,  435,  435,  435,  435,
+      435,  435,  435,  435,  332,  201,   75,  367,  367,  368,
+      368,  368,  368,  368,  368,  368,  368,  369,  416,  163,
+
+      355,  370,  370,  370,  370,  370,  370,  459,  386,  460,
+      460,  460,  460,  460,  460,  460,  460,  354,  348,  347,
+      346,  317,  370,  370,  370,  370,  370,  370,  374,  375,
+      376,  374,  374,  374,  374,  374,  377,  241,  163,  239,
+      378,  378,  378,  378,  378,  378,  459,  386,  461,  461,
+      461,  461,  461,  461,  461,  461,  452,  201,  497,  497,
+      497,  378,  378,  378,  378,  378,  378,  241,  163,  384,
+      384,  384,  384,  384,  384,  384,  384,  332,  241,  163,
+      385,  385,  385,  385,  385,  385,  385,  385,  386,   75,
+      201,  263,  387,  387,  387,  387,  387,  387,  459,  367,
+
+      462,  462,  462,  462,  462,  463,  460,  460,  450,  468,
+      306,  305,  303,  387,  387,  387,  387,  387,  387,  163,
+      391,  392,  393,  391,  391,  391,  391,  391,  450,  302,
+      450,  451,  394,  394,  394,  394,  394,  394,  425,  425,
+      425,  425,  425,  425,  425,  425,  570,  570,  301,  300,
+      299,   75,  298,  394,  394,  394,  394,  394,  394,  360,
+      361,  361,  361,  361,  361,  361,  361,  361,  470,  470,
+      470,  470,  470,  470,  470,  470,  570,  570,  469,  469,
+      469,  469,  469,  469,  469,  469,  297,  468,  279,  490,
+      492,   75,  360,  361,  361,  361,  361,  361,  361,  361,
+
+      361,  478,  479,  480,  478,  478,  478,  478,  478,  426,
+      163,  427,  427,  427,  427,  427,  427,  427,  427,  386,
+      239,  513,  201,  275,   75,  367,  513,  414,  414,  414,
+      414,  414,  414,  414,  414,  369,  367,  367,  415,  415,
+      415,  415,  415,  415,  415,  415,  416,  468,  201,  101,
+      417,  417,  417,  417,  417,  417,  426,  367,  427,  427,
+      427,  427,  427,  427,  427,  427,  263,  505,  265,  263,
+      264,  417,  417,  417,  417,  417,  417,  421,  422,  423,
+      421,  421,  421,  421,  421,  424,  570,  263,  261,  425,
+      425,  425,  425,  425,  425,  426,  505,  427,  427,  427,
+
+      427,  427,  427,  508,  508,  508,  508,  508,  509,  260,
+      425,  425,  425,  425,  425,  425,  241,  163,  433,  433,
+      433,  433,  433,  433,  433,  433,  386,  241,  163,  434,
+      434,  434,  434,  434,  434,  434,  434,  259,  497,  497,
+      497,  435,  435,  435,  435,  435,  435,  493,  494,  495,
+      493,  493,  493,  493,  493,  539,  539,  539,  539,  539,
+      540,  258,  435,  435,  435,  435,  435,  435,  452,   75,
+      453,  453,  453,  453,  453,  453,  453,  453,   75,  498,
+      499,  500,  498,  498,  498,  498,  498,  459,  367,  460,
+      460,  460,  460,  460,  460,  460,  460,  257,  505,  256,
+
+      255,   75,  452,   95,  454,  454,  454,  454,  454,  454,
+      454,  454,  459,  201,  460,  460,  460,  460,  460,  460,
+      460,  460,  459,  239,  460,  460,  460,  460,  460,  460,
+      201,  101,  561,   82,  189,   75,  452,  561,  455,  455,
+      455,  455,  455,  456,  457,  457,  477,  477,  477,  477,
+      477,  477,  477,  477,  507,  507,  507,  507,  507,  507,
+      507,  507,  163,  514,  514,  514,  514,  514,  514,   75,
+      452,  227,  458,  458,  458,  453,  453,  453,  453,  453,
+      510,  511,  512,  510,  510,  510,  510,  510,  570,  224,
+      506,  506,  506,  506,  506,  506,  506,  506,  223,  222,
+
+      221,  220,  218,   75,  367,  217,  466,  466,  466,  466,
+      466,  466,  466,  466,  416,  367,  216,  467,  467,  467,
+      467,  467,  467,  467,  467,  468,  215,  214,  213,  469,
+      469,  469,  469,  469,  469,  163,  514,  514,  514,  514,
+      514,  514,  514,  514,  557,  557,  557,  557,  557,  557,
+      469,  469,  469,  469,  469,  469,  473,  474,  475,  473,
+      473,  473,  473,  473,  476,  212,  211,  101,  477,  477,
+      477,  477,  477,  477,  163,  515,  515,  515,  515,  515,
+      515,  515,  515,   93,  155,   82,   82,   75,  189,  477,
+      477,  477,  477,  477,  477,  241,  163,  483,  483,  483,
+
+      483,  483,  483,  483,  483,  452,  144,  457,  457,  457,
+      457,  457,  457,  457,  457,  163,  516,  516,  516,  516,
+      516,  517,  514,  514,  145,  139,  139,  488,  131,  187,
+      124,  488,  180,  488,  488,  179,  178,  488,   75,  452,
+      177,  457,  457,  457,  457,  457,  457,  457,  457,  488,
+      488,  488,  538,  538,  538,  538,  538,  538,  538,  538,
+      176,  491,  174,  173,  168,  491,  167,  491,  491,  101,
+       74,  491,   75,  452,  101,  457,  457,  457,  457,  457,
+      457,  496,  496,  491,  491,  491,  496,  496,  496,  496,
+      496,  496,  496,  496,  528,  156,  529,  529,  529,  529,
+
+      529,  529,  529,  529,   89,  155,   75,  452,   82,  496,
+      496,  496,  496,  496,  496,  496,  496,   75,  528,  150,
+      530,  530,  530,  530,  530,  530,  530,  530,  528,  151,
+      531,  531,  531,  531,  531,  532,  529,  529,   77,   76,
+       75,  367,   75,  503,  503,  503,  503,  503,  503,  503,
+      503,  468,  367,  145,  504,  504,  504,  504,  504,  504,
+      504,  504,  505,  139,  131,  124,  506,  506,  506,  506,
+      506,  506,  570,  123,  537,  537,  537,  537,  537,  537,
+      537,  537,  122,  121,  120,  119,  108,  506,  506,  506,
+      506,  506,  506,  523,  107,  524,  524,  524,  524,  524,
+
+      524,  524,  524,  163,  514,  514,  514,  514,  514,  514,
+      514,  514,  163,  514,  514,  514,  514,  514,  514,  514,
+      514,  106,  105,  104,  541,   82,   75,  523,  101,  525,
+      525,  525,  525,  525,  525,  525,  525,  551,   89,   77,
+      542,  543,  544,  542,  542,  542,  542,  542,  523,   76,
+      524,  524,  524,  524,  524,  524,   75,  570,  570,  570,
+       75,  523,  570,  526,  526,  526,  526,  526,  527,  524,
+      524,   75,  545,  546,  547,  545,  545,  545,  545,  545,
+      528,   75,  529,  529,  529,  529,  529,  529,  529,  529,
+      570,  570,  570,  570,   75,  367,  570,  535,  535,  535,
+
+      535,  535,  535,  535,  535,  505,  367,  570,  536,  536,
+      536,  536,  536,  536,  536,  536,  570,  570,  570,  570,
+      537,  537,  537,  537,  537,  537,  528,  570,  529,  529,
+      529,  529,  529,  529,  529,  529,  570,  570,  570,  570,
+      570,  537,  537,  537,  537,  537,  537,  523,  570,  524,
+      524,  524,  524,  524,  524,  524,  524,  528,  570,  529,
+      529,  529,  529,  529,  529,  367,  570,  550,  550,  550,
+      550,  550,  550,  550,  550,  570,  570,  570,  570,  570,
+       75,  523,  570,  524,  524,  524,  524,  524,  524,  524,
+      524,  557,  557,  557,  557,  557,  557,  557,  557,  558,
+
+      558,  558,  558,  558,  558,  558,  558,  570,  570,  570,
+      570,  570,  570,  570,   75,  552,  570,  553,  553,  553,
+      553,  553,  553,  553,  553,  559,  559,  559,  559,  559,
+      560,  557,  557,  564,  565,  566,  564,  564,  564,  564,
+      564,  570,  570,  570,  570,  570,  570,  570,   75,  552,
+      570,  554,  554,  554,  554,  554,  554,  554,  554,  570,
+      570,  570,  570,  552,   75,  553,  553,  553,  553,  553,
+      553,  557,  557,  557,  557,  557,  557,  557,  557,  570,
+      570,  570,   75,  552,  570,  555,  555,  555,  555,  555,
+      556,  553,  553,  570,  570,  570,   75,  557,  557,  557,
+
+      557,  557,  557,  557,  557,  567,  567,  567,  567,  567,
+      567,  567,  567,  570,  570,  570,   75,  552,  570,  553,
+      553,  553,  553,  553,  553,  553,  553,  570,  570,  570,
+      567,  567,  567,  567,  567,  567,   75,  564,  564,  564,
+      564,  564,  564,  564,  564,  570,  570,  570,  570,  570,
+       75,  552,  570,  553,  553,  553,  553,  553,  553,  553,
+      553,   75,  570,  570,  570,  570,  570,  570,   75,  568,
+      568,  568,  568,  568,  569,  567,  567,  570,  570,  570,
+      570,  570,  570,  570,   75,  567,  567,  567,  567,  567,
+      567,  567,  567,  570,  570,  570,  570,  570,  570,  570,
+
+       75,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,   75,   53,   53,   53,
+       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
+       53,   31,   31,   31,   31,   31,   31,   31,   31,   31,
+       31,   31,   31,   31,   31,   62,   62,   62,   62,   62,
+       62,   62,   62,   62,   62,   62,   62,   62,   62,   69,
+       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
+       69,   69,   69,   74,  570,  570,  570,   74,  570,   74,
+       74,   74,  570,  570,   74,   74,   74,   78,   78,  570,
+       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
+
+       78,   81,   81,   81,   81,   81,   81,   81,   81,   81,
+       81,   81,   81,   81,   81,   85,  570,  570,  570,   85,
+      570,   85,   85,   85,   85,  570,   85,   85,   85,   88,
+      570,  570,  570,   88,  570,   88,   88,   88,  570,  570,
+       88,   88,   88,   90,  570,  570,   90,   90,   90,   90,
+       90,   90,  570,  570,   90,   90,   90,  100,  100,  570,
+      570,  570,  100,  126,  570,  570,  126,  126,  126,  126,
+      126,  126,  570,  570,  126,  126,  126,  130,  570,  570,
+      130,  130,  130,  130,  130,  130,  570,  130,  570,  130,
+      130,  138,  570,  570,  138,  570,  138,  138,  138,  138,
+
+      138,  570,  138,  138,  138,  142,  142,  142,  142,  142,
+      142,  142,  142,  142,  142,  142,  142,  142,  142,  144,
+      144,  570,  144,  570,  144,  144,  144,  144,  144,  144,
+      144,  144,  144,   79,   79,  570,   79,   79,   79,   79,
+       79,   79,   79,   79,   79,   79,   79,  152,  152,  152,
+      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
+      152,  153,  153,  570,  153,  153,  153,  153,  153,  153,
+      153,  153,  153,  153,  153,  154,  570,  570,  570,  154,
+      570,  154,  154,  154,  570,  570,  154,  154,  154,   91,
+      570,  570,   91,   91,   91,   91,   91,   91,  570,  570,
+
+       91,   91,   91,  162,  162,  570,  570,  570,  162,  164,
+      164,  164,  570,  570,  570,  164,  127,  570,  570,  127,
+      127,  127,  127,  127,  127,  570,  570,  127,  127,  127,
+      190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
+      190,  190,  190,  190,  197,  197,  570,  570,  570,  197,
+      203,  203,  203,  570,  570,  570,  203,  233,  233,  570,
+      570,  570,  233,  234,  234,  570,  570,  570,  234,  238,
+      238,  570,  570,  570,  238,  240,  240,  240,  570,  570,
+      570,  240,  275,  275,  570,  570,  570,  275,  277,  277,
+      570,  570,  570,  277,  278,  278,  570,  570,  570,  278,
+
+      280,  280,  280,  570,  570,  570,  280,  284,  284,  284,
+      284,  570,  570,  570,  284,  314,  314,  570,  570,  570,
+      314,  315,  315,  570,  570,  570,  315,  316,  316,  570,
+      570,  570,  316,  328,  328,  328,  570,  570,  570,  328,
+      329,  329,  329,  329,  570,  570,  570,  329,  365,  365,
+      570,  570,  570,  365,  366,  366,  570,  570,  570,  366,
+      382,  382,  382,  570,  570,  570,  382,  383,  383,  383,
+      383,  570,  570,  570,  383,  409,  409,  570,  570,  570,
+      409,  413,  570,  413,  413,  570,  570,  570,  413,  431,
+      431,  431,  570,  570,  570,  431,  432,  432,  432,  432,
+
+      570,  570,  570,  432,  464,  464,  570,  570,  570,  464,
+      465,  570,  465,  465,  570,  570,  570,  465,  481,  481,
+      481,  570,  570,  570,  481,  482,  482,  482,  570,  570,
+      570,  570,  482,  488,  570,  570,  488,  488,  570,  488,
+      488,  488,  570,  570,  488,  488,  488,  491,  570,  570,
+      491,  491,  570,  491,  491,  491,  570,  570,  491,  491,
+      491,  501,  501,  570,  570,  570,  501,  502,  570,  502,
+      502,  570,  570,  570,  502,  518,  518,  570,  570,  570,
+      570,  518,  520,  520,  520,  520,  520,  520,  520,  520,
+      520,  520,  520,  520,  520,  520,  533,  533,  570,  570,
+
+      570,  533,  534,  570,  534,  534,  570,  570,  570,  534,
+      548,  548,  570,  570,  570,  548,  549,  570,  549,  570,
+      570,  570,  570,  549,  562,  562,  562,  562,  562,  562,
+      562,  562,  562,  562,  562,  562,  562,  562,   13,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
 
-      554,  554,  554
+      570,  570,  570
     } ;
 
-static yyconst short int yy_chk[3604] =
+static yyconst flex_int16_t yy_chk[3604] =
     {   0,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -951,402 +1046,405 @@ static yyconst short int yy_chk[3604] =
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
-        1,    1,    2,    3,    4,  116,    2,    3,    4,  551,
-        5,    5,    5,  119,    5,   20,    3,    4,   59,   59,
-        5,   11,   11,   11,   11,    6,    6,    6,  119,    6,
-        2,    2,    5,    5,    2,    6,   20,   84,    2,   40,
-
-       51,    2,   12,   12,   12,   12,   63,    6,    6,   70,
-       25,   67,   67,    5,   25,   25,   40,   51,   84,  116,
-      109,    3,    4,   65,   11,  109,   63,   69,    6,    7,
-        7,    7,   25,    7,   27,   27,   27,   27,   27,   27,
-       27,   27,  121,   65,  432,   12,   72,   72,  121,   72,
-       70,   25,   28,   28,   28,   28,   28,   28,   39,  117,
-       39,   39,   39,   39,   39,   39,   39,   39,   41,  348,
-       69,  117,    7,    7,    7,    7,    7,    7,    7,    7,
+        1,    1,    1,    1,    2,    3,    4,   41,    2,    3,
+        4,   71,    5,    5,    5,  184,    5,  567,    3,    4,
+       20,   85,    5,   70,   41,   64,    6,    6,    6,   52,
+        6,  184,    2,    2,    5,    5,    6,    2,   11,   11,
+
+       11,   11,    2,   20,   85,    2,   52,   64,    6,    6,
+       12,   12,   12,   12,   71,   25,   66,    5,  101,   25,
+       25,   60,   60,   68,   68,    3,    4,  101,   70,  119,
+      111,    6,    7,    7,    7,  111,    7,   25,   66,   73,
+       73,  119,   73,   11,   27,   27,   27,   27,   27,   27,
+       27,   27,  129,  109,  109,   12,  562,  129,   25,   28,
+       28,   28,   28,   28,   28,   40,  120,   40,   40,   40,
+       40,   40,   40,   40,   40,   42,  551,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
-        8,    8,    8,  100,    8,  432,   41,   41,  127,  348,
+        7,    7,    7,    7,    7,    8,    8,    8,  109,    8,
 
-       41,  178,  100,  127,   41,   49,  178,   41,   49,   49,
-       49,   49,   49,   49,   49,   49,   82,   82,   82,   82,
-       82,   82,   82,   82,   83,   83,   83,   83,   83,   83,
-       83,   83,  118,    8,    8,    8,    8,    8,    8,    8,
+      132,  132,  550,   42,   42,   75,  120,   75,   42,   75,
+      121,   75,   75,   42,   50,   75,   42,   50,   50,   50,
+       50,   50,   50,   50,   50,  121,  122,   75,   75,   75,
+       83,   83,   83,   83,   83,   83,   83,   83,  122,  548,
         8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
-        8,    9,    9,    9,    9,    9,  120,  130,  130,   50,
-        9,    9,    9,   50,   50,   57,   57,   57,  120,   57,
-      118,  104,  144,   57,    9,   57,  104,  222,  104,   89,
-      171,   50,  162,   89,   89,  134,  134,   57,   57,  146,
-      146,  162,  222,  171,    9,   10,   10,   10,   10,   10,
-
-       50,   89,  182,  145,   10,   10,   10,   74,   57,   74,
-      181,   74,  181,   74,   74,  144,  182,   74,   10,  177,
-       89,   96,   96,   96,   96,   96,   96,   96,   96,   74,
-       74,   74,   98,   98,   98,   98,   98,   98,   10,   18,
-      184,   18,   18,   18,  145,   18,   18,  546,   86,   18,
-       86,  180,   86,  184,   86,   86,  110,  199,   86,  535,
-      192,   18,   18,   18,  124,  177,  199,  180,  124,  124,
-      259,   86,   86,   97,   97,   97,   97,   97,   97,   97,
-       97,  192,   18,   19,  110,  110,  124,  259,  110,  258,
-      107,  107,  110,   19,  207,  110,   19,   19,   19,   19,
-
-       19,   19,   19,   19,   26,  124,   26,   26,   26,   26,
-       26,   26,   26,   26,   26,  188,  207,  213,   26,   26,
-       26,   26,   26,  213,  260,   92,   92,   92,   92,   92,
-       92,   92,   92,  107,  260,   26,  263,   26,   26,   26,
-       26,   26,   26,   32,  220,  220,  188,   32,  258,   32,
-      360,  360,   32,   32,   92,   32,   32,   32,   32,   32,
-       32,   32,   32,   32,   32,   32,   32,  263,  534,   32,
+        8,    8,    8,    8,    8,    8,    8,    8,    9,    9,
+        9,    9,    9,  136,  136,  146,   51,    9,    9,    9,
+       51,   51,   58,   58,   58,  537,   58,  106,  106,  123,
+       58,    9,   58,  536,  106,  123,  106,  118,   51,  143,
+      143,  148,  148,  147,   58,   58,   99,   99,   99,   99,
+
+       99,   99,  164,    9,   10,   10,   10,   10,   10,   51,
+      146,  164,  225,   10,   10,   10,  175,   58,   84,   84,
+       84,   84,   84,   84,   84,   84,   90,   10,  182,  175,
+       90,   90,  196,  182,  143,   87,  147,   87,  181,   87,
+      211,   87,   87,  118,  185,   87,  185,  534,   90,   10,
+       18,  188,   18,   18,   18,  196,   18,   18,   87,   87,
+       18,   89,  211,   89,  188,   89,  225,   89,   89,   90,
+      533,   89,   18,   18,   18,   97,   97,   97,   97,   97,
+       97,   97,   97,   89,   89,   89,  181,   93,   93,   93,
+       93,   93,   93,   93,   93,   18,   19,   98,   98,   98,
+
+       98,   98,   98,   98,   98,  192,   19,  226,  226,   19,
+       19,   19,   19,   19,   19,   19,   19,   26,   93,   26,
+       26,   26,   26,   26,   26,   26,   26,   26,  186,  247,
+      247,   26,   26,   26,   26,   26,   26,   92,  192,   92,
+      203,   92,  186,   92,   92,  219,  267,   92,  228,  203,
+       26,  219,   26,   26,   26,   26,   26,   26,   32,   92,
+       92,   92,   32,  228,   32,  267,  529,   32,   32,  520,
        32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
+       32,   32,  291,  291,   32,   32,   32,   32,   32,   32,
        32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
-       32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
-
-       32,   32,   32,   32,   32,   34,   34,   34,   34,   34,
-       34,   34,   34,   34,  196,  196,  196,   34,   34,   34,
-       34,   34,  123,  123,  123,  123,  123,  123,  123,  123,
-      254,  299,  532,  141,  141,  254,   34,   34,   34,   34,
-       34,   34,   38,   38,   38,  219,   38,  299,   38,   38,
-      223,   88,   38,   88,  234,   88,  223,   88,   88,  236,
-      236,   88,  521,  234,   38,   38,   38,   42,  137,  236,
-      520,  137,  137,   88,   88,   88,  141,   42,  137,  221,
-       42,   42,   42,   42,   42,   42,   42,   42,   91,  518,
-       91,  137,   91,  343,   91,   91,  517,  219,   91,  126,
-
-      221,  126,  247,  126,  154,  126,  126,  434,  154,  126,
-       91,   91,   91,  345,  154,  238,  238,  221,   42,   58,
-      298,  126,  126,  126,  247,  238,  154,  154,  345,   58,
-      298,  513,   58,   58,   58,   58,   58,   58,   58,   58,
-       77,  343,   77,   77,   77,  289,   77,   77,  434,  292,
-       77,  133,  133,  133,  133,  133,  133,  133,  133,  272,
-      261,  504,   77,   77,   77,  261,  276,  289,  272,  294,
-      153,  292,  153,  293,  153,  276,  153,  153,  294,  388,
-      153,  388,  297,   77,   93,   93,   93,   93,   93,   93,
-       93,   93,  153,  153,  153,  293,   93,   93,   93,   93,
-
-       93,  187,  187,  187,  187,  187,  187,  187,  187,  203,
-      203,  203,  203,  203,  203,   93,   93,   93,   93,   93,
-       93,  101,  101,  101,  101,  101,  101,  101,  101,  297,
-      187,  387,  387,  101,  101,  101,  101,  101,  191,  435,
-      191,  191,  191,  191,  191,  191,  244,  244,  244,  244,
-      244,  244,  101,  101,  101,  101,  101,  101,  155,  300,
-      155,  155,  155,  155,  155,  155,  155,  155,  300,  191,
-      200,  200,  200,  200,  200,  200,  200,  200,  183,  387,
-      435,  355,  183,  406,  406,  420,  420,  502,  183,  155,
-      156,  355,  156,  156,  156,  156,  156,  156,  156,  156,
-
-      183,  183,  195,  195,  195,  195,  195,  195,  195,  195,
-      195,  202,  202,  202,  202,  202,  202,  202,  202,  421,
-      421,  156,  157,  357,  157,  157,  157,  157,  157,  157,
-      157,  157,  205,  357,  205,  205,  205,  205,  205,  205,
-      205,  205,  229,  229,  229,  229,  229,  229,  229,  229,
-      229,  340,  498,  157,  158,  318,  158,  158,  158,  158,
-      158,  158,  158,  158,  318,  424,  424,  340,  158,  158,
-      158,  158,  158,  235,  235,  235,  235,  235,  235,  235,
-      235,  286,  286,  286,  286,  286,  286,  158,  158,  158,
-      158,  158,  158,  161,  161,  161,  161,  161,  161,  161,
-
-      161,  161,  456,  456,  470,  161,  161,  161,  161,  161,
-      237,  237,  237,  237,  237,  237,  237,  237,  310,  310,
-      310,  310,  310,  310,  161,  161,  161,  161,  161,  161,
-      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
-      467,  467,  486,  163,  163,  163,  163,  163,  241,  241,
-      241,  241,  241,  241,  241,  241,  332,  336,  241,  485,
-      470,  346,  163,  163,  163,  163,  163,  163,  164,  164,
-      164,  164,  164,  164,  164,  164,  338,  346,  332,  336,
-      164,  164,  164,  164,  164,  243,  243,  243,  243,  243,
-      243,  243,  243,  472,  382,  471,  277,  277,  338,  164,
-
-      164,  164,  164,  164,  164,  189,  277,  189,  189,  189,
-      189,  189,  189,  189,  189,  246,  382,  246,  246,  246,
-      246,  246,  246,  246,  246,  262,  262,  262,  262,  262,
-      262,  262,  262,  469,  472,  433,  189,  190,  319,  190,
-      190,  190,  190,  190,  190,  190,  190,  319,  278,  278,
-      433,  437,  493,  493,  262,  280,  280,  266,  278,  266,
-      266,  266,  266,  266,  266,  280,  506,  506,  190,  201,
-      201,  201,  201,  201,  201,  201,  201,  201,  201,  201,
-      320,  320,  437,  201,  201,  201,  201,  201,  266,  273,
-      320,  273,  273,  273,  273,  273,  273,  273,  273,  524,
-
-      524,  468,  201,  201,  201,  201,  201,  201,  204,  204,
-      204,  204,  204,  204,  204,  204,  204,  204,  344,  568,
-      568,  204,  204,  204,  204,  204,  274,  344,  274,  274,
-      274,  274,  274,  274,  274,  274,  466,  321,  321,  449,
-      204,  204,  204,  204,  204,  204,  224,  321,  224,  224,
-      224,  224,  224,  224,  224,  224,  275,  383,  275,  275,
-      275,  275,  275,  275,  275,  275,  279,  279,  279,  279,
-      279,  279,  279,  279,  425,  448,  444,  224,  225,  383,
-      225,  225,  225,  225,  225,  225,  225,  225,  283,  283,
-      283,  283,  283,  283,  283,  283,  425,  400,  283,  285,
-
-      285,  285,  285,  285,  285,  285,  285,  400,  508,  225,
-      226,  401,  226,  226,  226,  226,  226,  226,  226,  226,
-      288,  401,  288,  288,  288,  288,  288,  288,  288,  288,
-      307,  307,  307,  307,  307,  307,  307,  307,  429,  508,
-      413,  226,  239,  239,  239,  239,  239,  239,  239,  239,
-      239,  239,  239,  242,  242,  242,  242,  242,  242,  242,
-      242,  242,  242,  242,  399,  395,  390,  242,  242,  242,
-      242,  242,  309,  309,  309,  309,  309,  309,  309,  309,
-      329,  329,  329,  329,  329,  329,  242,  242,  242,  242,
-      242,  242,  245,  245,  245,  245,  245,  245,  245,  245,
-
-      245,  245,  369,  386,  385,  245,  245,  245,  245,  245,
-      312,  369,  312,  312,  312,  312,  312,  312,  312,  312,
-      384,  323,  323,  353,  245,  245,  245,  245,  245,  245,
-      264,  323,  264,  264,  264,  264,  264,  264,  264,  264,
-      313,  313,  313,  313,  313,  313,  313,  313,  315,  370,
-      315,  315,  315,  315,  315,  315,  315,  315,  370,  352,
-      342,  264,  265,  403,  265,  265,  265,  265,  265,  265,
-      265,  265,  316,  403,  316,  316,  316,  316,  316,  316,
-      316,  316,  317,  417,  317,  317,  317,  317,  317,  317,
-      431,  431,  417,  265,  271,  271,  271,  271,  271,  271,
-
-      271,  271,  271,  431,  341,  335,  271,  271,  271,  271,
-      271,  322,  322,  322,  322,  322,  322,  322,  322,  363,
-      363,  363,  363,  363,  363,  271,  271,  271,  271,  271,
-      271,  281,  281,  281,  281,  281,  281,  281,  281,  281,
-      281,  281,  284,  284,  284,  284,  284,  284,  284,  284,
-      284,  284,  284,  334,  314,  306,  284,  284,  284,  284,
-      284,  326,  326,  326,  326,  326,  326,  326,  326,  427,
-      305,  326,  304,  296,  295,  284,  284,  284,  284,  284,
-      284,  287,  287,  287,  287,  287,  287,  287,  287,  287,
-      287,  427,  291,  290,  287,  287,  287,  287,  287,  328,
-
-      328,  328,  328,  328,  328,  328,  328,  380,  380,  380,
-      380,  380,  380,  287,  287,  287,  287,  287,  287,  301,
-      301,  301,  301,  301,  301,  301,  301,  301,  331,  270,
-      331,  331,  331,  331,  331,  331,  331,  331,  347,  347,
-      347,  347,  347,  347,  347,  347,  525,  525,  537,  301,
-      302,  302,  302,  302,  302,  302,  302,  302,  302,  525,
-      351,  351,  351,  351,  351,  351,  351,  347,  354,  354,
-      354,  354,  354,  354,  354,  354,  269,  268,  267,  537,
-      302,  303,  303,  303,  303,  303,  303,  303,  303,  303,
-      351,  356,  356,  356,  356,  356,  356,  356,  356,  362,
-
-      362,  362,  362,  362,  362,  362,  362,  257,  619,  256,
-      255,  303,  308,  619,  308,  308,  308,  308,  308,  308,
-      308,  308,  308,  418,  253,  252,  308,  308,  308,  308,
-      308,  365,  418,  365,  365,  365,  365,  365,  365,  365,
-      365,  251,  250,  249,  233,  308,  308,  308,  308,  308,
-      308,  311,  311,  311,  311,  311,  311,  311,  311,  311,
-      232,  231,  230,  311,  311,  311,  311,  311,  366,  450,
-      366,  366,  366,  366,  366,  366,  366,  366,  228,  450,
-      227,  218,  311,  311,  311,  311,  311,  311,  324,  324,
-      324,  324,  324,  324,  324,  324,  324,  324,  324,  327,
-
-      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
-      217,  216,  215,  327,  327,  327,  327,  327,  367,  451,
-      367,  367,  367,  367,  367,  367,  367,  367,  473,  451,
-      214,  212,  327,  327,  327,  327,  327,  327,  330,  330,
-      330,  330,  330,  330,  330,  330,  330,  371,  371,  211,
-      210,  330,  330,  330,  330,  330,  368,  371,  368,  368,
-      368,  368,  368,  368,  368,  368,  209,  208,  206,  473,
-      330,  330,  330,  330,  330,  330,  349,  349,  349,  349,
-      349,  349,  349,  349,  349,  372,  372,  373,  373,  373,
-      373,  373,  373,  373,  373,  372,  379,  379,  379,  379,
-
-      379,  379,  379,  379,  198,  197,  349,  350,  350,  350,
-      350,  350,  350,  350,  350,  350,  374,  374,  377,  377,
-      377,  377,  377,  377,  377,  377,  374,  381,  377,  381,
-      381,  381,  381,  381,  381,  381,  381,  350,  358,  475,
-      358,  358,  358,  358,  358,  358,  358,  358,  358,  361,
-      453,  361,  361,  361,  361,  361,  361,  361,  361,  361,
-      453,  194,  193,  361,  361,  361,  361,  361,  396,  465,
-      396,  396,  396,  396,  396,  396,  396,  396,  465,  186,
-      475,  185,  361,  361,  361,  361,  361,  361,  364,  364,
-      364,  364,  364,  364,  364,  364,  364,  179,  176,  175,
-
-      364,  364,  364,  364,  364,  397,  487,  397,  397,  397,
-      397,  397,  397,  397,  397,  174,  487,  173,  172,  364,
-      364,  364,  364,  364,  364,  375,  375,  375,  375,  375,
-      375,  375,  375,  375,  375,  375,  378,  378,  378,  378,
-      378,  378,  378,  378,  378,  378,  170,  419,  419,  169,
-      378,  378,  378,  378,  378,  389,  398,  419,  398,  398,
-      398,  398,  398,  398,  398,  398,  481,  481,  481,  378,
-      378,  378,  378,  378,  378,  389,  168,  389,  389,  402,
-      402,  402,  402,  402,  402,  402,  402,  408,  408,  408,
-      408,  408,  408,  408,  408,  481,  389,  391,  167,  391,
-
-      391,  391,  391,  391,  391,  391,  391,  409,  409,  409,
-      409,  409,  409,  411,  488,  411,  411,  411,  411,  411,
-      411,  411,  411,  166,  488,  165,  160,  159,  391,  392,
-      152,  392,  392,  392,  392,  392,  392,  392,  392,  412,
-      412,  412,  412,  412,  412,  412,  412,  414,  490,  414,
-      414,  414,  414,  414,  414,  414,  414,  151,  490,  150,
-      392,  393,  519,  393,  393,  393,  393,  393,  393,  393,
-      393,  415,  519,  415,  415,  415,  415,  415,  415,  415,
-      415,  416,  148,  416,  416,  416,  416,  416,  416,  430,
-      147,  143,  393,  394,  142,  394,  394,  394,  394,  394,
-
-      394,  394,  394,  459,  459,  459,  459,  459,  459,  430,
-      140,  430,  430,  136,  129,  125,  442,  122,  442,  442,
-      442,  115,  114,  113,  394,  404,  112,  404,  404,  404,
-      404,  404,  404,  404,  404,  404,  407,  111,  407,  407,
-      407,  407,  407,  407,  407,  407,  407,  442,  106,  105,
-      407,  407,  407,  407,  407,  436,  436,  436,  436,  436,
-      436,  436,  436,  496,  496,  496,  496,  496,  496,  407,
-      407,  407,  407,  407,  407,  410,  410,  410,  410,  410,
-      410,  410,  410,  410,  436,  103,   99,  410,  410,  410,
-      410,  410,  443,  443,  443,  443,  443,  443,  443,  443,
-
-      544,  544,  544,  544,  544,  544,  410,  410,  410,  410,
-      410,  410,  422,  422,  422,  422,  422,  422,  422,  422,
-      422,  422,  438,   95,  438,  438,  438,  438,  438,  438,
-      438,  438,  445,   94,  445,  445,  445,  445,  445,  445,
-      445,  445,  446,   90,  446,  446,  446,  446,  446,  446,
-      446,  446,   87,  438,  439,   85,  439,  439,  439,  439,
-      439,  439,  439,  439,  447,   80,  447,  447,  447,  447,
-      447,  447,  452,  452,  452,  452,  452,  452,  452,  452,
-       79,   78,   76,   75,   73,  439,  440,   68,  440,  440,
-      440,  440,  440,  440,  440,  440,  458,  458,  458,  458,
-
-      458,  458,  458,  458,  461,   61,  461,  461,  461,  461,
-      461,  461,  461,  461,   54,   48,   47,  440,  441,   46,
-      441,  441,  441,  441,  441,  441,  441,  441,  462,  462,
-      462,  462,  462,  462,  462,  462,  462,  463,  463,  463,
-      463,  463,  463,  463,  463,  463,   45,   44,   43,  441,
-      454,   37,  454,  454,  454,  454,  454,  454,  454,  454,
-      454,  457,   36,  457,  457,  457,  457,  457,  457,  457,
-      457,  457,   35,   33,   29,  457,  457,  457,  457,  457,
-      464,  464,  464,  464,  464,  464,  464,  464,  464,   23,
-       17,   15,   14,   13,  457,  457,  457,  457,  457,  457,
-
-      460,  460,  460,  460,  460,  460,  460,  460,    0,    0,
-        0,    0,  460,  460,  460,  460,  460,  474,    0,    0,
-        0,  474,    0,  474,  474,    0,    0,  474,    0,    0,
-        0,  460,  460,  460,  460,  460,  460,    0,  476,  474,
-      474,  474,  476,    0,  476,  476,    0,    0,  476,  480,
-      480,  480,  480,  480,  480,  480,  480,    0,    0,    0,
-      476,  476,  476,  477,    0,  477,  477,  477,  477,  477,
-      477,  477,  477,    0,    0,    0,    0,  482,  480,  482,
-      482,  482,  482,  482,  482,  482,  482,  501,  501,  501,
-      501,  501,  501,  501,  477,  478,    0,  478,  478,  478,
-
-      478,  478,  478,  478,  478,  483,    0,  483,  483,  483,
-      483,  483,  483,  483,  483,  484,    0,  484,  484,  484,
-      484,  484,  484,  484,  484,    0,  478,  479,    0,  479,
-      479,  479,  479,  479,  479,  479,  479,  489,  489,  489,
-      489,  489,  489,  489,  489,  495,  495,  495,  495,  495,
-      495,  495,  495,    0,    0,    0,    0,    0,  479,  491,
-        0,  491,  491,  491,  491,  491,  491,  491,  491,  491,
-      494,    0,  494,  494,  494,  494,  494,  494,  494,  494,
-        0,    0,    0,    0,  494,  494,  494,  494,  494,  497,
-        0,  497,  497,  497,  497,  497,  497,  497,  497,    0,
-
-        0,    0,    0,  494,  494,  494,  494,  494,  494,  499,
-      499,  499,  499,  499,  499,  499,  499,  499,  500,  500,
-      500,  500,  500,  500,  500,  500,  500,  507,  507,  507,
-      507,  507,  507,  507,  507,    0,  511,    0,  511,  511,
-      511,  511,  511,  511,  512,  512,  512,  512,  512,  512,
-      512,  512,    0,    0,    0,    0,  507,  509,    0,  509,
-      509,  509,  509,  509,  509,  509,  509,  511,  514,    0,
-      514,  514,  514,  514,  514,  514,  514,  514,  515,    0,
-      515,  515,  515,  515,  515,  515,  515,  515,  509,  510,
-        0,  510,  510,  510,  510,  510,  510,  510,  510,  516,
-
-        0,  516,  516,  516,  516,  516,  516,  522,    0,  522,
-      522,  522,  522,  522,  522,  522,  522,    0,    0,    0,
-      510,  526,    0,  526,  526,  526,  526,  526,  526,  526,
-      526,  529,  529,  529,  529,  529,  529,  529,  529,  530,
-      530,  530,  530,  530,  530,  530,  530,    0,    0,    0,
-        0,    0,  526,  527,    0,  527,  527,  527,  527,  527,
-      527,  527,  527,  531,  531,  531,  531,  531,  531,  531,
-      531,  536,  536,  536,  536,  536,  536,  536,  536,    0,
-        0,    0,    0,    0,  527,  528,    0,  528,  528,  528,
-      528,  528,  528,  528,  528,    0,    0,    0,    0,  540,
-
-      536,  540,  540,  540,  540,  540,  540,  542,  542,  542,
-      542,  542,  542,  542,  542,    0,  528,  538,    0,  538,
-      538,  538,  538,  538,  538,  538,  538,    0,    0,    0,
-      540,  543,  543,  543,  543,  543,  543,  543,  543,  548,
-      548,  548,  548,  548,  548,  548,  548,    0,  538,  539,
-        0,  539,  539,  539,  539,  539,  539,  539,  539,  549,
-      549,  549,  549,  549,  549,  549,  549,    0,  548,  550,
-      550,  550,  550,  550,  550,  550,  550,    0,    0,    0,
-      539,  553,  553,  553,  553,  553,  553,    0,  549,  552,
-      552,  552,  552,  552,  552,  552,  552,    0,  550,    0,
 
-        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-      553,    0,    0,    0,    0,    0,    0,    0,  552,  555,
-      555,  555,  555,  555,  555,  555,  555,  555,  555,  555,
-      555,  555,  555,  556,  556,  556,  556,  556,  556,  556,
-      556,  556,  556,  556,  556,  556,  556,  557,  557,  557,
-      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
-      557,  558,  558,  558,  558,  558,  558,  558,  558,  558,
-      558,  558,  558,  558,  558,  559,    0,    0,    0,  559,
-        0,  559,  559,  559,    0,    0,  559,  559,  559,  560,
-      560,    0,  560,  560,  560,  560,  560,  560,  560,  560,
-
-      560,  560,  560,  561,  561,  561,  561,  561,  561,  561,
-      561,  561,  561,  561,  561,  561,  561,  562,    0,    0,
-        0,  562,    0,  562,  562,  562,  562,    0,  562,  562,
-      562,  563,    0,    0,    0,  563,    0,  563,  563,  563,
-        0,    0,  563,  563,  563,  564,    0,    0,  564,  564,
-      564,  564,  564,  564,    0,    0,  564,  564,  564,  565,
-      565,    0,    0,    0,  565,  566,    0,    0,  566,  566,
-      566,  566,  566,  566,    0,    0,  566,  566,  566,  567,
-        0,    0,  567,  567,  567,  567,  567,  567,    0,  567,
-        0,  567,  567,  569,    0,    0,  569,    0,  569,  569,
-
-      569,  569,  569,    0,  569,  569,  569,  570,  570,  570,
+       32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
+       32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
+       32,   32,   35,   35,   35,   35,   35,   35,   35,   35,
+       35,  200,  200,  200,   35,   35,   35,   35,   35,   35,
+      268,  112,  125,  125,  125,  125,  125,  125,  125,  125,
+      268,  266,  227,  336,  336,   35,   35,   35,   35,   35,
+       35,   39,   39,   39,  240,   39,  253,   39,   39,  112,
+      112,   39,  126,  240,  112,  227,  126,  126,  307,  112,
+      373,  373,  112,   39,   39,   39,   43,  139,  253,  229,
+      139,  139,  227,  262,  126,  229,   43,  139,  262,   43,
+
+       43,   43,   43,   43,   43,   43,   43,  128,  271,  128,
+      139,  128,  266,  128,  128,  126,  297,  128,  135,  135,
+      135,  135,  135,  135,  135,  135,  402,  307,  402,  128,
+      128,  128,  207,  207,  207,  207,  207,  207,  297,   43,
+       59,  271,  191,  191,  191,  191,  191,  191,  191,  191,
+       59,  518,  308,   59,   59,   59,   59,   59,   59,   59,
+       59,   78,  308,   78,   78,   78,  280,   78,   78,  298,
+      155,   78,  155,  191,  155,  280,  155,  155,  156,  514,
+      155,  284,  156,   78,   78,   78,  242,  242,  156,  304,
+      284,  298,  155,  155,  155,  187,  242,  269,  304,  187,
+
+      156,  156,  269,  502,  302,  187,   78,   94,   94,   94,
+       94,   94,   94,   94,   94,  244,  244,  187,  187,   94,
+       94,   94,   94,   94,   94,  244,  302,  390,  390,  285,
+      285,  195,  303,  195,  195,  195,  195,  195,  195,  285,
+       94,   94,   94,   94,   94,   94,  102,  102,  102,  102,
+      102,  102,  102,  102,  303,  501,  342,  487,  102,  102,
+      102,  102,  102,  102,  195,  199,  199,  199,  199,  199,
+      199,  199,  199,  199,  420,  420,  286,  286,  342,  102,
+      102,  102,  102,  102,  102,  157,  286,  157,  157,  157,
+      157,  157,  157,  157,  157,  204,  204,  204,  204,  204,
+
+      204,  204,  204,  206,  206,  206,  206,  206,  206,  206,
+      206,  250,  250,  250,  250,  250,  250,  361,  157,  158,
+      368,  158,  158,  158,  158,  158,  158,  158,  158,  209,
+      368,  209,  209,  209,  209,  209,  209,  209,  209,  235,
+      235,  235,  235,  235,  235,  235,  235,  235,  356,  361,
+      434,  434,  158,  159,  485,  159,  159,  159,  159,  159,
+      159,  159,  159,  241,  241,  241,  241,  241,  241,  241,
+      241,  243,  243,  243,  243,  243,  243,  243,  243,  294,
+      294,  294,  294,  294,  294,  358,  159,  160,  310,  160,
+      160,  160,  160,  160,  160,  160,  160,  310,  356,  309,
+
+      358,  160,  160,  160,  160,  160,  160,  249,  249,  249,
+      249,  249,  249,  249,  249,  309,  320,  320,  320,  320,
+      320,  320,  160,  160,  160,  160,  160,  160,  163,  163,
+      163,  163,  163,  163,  163,  163,  163,  288,  288,  484,
+      163,  163,  163,  163,  163,  163,  252,  288,  252,  252,
+      252,  252,  252,  252,  252,  252,  344,  349,  435,  435,
+      482,  163,  163,  163,  163,  163,  163,  165,  165,  165,
+      165,  165,  165,  165,  165,  165,  165,  465,  344,  349,
+      165,  165,  165,  165,  165,  165,  270,  270,  270,  270,
+      270,  270,  270,  270,  339,  339,  339,  339,  339,  339,
+
+      353,  165,  165,  165,  165,  165,  165,  166,  166,  166,
+      166,  166,  166,  166,  166,  351,  353,  270,  359,  166,
+      166,  166,  166,  166,  166,  274,  328,  274,  274,  274,
+      274,  274,  274,  464,  359,  328,  460,  351,  329,  445,
+      166,  166,  166,  166,  166,  166,  193,  329,  193,  193,
+      193,  193,  193,  193,  193,  193,  395,  281,  274,  281,
+      281,  281,  281,  281,  281,  281,  281,  282,  357,  282,
+      282,  282,  282,  282,  282,  282,  282,  357,  395,  193,
+      194,  370,  194,  194,  194,  194,  194,  194,  194,  194,
+      283,  370,  283,  283,  283,  283,  283,  283,  283,  283,
+
+      287,  287,  287,  287,  287,  287,  287,  287,  438,  438,
+      449,  472,  472,  194,  205,  205,  205,  205,  205,  205,
+      205,  205,  205,  205,  205,  449,  396,  427,  205,  205,
+      205,  205,  205,  205,  293,  293,  293,  293,  293,  293,
+      293,  293,  376,  376,  376,  376,  376,  376,  396,  205,
+      205,  205,  205,  205,  205,  208,  208,  208,  208,  208,
+      208,  208,  208,  208,  208,  330,  330,  413,  208,  208,
+      208,  208,  208,  208,  296,  330,  296,  296,  296,  296,
+      296,  296,  296,  296,  483,  483,  331,  331,  409,  208,
+      208,  208,  208,  208,  208,  230,  331,  230,  230,  230,
+
+      230,  230,  230,  230,  230,  317,  317,  317,  317,  317,
+      317,  317,  317,  319,  319,  319,  319,  319,  319,  319,
+      319,  382,  393,  393,  393,  393,  393,  393,  230,  231,
+      382,  231,  231,  231,  231,  231,  231,  231,  231,  322,
+      404,  322,  322,  322,  322,  322,  322,  322,  322,  323,
+      323,  323,  323,  323,  323,  323,  323,  509,  509,  522,
+      522,  453,  231,  232,  414,  232,  232,  232,  232,  232,
+      232,  232,  232,  325,  414,  325,  325,  325,  325,  325,
+      325,  325,  325,  326,  383,  326,  326,  326,  326,  326,
+      326,  326,  326,  383,  453,  400,  232,  245,  245,  245,
+
+      245,  245,  245,  245,  245,  245,  245,  245,  248,  248,
+      248,  248,  248,  248,  248,  248,  248,  248,  248,  333,
+      333,  399,  248,  248,  248,  248,  248,  248,  327,  333,
+      327,  327,  327,  327,  327,  327,  398,  397,  439,  441,
+      401,  401,  366,  248,  248,  248,  248,  248,  248,  251,
+      251,  251,  251,  251,  251,  251,  251,  251,  251,  397,
+      439,  441,  251,  251,  251,  251,  251,  251,  332,  332,
+      332,  332,  332,  332,  332,  332,  364,  364,  364,  364,
+      364,  364,  364,  251,  251,  251,  251,  251,  251,  272,
+      401,  272,  272,  272,  272,  272,  272,  272,  272,  338,
+
+      338,  338,  338,  338,  338,  338,  338,  341,  364,  341,
+      341,  341,  341,  341,  341,  341,  341,  365,  524,  540,
+      540,  553,  272,  273,  415,  273,  273,  273,  273,  273,
+      273,  273,  273,  443,  415,  360,  360,  360,  360,  360,
+      360,  360,  360,  367,  367,  367,  367,  367,  367,  367,
+      367,  524,  584,  584,  553,  443,  273,  279,  279,  279,
+      279,  279,  279,  279,  279,  279,  360,  448,  355,  279,
+      279,  279,  279,  279,  279,  369,  369,  369,  369,  369,
+      369,  369,  369,  423,  423,  423,  423,  423,  423,  354,
+      279,  279,  279,  279,  279,  279,  289,  289,  289,  289,
+
+      289,  289,  289,  289,  289,  289,  289,  292,  292,  292,
+      292,  292,  292,  292,  292,  292,  292,  292,  446,  486,
+      448,  292,  292,  292,  292,  292,  292,  375,  375,  375,
+      375,  375,  375,  375,  375,  450,  451,  488,  446,  348,
+      446,  446,  292,  292,  292,  292,  292,  292,  295,  295,
+      295,  295,  295,  295,  295,  295,  295,  295,  384,  384,
+      347,  295,  295,  295,  295,  295,  295,  378,  384,  378,
+      378,  378,  378,  378,  378,  378,  378,  486,  450,  451,
+      488,  346,  295,  295,  295,  295,  295,  295,  311,  311,
+      311,  311,  311,  311,  311,  311,  311,  379,  417,  379,
+
+      379,  379,  379,  379,  379,  379,  379,  380,  417,  380,
+      380,  380,  380,  380,  380,  380,  380,  324,  447,  447,
+      311,  312,  312,  312,  312,  312,  312,  312,  312,  312,
+      381,  447,  381,  381,  381,  381,  381,  381,  381,  381,
+      385,  385,  386,  386,  386,  386,  386,  386,  386,  386,
+      385,  316,  315,  312,  313,  313,  313,  313,  313,  313,
+      313,  313,  313,  387,  387,  392,  392,  392,  392,  392,
+      392,  392,  392,  387,  394,  431,  394,  394,  394,  394,
+      394,  394,  394,  394,  431,  314,  313,  318,  466,  318,
+      318,  318,  318,  318,  318,  318,  318,  318,  466,  432,
+
+      306,  318,  318,  318,  318,  318,  318,  410,  432,  410,
+      410,  410,  410,  410,  410,  410,  410,  305,  301,  300,
+      299,  278,  318,  318,  318,  318,  318,  318,  321,  321,
+      321,  321,  321,  321,  321,  321,  321,  433,  433,  277,
+      321,  321,  321,  321,  321,  321,  411,  433,  411,  411,
+      411,  411,  411,  411,  411,  411,  458,  276,  458,  458,
+      458,  321,  321,  321,  321,  321,  321,  334,  334,  334,
+      334,  334,  334,  334,  334,  334,  334,  334,  337,  337,
+      337,  337,  337,  337,  337,  337,  337,  337,  337,  458,
+      275,  265,  337,  337,  337,  337,  337,  337,  412,  467,
+
+      412,  412,  412,  412,  412,  412,  412,  412,  403,  467,
+      264,  263,  261,  337,  337,  337,  337,  337,  337,  340,
+      340,  340,  340,  340,  340,  340,  340,  340,  403,  260,
+      403,  403,  340,  340,  340,  340,  340,  340,  416,  416,
+      416,  416,  416,  416,  416,  416,  489,  491,  259,  258,
+      257,  403,  256,  340,  340,  340,  340,  340,  340,  362,
+      362,  362,  362,  362,  362,  362,  362,  362,  422,  422,
+      422,  422,  422,  422,  422,  422,  425,  469,  425,  425,
+      425,  425,  425,  425,  425,  425,  255,  469,  239,  489,
+      491,  362,  363,  363,  363,  363,  363,  363,  363,  363,
+
+      363,  426,  426,  426,  426,  426,  426,  426,  426,  428,
+      481,  428,  428,  428,  428,  428,  428,  428,  428,  481,
+      238,  629,  237,  236,  363,  371,  629,  371,  371,  371,
+      371,  371,  371,  371,  371,  371,  374,  503,  374,  374,
+      374,  374,  374,  374,  374,  374,  374,  503,  234,  233,
+      374,  374,  374,  374,  374,  374,  429,  504,  429,  429,
+      429,  429,  429,  429,  429,  429,  224,  504,  223,  222,
+      221,  374,  374,  374,  374,  374,  374,  377,  377,  377,
+      377,  377,  377,  377,  377,  377,  506,  220,  218,  377,
+      377,  377,  377,  377,  377,  430,  506,  430,  430,  430,
+
+      430,  430,  430,  475,  475,  475,  475,  475,  475,  217,
+      377,  377,  377,  377,  377,  377,  388,  388,  388,  388,
+      388,  388,  388,  388,  388,  388,  388,  391,  391,  391,
+      391,  391,  391,  391,  391,  391,  391,  216,  497,  497,
+      497,  391,  391,  391,  391,  391,  391,  452,  452,  452,
+      452,  452,  452,  452,  452,  512,  512,  512,  512,  512,
+      512,  215,  391,  391,  391,  391,  391,  391,  405,  497,
+      405,  405,  405,  405,  405,  405,  405,  405,  452,  459,
+      459,  459,  459,  459,  459,  459,  459,  461,  535,  461,
+      461,  461,  461,  461,  461,  461,  461,  214,  535,  213,
+
+      212,  405,  406,  210,  406,  406,  406,  406,  406,  406,
+      406,  406,  462,  202,  462,  462,  462,  462,  462,  462,
+      462,  462,  463,  201,  463,  463,  463,  463,  463,  463,
+      198,  197,  636,  190,  189,  406,  407,  636,  407,  407,
+      407,  407,  407,  407,  407,  407,  468,  468,  468,  468,
+      468,  468,  468,  468,  474,  474,  474,  474,  474,  474,
+      474,  474,  517,  517,  517,  517,  517,  517,  517,  407,
+      408,  183,  408,  408,  408,  408,  408,  408,  408,  408,
+      476,  476,  476,  476,  476,  476,  476,  476,  477,  180,
+      477,  477,  477,  477,  477,  477,  477,  477,  179,  178,
+
+      177,  176,  174,  408,  418,  173,  418,  418,  418,  418,
+      418,  418,  418,  418,  418,  421,  172,  421,  421,  421,
+      421,  421,  421,  421,  421,  421,  171,  170,  169,  421,
+      421,  421,  421,  421,  421,  478,  478,  478,  478,  478,
+      478,  478,  478,  478,  560,  560,  560,  560,  560,  560,
+      421,  421,  421,  421,  421,  421,  424,  424,  424,  424,
+      424,  424,  424,  424,  424,  168,  167,  162,  424,  424,
+      424,  424,  424,  424,  479,  479,  479,  479,  479,  479,
+      479,  479,  479,  161,  154,  153,  152,  150,  149,  424,
+      424,  424,  424,  424,  424,  436,  436,  436,  436,  436,
+
+      436,  436,  436,  436,  436,  454,  145,  454,  454,  454,
+      454,  454,  454,  454,  454,  480,  480,  480,  480,  480,
+      480,  480,  480,  480,  144,  142,  138,  490,  131,  127,
+      124,  490,  117,  490,  490,  116,  115,  490,  454,  455,
+      114,  455,  455,  455,  455,  455,  455,  455,  455,  490,
+      490,  490,  511,  511,  511,  511,  511,  511,  511,  511,
+      113,  492,  108,  107,  105,  492,  104,  492,  492,  100,
+       96,  492,  455,  456,   95,  456,  456,  456,  456,  456,
+      456,  456,  456,  492,  492,  492,  496,  496,  496,  496,
+      496,  496,  496,  496,  498,   91,  498,  498,  498,  498,
+
+      498,  498,  498,  498,   88,   86,  456,  457,   81,  457,
+      457,  457,  457,  457,  457,  457,  457,  496,  499,   80,
+      499,  499,  499,  499,  499,  499,  499,  499,  500,   79,
+      500,  500,  500,  500,  500,  500,  500,  500,   77,   76,
+      457,  470,   74,  470,  470,  470,  470,  470,  470,  470,
+      470,  470,  473,   69,  473,  473,  473,  473,  473,  473,
+      473,  473,  473,   62,   55,   49,  473,  473,  473,  473,
+      473,  473,  513,   48,  513,  513,  513,  513,  513,  513,
+      513,  513,   47,   46,   45,   44,   38,  473,  473,  473,
+      473,  473,  473,  493,   37,  493,  493,  493,  493,  493,
+
+      493,  493,  493,  515,  515,  515,  515,  515,  515,  515,
+      515,  515,  516,  516,  516,  516,  516,  516,  516,  516,
+      516,   36,   34,   33,  541,  541,  493,  494,   29,  494,
+      494,  494,  494,  494,  494,  494,  494,  541,   23,   17,
+      523,  523,  523,  523,  523,  523,  523,  523,  527,   15,
+      527,  527,  527,  527,  527,  527,   14,   13,    0,    0,
+      494,  495,    0,  495,  495,  495,  495,  495,  495,  495,
+      495,  523,  528,  528,  528,  528,  528,  528,  528,  528,
+      530,  527,  530,  530,  530,  530,  530,  530,  530,  530,
+        0,    0,    0,    0,  495,  507,    0,  507,  507,  507,
+
+      507,  507,  507,  507,  507,  507,  510,    0,  510,  510,
+      510,  510,  510,  510,  510,  510,    0,    0,    0,    0,
+      510,  510,  510,  510,  510,  510,  531,    0,  531,  531,
+      531,  531,  531,  531,  531,  531,    0,    0,    0,    0,
+        0,  510,  510,  510,  510,  510,  510,  525,    0,  525,
+      525,  525,  525,  525,  525,  525,  525,  532,    0,  532,
+      532,  532,  532,  532,  532,  538,    0,  538,  538,  538,
+      538,  538,  538,  538,  538,    0,    0,    0,    0,    0,
+      525,  526,    0,  526,  526,  526,  526,  526,  526,  526,
+      526,  545,  545,  545,  545,  545,  545,  545,  545,  546,
+
+      546,  546,  546,  546,  546,  546,  546,    0,    0,    0,
+        0,    0,    0,    0,  526,  542,    0,  542,  542,  542,
+      542,  542,  542,  542,  542,  547,  547,  547,  547,  547,
+      547,  547,  547,  552,  552,  552,  552,  552,  552,  552,
+      552,    0,    0,    0,    0,    0,    0,    0,  542,  543,
+        0,  543,  543,  543,  543,  543,  543,  543,  543,    0,
+        0,    0,    0,  556,  552,  556,  556,  556,  556,  556,
+      556,  558,  558,  558,  558,  558,  558,  558,  558,    0,
+        0,    0,  543,  544,    0,  544,  544,  544,  544,  544,
+      544,  544,  544,    0,    0,    0,  556,  559,  559,  559,
+
+      559,  559,  559,  559,  559,  564,  564,  564,  564,  564,
+      564,  564,  564,    0,    0,    0,  544,  554,    0,  554,
+      554,  554,  554,  554,  554,  554,  554,    0,    0,    0,
+      569,  569,  569,  569,  569,  569,  564,  565,  565,  565,
+      565,  565,  565,  565,  565,    0,    0,    0,    0,    0,
+      554,  555,    0,  555,  555,  555,  555,  555,  555,  555,
+      555,  569,    0,    0,    0,    0,    0,    0,  565,  566,
+      566,  566,  566,  566,  566,  566,  566,    0,    0,    0,
+        0,    0,    0,    0,  555,  568,  568,  568,  568,  568,
+      568,  568,  568,    0,    0,    0,    0,    0,    0,    0,
+
+      566,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+        0,    0,    0,    0,    0,    0,  568,  571,  571,  571,
+      571,  571,  571,  571,  571,  571,  571,  571,  571,  571,
+      571,  572,  572,  572,  572,  572,  572,  572,  572,  572,
+      572,  572,  572,  572,  572,  573,  573,  573,  573,  573,
+      573,  573,  573,  573,  573,  573,  573,  573,  573,  574,
+      574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
+      574,  574,  574,  575,    0,    0,    0,  575,    0,  575,
+      575,  575,    0,    0,  575,  575,  575,  576,  576,    0,
+      576,  576,  576,  576,  576,  576,  576,  576,  576,  576,
+
+      576,  577,  577,  577,  577,  577,  577,  577,  577,  577,
+      577,  577,  577,  577,  577,  578,    0,    0,    0,  578,
+        0,  578,  578,  578,  578,    0,  578,  578,  578,  579,
+        0,    0,    0,  579,    0,  579,  579,  579,    0,    0,
+      579,  579,  579,  580,    0,    0,  580,  580,  580,  580,
+      580,  580,    0,    0,  580,  580,  580,  581,  581,    0,
+        0,    0,  581,  582,    0,    0,  582,  582,  582,  582,
+      582,  582,    0,    0,  582,  582,  582,  583,    0,    0,
+      583,  583,  583,  583,  583,  583,    0,  583,    0,  583,
+      583,  585,    0,    0,  585,    0,  585,  585,  585,  585,
+
+      585,    0,  585,  585,  585,  586,  586,  586,  586,  586,
+      586,  586,  586,  586,  586,  586,  586,  586,  586,  587,
+      587,    0,  587,    0,  587,  587,  587,  587,  587,  587,
+      587,  587,  587,  588,  588,    0,  588,  588,  588,  588,
+      588,  588,  588,  588,  588,  588,  588,  589,  589,  589,
+      589,  589,  589,  589,  589,  589,  589,  589,  589,  589,
+      589,  590,  590,    0,  590,  590,  590,  590,  590,  590,
+      590,  590,  590,  590,  590,  591,    0,    0,    0,  591,
+        0,  591,  591,  591,    0,    0,  591,  591,  591,  592,
+        0,    0,  592,  592,  592,  592,  592,  592,    0,    0,
+
+      592,  592,  592,  593,  593,    0,    0,    0,  593,  594,
+      594,  594,    0,    0,    0,  594,  595,    0,    0,  595,
+      595,  595,  595,  595,  595,    0,    0,  595,  595,  595,
+      596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
+      596,  596,  596,  596,  597,  597,    0,    0,    0,  597,
+      598,  598,  598,    0,    0,    0,  598,  599,  599,    0,
+        0,    0,  599,  600,  600,    0,    0,    0,  600,  601,
+      601,    0,    0,    0,  601,  602,  602,  602,    0,    0,
+        0,  602,  603,  603,    0,    0,    0,  603,  604,  604,
+        0,    0,    0,  604,  605,  605,    0,    0,    0,  605,
+
+      606,  606,  606,    0,    0,    0,  606,  607,  607,  607,
+      607,    0,    0,    0,  607,  608,  608,    0,    0,    0,
+      608,  609,  609,    0,    0,    0,  609,  610,  610,    0,
+        0,    0,  610,  611,  611,  611,    0,    0,    0,  611,
+      612,  612,  612,  612,    0,    0,    0,  612,  613,  613,
+        0,    0,    0,  613,  614,  614,    0,    0,    0,  614,
+      615,  615,  615,    0,    0,    0,  615,  616,  616,  616,
+      616,    0,    0,    0,  616,  617,  617,    0,    0,    0,
+      617,  618,    0,  618,  618,    0,    0,    0,  618,  619,
+      619,  619,    0,    0,    0,  619,  620,  620,  620,  620,
+
+        0,    0,    0,  620,  621,  621,    0,    0,    0,  621,
+      622,    0,  622,  622,    0,    0,    0,  622,  623,  623,
+      623,    0,    0,    0,  623,  624,  624,  624,    0,    0,
+        0,    0,  624,  625,    0,    0,  625,  625,    0,  625,
+      625,  625,    0,    0,  625,  625,  625,  626,    0,    0,
+      626,  626,    0,  626,  626,  626,    0,    0,  626,  626,
+      626,  627,  627,    0,    0,    0,  627,  628,    0,  628,
+      628,    0,    0,    0,  628,  630,  630,    0,    0,    0,
+        0,  630,  631,  631,  631,  631,  631,  631,  631,  631,
+      631,  631,  631,  631,  631,  631,  632,  632,    0,    0,
+
+        0,  632,  633,    0,  633,  633,    0,    0,    0,  633,
+      634,  634,    0,    0,    0,  634,  635,    0,  635,    0,
+        0,    0,    0,  635,  637,  637,  637,  637,  637,  637,
+      637,  637,  637,  637,  637,  637,  637,  637,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
+      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
       570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
-      570,  571,  571,    0,  571,    0,  571,  571,  571,  571,
-      571,  571,  571,  571,  571,  572,  572,    0,  572,  572,
-      572,  572,  572,  572,  572,  572,  572,  572,  572,  573,
-      573,  573,  573,  573,  573,  573,  573,  573,  573,  573,
-      573,  573,  573,  574,  574,    0,  574,  574,  574,  574,
-      574,  574,  574,  574,  574,  574,  574,  575,    0,    0,
-        0,  575,    0,  575,  575,  575,    0,    0,  575,  575,
-      575,  576,    0,    0,  576,  576,  576,  576,  576,  576,
-
-        0,    0,  576,  576,  576,  577,  577,    0,    0,    0,
-      577,  578,  578,  578,    0,    0,    0,  578,  579,    0,
-        0,  579,  579,  579,  579,  579,  579,    0,    0,  579,
-      579,  579,  580,  580,  580,  580,  580,  580,  580,  580,
-      580,  580,  580,  580,  580,  580,  581,  581,    0,    0,
-        0,  581,  582,  582,  582,    0,    0,    0,  582,  583,
-      583,    0,    0,    0,  583,  584,  584,    0,    0,    0,
-      584,  585,  585,    0,    0,    0,  585,  586,  586,  586,
-        0,    0,    0,  586,  587,  587,    0,    0,    0,  587,
-      588,  588,    0,    0,    0,  588,  589,  589,    0,    0,
-
-        0,  589,  590,  590,  590,    0,    0,    0,  590,  591,
-      591,  591,  591,    0,    0,    0,  591,  592,  592,    0,
-        0,    0,  592,  593,  593,    0,    0,    0,  593,  594,
-      594,    0,    0,    0,  594,  595,  595,  595,    0,    0,
-        0,  595,  596,  596,  596,  596,    0,    0,    0,  596,
-      597,  597,    0,    0,    0,  597,  598,  598,    0,    0,
-        0,  598,  599,  599,  599,    0,    0,    0,  599,  600,
-      600,  600,  600,    0,    0,    0,  600,  601,  601,    0,
-        0,    0,  601,  602,    0,  602,  602,    0,    0,    0,
-      602,  603,  603,  603,    0,    0,    0,  603,  604,  604,
-
-      604,  604,    0,    0,    0,  604,  605,  605,    0,    0,
-        0,  605,  606,    0,  606,  606,    0,    0,    0,  606,
-      607,  607,  607,    0,    0,    0,  607,  608,  608,  608,
-        0,    0,    0,    0,  608,  609,    0,    0,  609,  609,
-        0,  609,  609,  609,    0,    0,  609,  609,  609,  610,
-        0,    0,  610,  610,    0,  610,  610,  610,    0,    0,
-      610,  610,  610,  611,  611,    0,    0,    0,  611,  612,
-        0,  612,  612,    0,    0,    0,  612,  613,  613,    0,
-        0,    0,    0,  613,  614,  614,  614,  614,  614,  614,
-      614,  614,  614,  614,  614,  614,  614,  614,  615,  615,
-
-        0,    0,    0,  615,  616,    0,  616,  616,    0,    0,
-        0,  616,  617,  617,    0,    0,    0,  617,  618,    0,
-      618,    0,    0,    0,    0,  618,  620,  620,  620,  620,
-      620,  620,  620,  620,  620,  620,  620,  620,  620,  620,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
-      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
 
-      554,  554,  554
+      570,  570,  570
     } ;
 
 static yy_state_type yy_last_accepting_state;
 static char *yy_last_accepting_cpos;
 
+extern int yy_flex_debug;
+int yy_flex_debug = 0;
+
 /* The intent behind this definition is that it'll catch
  * any uses of REJECT which flex missed.
  */
@@ -1356,7 +1454,6 @@ static char *yy_last_accepting_cpos;
 #define YY_RESTORE_YY_MORE_OFFSET
 char *yytext;
 #line 1 "toke.l"
-#define INITIAL 0
 #line 2 "toke.l"
 /*
  * Copyright (c) 1996, 1998-2005, 2007-2010
@@ -1460,18 +1557,62 @@ extern void yyerror		__P((const char *))
 #else
 #define LEXTRACE(msg)
 #endif
-#define YY_NO_UNPUT 1
-#define GOTDEFS 1
 
-#define GOTCMND 2
 
-#define STARTDEFS 3
 
-#define INDEFS 4
 
+
+#line 1566 "lex.yy.c"
+
+#define INITIAL 0
+#define GOTDEFS 1
+#define GOTCMND 2
+#define STARTDEFS 3
+#define INDEFS 4
 #define INSTR 5
 
-#line 1475 "lex.yy.c"
+#ifndef YY_NO_UNISTD_H
+/* Special case for "unistd.h", since it is non-ANSI. We include it way
+ * down here because we want the user's section 1 to have been scanned first.
+ * The user has a chance to override it with an option.
+ */
+#include <unistd.h>
+#endif
+
+#ifndef YY_EXTRA_TYPE
+#define YY_EXTRA_TYPE void *
+#endif
+
+static int yy_init_globals (void );
+
+/* Accessor methods to globals.
+   These are made visible to non-reentrant scanners for convenience. */
+
+int yylex_destroy (void );
+
+int yyget_debug (void );
+
+void yyset_debug (int debug_flag  );
+
+YY_EXTRA_TYPE yyget_extra (void );
+
+void yyset_extra (YY_EXTRA_TYPE user_defined  );
+
+FILE *yyget_in (void );
+
+void yyset_in  (FILE * in_str  );
+
+FILE *yyget_out (void );
+
+void yyset_out  (FILE * out_str  );
+
+int yyget_leng (void );
+
+char *yyget_text (void );
+
+int yyget_lineno (void );
+
+void yyset_lineno (int line_number  );
 
 /* Macros after this point can all be overridden by user definitions in
  * section 1.
@@ -1479,79 +1620,46 @@ extern void yyerror		__P((const char *))
 
 #ifndef YY_SKIP_YYWRAP
 #ifdef __cplusplus
-extern "C" int yywrap YY_PROTO(( void ));
+extern "C" int yywrap (void );
 #else
-extern int yywrap YY_PROTO(( void ));
+extern int yywrap (void );
 #endif
 #endif
 
-#ifndef YY_NO_UNPUT
-static void yyunput YY_PROTO(( int c, char *buf_ptr ));
-#endif
-
 #ifndef yytext_ptr
-static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
+static void yy_flex_strncpy (char *,yyconst char *,int );
 #endif
 
 #ifdef YY_NEED_STRLEN
-static int yy_flex_strlen YY_PROTO(( yyconst char * ));
+static int yy_flex_strlen (yyconst char * );
 #endif
 
 #ifndef YY_NO_INPUT
-#ifdef __cplusplus
-static int yyinput YY_PROTO(( void ));
-#else
-static int input YY_PROTO(( void ));
-#endif
-#endif
-
-#if defined(YY_STACK_USED) && YY_STACK_USED
-static int yy_start_stack_ptr = 0;
-static int yy_start_stack_depth = 0;
-static int *yy_start_stack = 0;
-#ifndef YY_NO_PUSH_STATE
-static void yy_push_state YY_PROTO(( int new_state ));
-#endif
-#ifndef YY_NO_POP_STATE
-static void yy_pop_state YY_PROTO(( void ));
-#endif
-#ifndef YY_NO_TOP_STATE
-static int yy_top_state YY_PROTO(( void ));
-#endif
 
+#ifdef __cplusplus
+static int yyinput (void );
 #else
-#define YY_NO_PUSH_STATE 1
-#define YY_NO_POP_STATE 1
-#define YY_NO_TOP_STATE 1
+static int input (void );
 #endif
 
-#ifdef YY_MALLOC_DECL
-YY_MALLOC_DECL
-#else
-#ifdef __STDC__
-#ifndef __cplusplus
-#include <stdlib.h>
-#endif
-#else
-/* Just try to get by without declaring the routines.  This will fail
- * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
- * or sizeof(void*) != sizeof(int).
- */
-#endif
 #endif
 
 /* Amount of stuff to slurp up with each read. */
 #ifndef YY_READ_BUF_SIZE
+#ifdef __ia64__
+/* On IA-64, the buffer size is 16k, not 8k */
+#define YY_READ_BUF_SIZE 16384
+#else
 #define YY_READ_BUF_SIZE 8192
+#endif /* __ia64__ */
 #endif
 
 /* Copy whatever the last rule matched to the standard output. */
-
 #ifndef ECHO
 /* This used to be an fputs(), but since the string might contain NUL's,
  * we now use fwrite().
  */
-#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
+#define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
 #endif
 
 /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
@@ -1559,9 +1667,10 @@ YY_MALLOC_DECL
  */
 #ifndef YY_INPUT
 #define YY_INPUT(buf,result,max_size) \
-	if ( yy_current_buffer->yy_is_interactive ) \
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
 		{ \
-		int c = '*', n; \
+		int c = '*'; \
+		size_t n; \
 		for ( n = 0; n < max_size && \
 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
 			buf[n] = (char) c; \
@@ -1571,9 +1680,22 @@ YY_MALLOC_DECL
 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
 		result = n; \
 		} \
-	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
-		  && ferror( yyin ) ) \
-		YY_FATAL_ERROR( "input in flex scanner failed" );
+	else \
+		{ \
+		errno=0; \
+		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
+			{ \
+			if( errno != EINTR) \
+				{ \
+				YY_FATAL_ERROR( "input in flex scanner failed" ); \
+				break; \
+				} \
+			errno=0; \
+			clearerr(yyin); \
+			} \
+		}\
+\
+
 #endif
 
 /* No semi-colon after return; correct usage is to write "yyterminate();" -
@@ -1594,12 +1716,18 @@ YY_MALLOC_DECL
 #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
 #endif
 
+/* end tables serialization structures and prototypes */
+
 /* Default declaration of generated scanner - a define so the user can
  * easily add parameters.
  */
 #ifndef YY_DECL
-#define YY_DECL int yylex YY_PROTO(( void ))
-#endif
+#define YY_DECL_IS_OURS 1
+
+extern int yylex (void);
+
+#define YY_DECL int yylex (void)
+#endif /* !YY_DECL */
 
 /* Code executed at the beginning of each rule, after yytext and yyleng
  * have been set up.
@@ -1615,30 +1743,32 @@ YY_MALLOC_DECL
 
 #define YY_RULE_SETUP \
 	if ( yyleng > 0 ) \
-		yy_current_buffer->yy_at_bol = \
+		YY_CURRENT_BUFFER_LVALUE->yy_at_bol = \
 				(yytext[yyleng - 1] == '\n'); \
 	YY_USER_ACTION
 
+/** The main scanner function which does all the work.
+ */
 YY_DECL
-	{
+{
 	register yy_state_type yy_current_state;
 	register char *yy_cp, *yy_bp;
 	register int yy_act;
-
+    
 #line 127 "toke.l"
 
-#line 1631 "lex.yy.c"
+#line 1761 "lex.yy.c"
 
-	if ( yy_init )
+	if ( !(yy_init) )
 		{
-		yy_init = 0;
+		(yy_init) = 1;
 
 #ifdef YY_USER_INIT
 		YY_USER_INIT;
 #endif
 
-		if ( ! yy_start )
-			yy_start = 1;	/* first start state */
+		if ( ! (yy_start) )
+			(yy_start) = 1;	/* first start state */
 
 		if ( ! yyin )
 			yyin = stdin;
@@ -1646,26 +1776,28 @@ YY_DECL
 		if ( ! yyout )
 			yyout = stdout;
 
-		if ( ! yy_current_buffer )
-			yy_current_buffer =
-				yy_create_buffer( yyin, YY_BUF_SIZE );
+		if ( ! YY_CURRENT_BUFFER ) {
+			yyensure_buffer_stack ();
+			YY_CURRENT_BUFFER_LVALUE =
+				yy_create_buffer(yyin,YY_BUF_SIZE );
+		}
 
-		yy_load_buffer_state();
+		yy_load_buffer_state( );
 		}
 
 	while ( 1 )		/* loops until end-of-file is reached */
 		{
-		yy_cp = yy_c_buf_p;
+		yy_cp = (yy_c_buf_p);
 
 		/* Support of yytext. */
-		*yy_cp = yy_hold_char;
+		*yy_cp = (yy_hold_char);
 
 		/* yy_bp points to the position in yy_ch_buf of the start of
 		 * the current run.
 		 */
 		yy_bp = yy_cp;
 
-		yy_current_state = yy_start;
+		yy_current_state = (yy_start);
 		yy_current_state += YY_AT_BOL();
 yy_match:
 		do
@@ -1673,42 +1805,40 @@ yy_match:
 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
 			if ( yy_accept[yy_current_state] )
 				{
-				yy_last_accepting_state = yy_current_state;
-				yy_last_accepting_cpos = yy_cp;
+				(yy_last_accepting_state) = yy_current_state;
+				(yy_last_accepting_cpos) = yy_cp;
 				}
 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 				{
 				yy_current_state = (int) yy_def[yy_current_state];
-				if ( yy_current_state >= 555 )
+				if ( yy_current_state >= 571 )
 					yy_c = yy_meta[(unsigned int) yy_c];
 				}
 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 			++yy_cp;
 			}
-		while ( yy_base[yy_current_state] != 3541 );
+		while ( yy_base[yy_current_state] != 3539 );
 
 yy_find_action:
 		yy_act = yy_accept[yy_current_state];
 		if ( yy_act == 0 )
 			{ /* have to back up */
-			yy_cp = yy_last_accepting_cpos;
-			yy_current_state = yy_last_accepting_state;
+			yy_cp = (yy_last_accepting_cpos);
+			yy_current_state = (yy_last_accepting_state);
 			yy_act = yy_accept[yy_current_state];
 			}
 
 		YY_DO_BEFORE_ACTION;
 
-
 do_action:	/* This label is used only to access EOF actions. */
 
-
 		switch ( yy_act )
 	{ /* beginning of action switch */
 			case 0: /* must back up */
 			/* undo the effects of YY_DO_BEFORE_ACTION */
-			*yy_cp = yy_hold_char;
-			yy_cp = yy_last_accepting_cpos;
-			yy_current_state = yy_last_accepting_state;
+			*yy_cp = (yy_hold_char);
+			yy_cp = (yy_last_accepting_cpos);
+			yy_current_state = (yy_last_accepting_state);
 			goto yy_find_action;
 
 case 1:
@@ -1783,6 +1913,7 @@ YY_RULE_SETUP
 
 
 case 9:
+/* rule 9 can match eol */
 YY_RULE_SETUP
 #line 175 "toke.l"
 {
@@ -1843,6 +1974,7 @@ YY_RULE_SETUP
 			}
 	YY_BREAK
 case 15:
+/* rule 15 can match eol */
 YY_RULE_SETUP
 #line 217 "toke.l"
 {
@@ -1863,6 +1995,7 @@ YY_RULE_SETUP
 	YY_BREAK
 
 case 17:
+/* rule 17 can match eol */
 YY_RULE_SETUP
 #line 231 "toke.l"
 {
@@ -1879,6 +2012,7 @@ YY_RULE_SETUP
 			}
 	YY_BREAK
 case 18:
+/* rule 18 can match eol */
 YY_RULE_SETUP
 #line 244 "toke.l"
 {
@@ -2006,6 +2140,22 @@ case 27:
 YY_RULE_SETUP
 #line 341 "toke.l"
 {
+			    	LEXTRACE("FOLLOW ");
+			    	return(FOLLOW);
+			}
+	YY_BREAK
+case 28:
+YY_RULE_SETUP
+#line 346 "toke.l"
+{
+			    	LEXTRACE("NOFOLLOW ");
+			    	return(NOFOLLOW);
+			}
+	YY_BREAK
+case 29:
+YY_RULE_SETUP
+#line 351 "toke.l"
+{
 			    /* netgroup */
 			    if (!fill(yytext, yyleng))
 				yyterminate();
@@ -2013,9 +2163,9 @@ YY_RULE_SETUP
 			    return(NETGROUP);
 			}
 	YY_BREAK
-case 28:
+case 30:
 YY_RULE_SETUP
-#line 349 "toke.l"
+#line 359 "toke.l"
 {
 			    /* UN*X group */
 			    if (!fill(yytext, yyleng))
@@ -2024,9 +2174,9 @@ YY_RULE_SETUP
 			    return(USERGROUP);
 			}
 	YY_BREAK
-case 29:
+case 31:
 YY_RULE_SETUP
-#line 357 "toke.l"
+#line 367 "toke.l"
 {
 			    if (!fill(yytext, yyleng))
 				yyterminate();
@@ -2034,9 +2184,9 @@ YY_RULE_SETUP
 			    return(NTWKADDR);
 			}
 	YY_BREAK
-case 30:
+case 32:
 YY_RULE_SETUP
-#line 364 "toke.l"
+#line 374 "toke.l"
 {
 			    if (!fill(yytext, yyleng))
 				yyterminate();
@@ -2044,9 +2194,9 @@ YY_RULE_SETUP
 			    return(NTWKADDR);
 			}
 	YY_BREAK
-case 31:
+case 33:
 YY_RULE_SETUP
-#line 371 "toke.l"
+#line 381 "toke.l"
 {
 			    if (!ipv6_valid(yytext)) {
 				LEXTRACE("ERROR ");
@@ -2058,9 +2208,9 @@ YY_RULE_SETUP
 			    return(NTWKADDR);
 			}
 	YY_BREAK
-case 32:
+case 34:
 YY_RULE_SETUP
-#line 382 "toke.l"
+#line 392 "toke.l"
 {
 			    if (!ipv6_valid(yytext)) {
 				LEXTRACE("ERROR ");
@@ -2072,9 +2222,9 @@ YY_RULE_SETUP
 			    return(NTWKADDR);
 			}
 	YY_BREAK
-case 33:
+case 35:
 YY_RULE_SETUP
-#line 393 "toke.l"
+#line 403 "toke.l"
 {
 			    if (strcmp(yytext, "ALL") == 0) {
 				LEXTRACE("ALL ");
@@ -2097,9 +2247,9 @@ YY_RULE_SETUP
 			    return(ALIAS);
 			}
 	YY_BREAK
-case 34:
+case 36:
 YY_RULE_SETUP
-#line 415 "toke.l"
+#line 425 "toke.l"
 {
 			    /* no command args allowed for Defaults!/path */
 			    if (!fill_cmnd(yytext, yyleng))
@@ -2108,9 +2258,9 @@ YY_RULE_SETUP
 			    return(COMMAND);
 			}
 	YY_BREAK
-case 35:
+case 37:
 YY_RULE_SETUP
-#line 423 "toke.l"
+#line 433 "toke.l"
 {
 			    BEGIN GOTCMND;
 			    LEXTRACE("COMMAND ");
@@ -2118,9 +2268,9 @@ YY_RULE_SETUP
 				yyterminate();
 			}			/* sudo -e */
 	YY_BREAK
-case 36:
+case 38:
 YY_RULE_SETUP
-#line 430 "toke.l"
+#line 440 "toke.l"
 {
 			    /* directories can't have args... */
 			    if (yytext[yyleng - 1] == '/') {
@@ -2136,9 +2286,9 @@ YY_RULE_SETUP
 			    }
 			}			/* a pathname */
 	YY_BREAK
-case 37:
+case 39:
 YY_RULE_SETUP
-#line 445 "toke.l"
+#line 455 "toke.l"
 {
 			    /* a quoted user/group name */
 			    if (!fill(yytext + 1, yyleng - 2))
@@ -2156,9 +2306,9 @@ YY_RULE_SETUP
 			    }
 			}
 	YY_BREAK
-case 38:
+case 40:
 YY_RULE_SETUP
-#line 462 "toke.l"
+#line 472 "toke.l"
 {
 			    /* a word */
 			    if (!fill(yytext, yyleng))
@@ -2167,57 +2317,58 @@ YY_RULE_SETUP
 			    return(WORD);
 			}
 	YY_BREAK
-case 39:
+case 41:
 YY_RULE_SETUP
-#line 470 "toke.l"
+#line 480 "toke.l"
 {
 			    LEXTRACE("( ");
 			    return ('(');
 			}
 	YY_BREAK
-case 40:
+case 42:
 YY_RULE_SETUP
-#line 475 "toke.l"
+#line 485 "toke.l"
 {
 			    LEXTRACE(") ");
 			    return(')');
 			}
 	YY_BREAK
-case 41:
+case 43:
 YY_RULE_SETUP
-#line 480 "toke.l"
+#line 490 "toke.l"
 {
 			    LEXTRACE(", ");
 			    return(',');
 			}			/* return ',' */
 	YY_BREAK
-case 42:
+case 44:
 YY_RULE_SETUP
-#line 485 "toke.l"
+#line 495 "toke.l"
 {
 			    LEXTRACE("= ");
 			    return('=');
 			}			/* return '=' */
 	YY_BREAK
-case 43:
+case 45:
 YY_RULE_SETUP
-#line 490 "toke.l"
+#line 500 "toke.l"
 {
 			    LEXTRACE(": ");
 			    return(':');
 			}			/* return ':' */
 	YY_BREAK
-case 44:
+case 46:
 YY_RULE_SETUP
-#line 495 "toke.l"
+#line 505 "toke.l"
 {
 			    if (yyleng % 2 == 1)
 				return('!');	/* return '!' */
 			}
 	YY_BREAK
-case 45:
+case 47:
+/* rule 47 can match eol */
 YY_RULE_SETUP
-#line 500 "toke.l"
+#line 510 "toke.l"
 {
 			    BEGIN INITIAL;
 			    ++sudolineno;
@@ -2225,25 +2376,27 @@ YY_RULE_SETUP
 			    return(COMMENT);
 			}			/* return newline */
 	YY_BREAK
-case 46:
+case 48:
 YY_RULE_SETUP
-#line 507 "toke.l"
+#line 517 "toke.l"
 {			/* throw away space/tabs */
 			    sawspace = TRUE;	/* but remember for fill_args */
 			}
 	YY_BREAK
-case 47:
+case 49:
+/* rule 49 can match eol */
 YY_RULE_SETUP
-#line 511 "toke.l"
+#line 521 "toke.l"
 {
 			    sawspace = TRUE;	/* remember for fill_args */
 			    ++sudolineno;
 			    LEXTRACE("\n\t");
 			}			/* throw away EOL after \ */
 	YY_BREAK
-case 48:
+case 50:
+/* rule 50 can match eol */
 YY_RULE_SETUP
-#line 517 "toke.l"
+#line 527 "toke.l"
 {
 			    BEGIN INITIAL;
 			    ++sudolineno;
@@ -2251,9 +2404,9 @@ YY_RULE_SETUP
 			    return(COMMENT);
 			}			/* comment, not uid/gid */
 	YY_BREAK
-case 49:
+case 51:
 YY_RULE_SETUP
-#line 524 "toke.l"
+#line 534 "toke.l"
 {
 			    LEXTRACE("ERROR ");
 			    return(ERROR);
@@ -2265,7 +2418,7 @@ case YY_STATE_EOF(GOTCMND):
 case YY_STATE_EOF(STARTDEFS):
 case YY_STATE_EOF(INDEFS):
 case YY_STATE_EOF(INSTR):
-#line 529 "toke.l"
+#line 539 "toke.l"
 {
 			    if (YY_START != INITIAL) {
 			    	BEGIN INITIAL;
@@ -2276,36 +2429,36 @@ case YY_STATE_EOF(INSTR):
 				yyterminate();
 			}
 	YY_BREAK
-case 50:
+case 52:
 YY_RULE_SETUP
-#line 539 "toke.l"
+#line 549 "toke.l"
 ECHO;
 	YY_BREAK
-#line 2285 "lex.yy.c"
+#line 2438 "lex.yy.c"
 
 	case YY_END_OF_BUFFER:
 		{
 		/* Amount of text matched not including the EOB char. */
-		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;
+		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
 
 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
-		*yy_cp = yy_hold_char;
+		*yy_cp = (yy_hold_char);
 		YY_RESTORE_YY_MORE_OFFSET
 
-		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
+		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
 			{
 			/* We're scanning a new file or input source.  It's
 			 * possible that this happened because the user
 			 * just pointed yyin at a new source and called
 			 * yylex().  If so, then we have to assure
-			 * consistency between yy_current_buffer and our
+			 * consistency between YY_CURRENT_BUFFER and our
 			 * globals.  Here is the right place to do so, because
 			 * this is the first action (other than possibly a
 			 * back-up) that will match for the new input source.
 			 */
-			yy_n_chars = yy_current_buffer->yy_n_chars;
-			yy_current_buffer->yy_input_file = yyin;
-			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
 			}
 
 		/* Note that here we test for yy_c_buf_p "<=" to the position
@@ -2315,13 +2468,13 @@ ECHO;
 		 * end-of-buffer state).  Contrast this with the test
 		 * in input().
 		 */
-		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
+		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
 			{ /* This was really a NUL. */
 			yy_state_type yy_next_state;
 
-			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;
+			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
 
-			yy_current_state = yy_get_previous_state();
+			yy_current_state = yy_get_previous_state(  );
 
 			/* Okay, we're now positioned to make the NUL
 			 * transition.  We couldn't have
@@ -2334,30 +2487,30 @@ ECHO;
 
 			yy_next_state = yy_try_NUL_trans( yy_current_state );
 
-			yy_bp = yytext_ptr + YY_MORE_ADJ;
+			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
 
 			if ( yy_next_state )
 				{
 				/* Consume the NUL. */
-				yy_cp = ++yy_c_buf_p;
+				yy_cp = ++(yy_c_buf_p);
 				yy_current_state = yy_next_state;
 				goto yy_match;
 				}
 
 			else
 				{
-				yy_cp = yy_c_buf_p;
+				yy_cp = (yy_c_buf_p);
 				goto yy_find_action;
 				}
 			}
 
-		else switch ( yy_get_next_buffer() )
+		else switch ( yy_get_next_buffer(  ) )
 			{
 			case EOB_ACT_END_OF_FILE:
 				{
-				yy_did_buffer_switch_on_eof = 0;
+				(yy_did_buffer_switch_on_eof) = 0;
 
-				if ( yywrap() )
+				if ( yywrap( ) )
 					{
 					/* Note: because we've taken care in
 					 * yy_get_next_buffer() to have set up
@@ -2368,7 +2521,7 @@ ECHO;
 					 * YY_NULL, it'll still work - another
 					 * YY_NULL will get returned.
 					 */
-					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;
+					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
 
 					yy_act = YY_STATE_EOF(YY_START);
 					goto do_action;
@@ -2376,30 +2529,30 @@ ECHO;
 
 				else
 					{
-					if ( ! yy_did_buffer_switch_on_eof )
+					if ( ! (yy_did_buffer_switch_on_eof) )
 						YY_NEW_FILE;
 					}
 				break;
 				}
 
 			case EOB_ACT_CONTINUE_SCAN:
-				yy_c_buf_p =
-					yytext_ptr + yy_amount_of_matched_text;
+				(yy_c_buf_p) =
+					(yytext_ptr) + yy_amount_of_matched_text;
 
-				yy_current_state = yy_get_previous_state();
+				yy_current_state = yy_get_previous_state(  );
 
-				yy_cp = yy_c_buf_p;
-				yy_bp = yytext_ptr + YY_MORE_ADJ;
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
 				goto yy_match;
 
 			case EOB_ACT_LAST_MATCH:
-				yy_c_buf_p =
-				&yy_current_buffer->yy_ch_buf[yy_n_chars];
+				(yy_c_buf_p) =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
 
-				yy_current_state = yy_get_previous_state();
+				yy_current_state = yy_get_previous_state(  );
 
-				yy_cp = yy_c_buf_p;
-				yy_bp = yytext_ptr + YY_MORE_ADJ;
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
 				goto yy_find_action;
 			}
 		break;
@@ -2410,8 +2563,7 @@ ECHO;
 			"fatal flex scanner internal error--no action found" );
 	} /* end of action switch */
 		} /* end of scanning one token */
-	} /* end of yylex */
-
+} /* end of yylex */
 
 /* yy_get_next_buffer - try to read in a new buffer
  *
@@ -2420,21 +2572,20 @@ ECHO;
  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
  *	EOB_ACT_END_OF_FILE - end of file
  */
-
-static int yy_get_next_buffer()
-	{
-	register char *dest = yy_current_buffer->yy_ch_buf;
-	register char *source = yytext_ptr;
+static int yy_get_next_buffer (void)
+{
+    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
+	register char *source = (yytext_ptr);
 	register int number_to_move, i;
 	int ret_val;
 
-	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
+	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
 		YY_FATAL_ERROR(
 		"fatal flex scanner internal error--end of buffer missed" );
 
-	if ( yy_current_buffer->yy_fill_buffer == 0 )
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
 		{ /* Don't try to fill the buffer, so this is an EOF. */
-		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
+		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
 			{
 			/* We matched a single character, the EOB, so
 			 * treat this as a final EOF.
@@ -2454,34 +2605,30 @@ static int yy_get_next_buffer()
 	/* Try to read more data. */
 
 	/* First move last chars to start of buffer. */
-	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;
+	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
 
 	for ( i = 0; i < number_to_move; ++i )
 		*(dest++) = *(source++);
 
-	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
 		/* don't do the read, it's not guaranteed to return an EOF,
 		 * just force an EOF
 		 */
-		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
 
 	else
 		{
-		int num_to_read =
-			yy_current_buffer->yy_buf_size - number_to_move - 1;
+			int num_to_read =
+			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
 
 		while ( num_to_read <= 0 )
 			{ /* Not enough room in the buffer - grow it. */
-#ifdef YY_USES_REJECT
-			YY_FATAL_ERROR(
-"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
-#else
 
 			/* just a shorter name for the current buffer */
-			YY_BUFFER_STATE b = yy_current_buffer;
+			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;
 
 			int yy_c_buf_p_offset =
-				(int) (yy_c_buf_p - b->yy_ch_buf);
+				(int) ((yy_c_buf_p) - b->yy_ch_buf);
 
 			if ( b->yy_is_our_buffer )
 				{
@@ -2494,8 +2641,7 @@ static int yy_get_next_buffer()
 
 				b->yy_ch_buf = (char *)
 					/* Include room in for 2 EOB chars. */
-					yy_flex_realloc( (void *) b->yy_ch_buf,
-							 b->yy_buf_size + 2 );
+					yyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
 				}
 			else
 				/* Can't grow it, we don't own it. */
@@ -2505,35 +2651,35 @@ static int yy_get_next_buffer()
 				YY_FATAL_ERROR(
 				"fatal error - scanner input buffer overflow" );
 
-			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];
+			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];
 
-			num_to_read = yy_current_buffer->yy_buf_size -
+			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
 						number_to_move - 1;
-#endif
+
 			}
 
 		if ( num_to_read > YY_READ_BUF_SIZE )
 			num_to_read = YY_READ_BUF_SIZE;
 
 		/* Read in more data. */
-		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
-			yy_n_chars, num_to_read );
+		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
+			(yy_n_chars), (size_t) num_to_read );
 
-		yy_current_buffer->yy_n_chars = yy_n_chars;
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
 		}
 
-	if ( yy_n_chars == 0 )
+	if ( (yy_n_chars) == 0 )
 		{
 		if ( number_to_move == YY_MORE_ADJ )
 			{
 			ret_val = EOB_ACT_END_OF_FILE;
-			yyrestart( yyin );
+			yyrestart(yyin  );
 			}
 
 		else
 			{
 			ret_val = EOB_ACT_LAST_MATCH;
-			yy_current_buffer->yy_buffer_status =
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
 				YY_BUFFER_EOF_PENDING;
 			}
 		}
@@ -2541,153 +2687,109 @@ static int yy_get_next_buffer()
 	else
 		ret_val = EOB_ACT_CONTINUE_SCAN;
 
-	yy_n_chars += number_to_move;
-	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
-	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;
+	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
+		/* Extend the array by 50%, plus the number we really need. */
+		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
+		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
+		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
+	}
 
-	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];
+	(yy_n_chars) += number_to_move;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
 
-	return ret_val;
-	}
+	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
 
+	return ret_val;
+}
 
 /* yy_get_previous_state - get the state just before the EOB char was reached */
 
-static yy_state_type yy_get_previous_state()
-	{
+    static yy_state_type yy_get_previous_state (void)
+{
 	register yy_state_type yy_current_state;
 	register char *yy_cp;
-
-	yy_current_state = yy_start;
+    
+	yy_current_state = (yy_start);
 	yy_current_state += YY_AT_BOL();
 
-	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
+	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
 		{
 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
 		if ( yy_accept[yy_current_state] )
 			{
-			yy_last_accepting_state = yy_current_state;
-			yy_last_accepting_cpos = yy_cp;
+			(yy_last_accepting_state) = yy_current_state;
+			(yy_last_accepting_cpos) = yy_cp;
 			}
 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 			{
 			yy_current_state = (int) yy_def[yy_current_state];
-			if ( yy_current_state >= 555 )
+			if ( yy_current_state >= 571 )
 				yy_c = yy_meta[(unsigned int) yy_c];
 			}
 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 		}
 
 	return yy_current_state;
-	}
-
+}
 
 /* yy_try_NUL_trans - try to make a transition on the NUL character
  *
  * synopsis
  *	next_state = yy_try_NUL_trans( current_state );
  */
-
-#ifdef YY_USE_PROTOS
-static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
-#else
-static yy_state_type yy_try_NUL_trans( yy_current_state )
-yy_state_type yy_current_state;
-#endif
-	{
+    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
+{
 	register int yy_is_jam;
-	register char *yy_cp = yy_c_buf_p;
+    	register char *yy_cp = (yy_c_buf_p);
 
 	register YY_CHAR yy_c = 1;
 	if ( yy_accept[yy_current_state] )
 		{
-		yy_last_accepting_state = yy_current_state;
-		yy_last_accepting_cpos = yy_cp;
+		(yy_last_accepting_state) = yy_current_state;
+		(yy_last_accepting_cpos) = yy_cp;
 		}
 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 		{
 		yy_current_state = (int) yy_def[yy_current_state];
-		if ( yy_current_state >= 555 )
+		if ( yy_current_state >= 571 )
 			yy_c = yy_meta[(unsigned int) yy_c];
 		}
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
-	yy_is_jam = (yy_current_state == 554);
+	yy_is_jam = (yy_current_state == 570);
 
 	return yy_is_jam ? 0 : yy_current_state;
-	}
-
-
-#ifndef YY_NO_UNPUT
-#ifdef YY_USE_PROTOS
-static void yyunput( int c, register char *yy_bp )
-#else
-static void yyunput( c, yy_bp )
-int c;
-register char *yy_bp;
-#endif
-	{
-	register char *yy_cp = yy_c_buf_p;
-
-	/* undo effects of setting up yytext */
-	*yy_cp = yy_hold_char;
-
-	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
-		{ /* need to shift things up to make room */
-		/* +2 for EOB chars. */
-		register int number_to_move = yy_n_chars + 2;
-		register char *dest = &yy_current_buffer->yy_ch_buf[
-					yy_current_buffer->yy_buf_size + 2];
-		register char *source =
-				&yy_current_buffer->yy_ch_buf[number_to_move];
-
-		while ( source > yy_current_buffer->yy_ch_buf )
-			*--dest = *--source;
-
-		yy_cp += (int) (dest - source);
-		yy_bp += (int) (dest - source);
-		yy_current_buffer->yy_n_chars =
-			yy_n_chars = yy_current_buffer->yy_buf_size;
-
-		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
-			YY_FATAL_ERROR( "flex scanner push-back overflow" );
-		}
-
-	*--yy_cp = (char) c;
-
-
-	yytext_ptr = yy_bp;
-	yy_hold_char = *yy_cp;
-	yy_c_buf_p = yy_cp;
-	}
-#endif	/* ifndef YY_NO_UNPUT */
-
+}
 
+#ifndef YY_NO_INPUT
 #ifdef __cplusplus
-static int yyinput()
+    static int yyinput (void)
 #else
-static int input()
+    static int input  (void)
 #endif
-	{
-	int c;
 
-	*yy_c_buf_p = yy_hold_char;
+{
+	int c;
+    
+	*(yy_c_buf_p) = (yy_hold_char);
 
-	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
+	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
 		{
 		/* yy_c_buf_p now points to the character we want to return.
 		 * If this occurs *before* the EOB characters, then it's a
 		 * valid NUL; if not, then we've hit the end of the buffer.
 		 */
-		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
+		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
 			/* This was really a NUL. */
-			*yy_c_buf_p = '\0';
+			*(yy_c_buf_p) = '\0';
 
 		else
 			{ /* need more input */
-			int offset = yy_c_buf_p - yytext_ptr;
-			++yy_c_buf_p;
+			int offset = (yy_c_buf_p) - (yytext_ptr);
+			++(yy_c_buf_p);
 
-			switch ( yy_get_next_buffer() )
+			switch ( yy_get_next_buffer(  ) )
 				{
 				case EOB_ACT_LAST_MATCH:
 					/* This happens because yy_g_n_b()
@@ -2701,16 +2803,16 @@ static int input()
 					 */
 
 					/* Reset buffer status. */
-					yyrestart( yyin );
+					yyrestart(yyin );
 
-					/* fall through */
+					/*FALLTHROUGH*/
 
 				case EOB_ACT_END_OF_FILE:
 					{
-					if ( yywrap() )
+					if ( yywrap( ) )
 						return EOF;
 
-					if ( ! yy_did_buffer_switch_on_eof )
+					if ( ! (yy_did_buffer_switch_on_eof) )
 						YY_NEW_FILE;
 #ifdef __cplusplus
 					return yyinput();
@@ -2720,91 +2822,94 @@ static int input()
 					}
 
 				case EOB_ACT_CONTINUE_SCAN:
-					yy_c_buf_p = yytext_ptr + offset;
+					(yy_c_buf_p) = (yytext_ptr) + offset;
 					break;
 				}
 			}
 		}
 
-	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
-	*yy_c_buf_p = '\0';	/* preserve yytext */
-	yy_hold_char = *++yy_c_buf_p;
+	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
+	*(yy_c_buf_p) = '\0';	/* preserve yytext */
+	(yy_hold_char) = *++(yy_c_buf_p);
 
-	yy_current_buffer->yy_at_bol = (c == '\n');
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = (c == '\n');
 
 	return c;
-	}
-
-
-#ifdef YY_USE_PROTOS
-void yyrestart( FILE *input_file )
-#else
-void yyrestart( input_file )
-FILE *input_file;
-#endif
-	{
-	if ( ! yy_current_buffer )
-		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );
+}
+#endif	/* ifndef YY_NO_INPUT */
 
-	yy_init_buffer( yy_current_buffer, input_file );
-	yy_load_buffer_state();
+/** Immediately switch to a different input stream.
+ * @param input_file A readable stream.
+ * 
+ * @note This function does not reset the start condition to @c INITIAL .
+ */
+    void yyrestart  (FILE * input_file )
+{
+    
+	if ( ! YY_CURRENT_BUFFER ){
+        yyensure_buffer_stack ();
+		YY_CURRENT_BUFFER_LVALUE =
+            yy_create_buffer(yyin,YY_BUF_SIZE );
 	}
 
+	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
+	yy_load_buffer_state( );
+}
 
-#ifdef YY_USE_PROTOS
-void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
-#else
-void yy_switch_to_buffer( new_buffer )
-YY_BUFFER_STATE new_buffer;
-#endif
-	{
-	if ( yy_current_buffer == new_buffer )
+/** Switch to a different input buffer.
+ * @param new_buffer The new input buffer.
+ * 
+ */
+    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
+{
+    
+	/* TODO. We should be able to replace this entire function body
+	 * with
+	 *		yypop_buffer_state();
+	 *		yypush_buffer_state(new_buffer);
+     */
+	yyensure_buffer_stack ();
+	if ( YY_CURRENT_BUFFER == new_buffer )
 		return;
 
-	if ( yy_current_buffer )
+	if ( YY_CURRENT_BUFFER )
 		{
 		/* Flush out information for old buffer. */
-		*yy_c_buf_p = yy_hold_char;
-		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
-		yy_current_buffer->yy_n_chars = yy_n_chars;
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
 		}
 
-	yy_current_buffer = new_buffer;
-	yy_load_buffer_state();
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+	yy_load_buffer_state( );
 
 	/* We don't actually know whether we did this switch during
 	 * EOF (yywrap()) processing, but the only time this flag
 	 * is looked at is after yywrap() is called, so it's safe
 	 * to go ahead and always set it.
 	 */
-	yy_did_buffer_switch_on_eof = 1;
-	}
-
-
-#ifdef YY_USE_PROTOS
-void yy_load_buffer_state( void )
-#else
-void yy_load_buffer_state()
-#endif
-	{
-	yy_n_chars = yy_current_buffer->yy_n_chars;
-	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
-	yyin = yy_current_buffer->yy_input_file;
-	yy_hold_char = *yy_c_buf_p;
-	}
+	(yy_did_buffer_switch_on_eof) = 1;
+}
 
+static void yy_load_buffer_state  (void)
+{
+    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
+	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
+	(yy_hold_char) = *(yy_c_buf_p);
+}
 
-#ifdef YY_USE_PROTOS
-YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
-#else
-YY_BUFFER_STATE yy_create_buffer( file, size )
-FILE *file;
-int size;
-#endif
-	{
+/** Allocate and initialize an input buffer state.
+ * @param file A readable stream.
+ * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
+ * 
+ * @return the allocated buffer state.
+ */
+    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
+{
 	YY_BUFFER_STATE b;
-
-	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
+    
+	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
 	if ( ! b )
 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
 
@@ -2813,83 +2918,75 @@ int size;
 	/* yy_ch_buf has to be 2 characters longer than the size given because
 	 * we need to put in 2 end-of-buffer characters.
 	 */
-	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
+	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
 	if ( ! b->yy_ch_buf )
 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
 
 	b->yy_is_our_buffer = 1;
 
-	yy_init_buffer( b, file );
+	yy_init_buffer(b,file );
 
 	return b;
-	}
-
+}
 
-#ifdef YY_USE_PROTOS
-void yy_delete_buffer( YY_BUFFER_STATE b )
-#else
-void yy_delete_buffer( b )
-YY_BUFFER_STATE b;
-#endif
-	{
+/** Destroy the buffer.
+ * @param b a buffer created with yy_create_buffer()
+ * 
+ */
+    void yy_delete_buffer (YY_BUFFER_STATE  b )
+{
+    
 	if ( ! b )
 		return;
 
-	if ( b == yy_current_buffer )
-		yy_current_buffer = (YY_BUFFER_STATE) 0;
+	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
+		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
 
 	if ( b->yy_is_our_buffer )
-		yy_flex_free( (void *) b->yy_ch_buf );
-
-	yy_flex_free( (void *) b );
-	}
-
-
-#ifndef YY_ALWAYS_INTERACTIVE
-#ifndef YY_NEVER_INTERACTIVE
-#include <unistd.h>
-#endif
-#endif
+		yyfree((void *) b->yy_ch_buf  );
 
-#ifdef YY_USE_PROTOS
-void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
-#else
-void yy_init_buffer( b, file )
-YY_BUFFER_STATE b;
-FILE *file;
-#endif
+	yyfree((void *) b  );
+}
 
+#ifndef __cplusplus
+extern int isatty (int );
+#endif /* __cplusplus */
+    
+/* Initializes or reinitializes a buffer.
+ * This function is sometimes called more than once on the same buffer,
+ * such as during a yyrestart() or at EOF.
+ */
+    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
 
-	{
+{
 	int oerrno = errno;
-
-	yy_flush_buffer( b );
+    
+	yy_flush_buffer(b );
 
 	b->yy_input_file = file;
 	b->yy_fill_buffer = 1;
 
-#if defined(YY_ALWAYS_INTERACTIVE) && YY_ALWAYS_INTERACTIVE
-	b->yy_is_interactive = 1;
-#else
-#if defined(YY_NEVER_INTERACTIVE) && YY_NEVER_INTERACTIVE
-	b->yy_is_interactive = 0;
-#else
-	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
-#endif
-#endif
-	errno = oerrno;
-	}
-
+    /* If b is the current buffer, then yy_init_buffer was _probably_
+     * called from yyrestart() or through yy_get_next_buffer.
+     * In that case, we don't want to reset the lineno or column.
+     */
+    if (b != YY_CURRENT_BUFFER){
+        b->yy_bs_lineno = 1;
+        b->yy_bs_column = 0;
+    }
 
-#ifdef YY_USE_PROTOS
-void yy_flush_buffer( YY_BUFFER_STATE b )
-#else
-void yy_flush_buffer( b )
-YY_BUFFER_STATE b;
-#endif
+        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
+    
+	errno = oerrno;
+}
 
-	{
-	if ( ! b )
+/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
+ * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
+ * 
+ */
+    void yy_flush_buffer (YY_BUFFER_STATE  b )
+{
+    	if ( ! b )
 		return;
 
 	b->yy_n_chars = 0;
@@ -2906,29 +3003,125 @@ YY_BUFFER_STATE b;
 	b->yy_at_bol = 1;
 	b->yy_buffer_status = YY_BUFFER_NEW;
 
-	if ( b == yy_current_buffer )
-		yy_load_buffer_state();
+	if ( b == YY_CURRENT_BUFFER )
+		yy_load_buffer_state( );
+}
+
+/** Pushes the new state onto the stack. The new state becomes
+ *  the current state. This function will allocate the stack
+ *  if necessary.
+ *  @param new_buffer The new state.
+ *  
+ */
+void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
+{
+    	if (new_buffer == NULL)
+		return;
+
+	yyensure_buffer_stack();
+
+	/* This block is copied from yy_switch_to_buffer. */
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	/* Only push if top exists. Otherwise, replace top. */
+	if (YY_CURRENT_BUFFER)
+		(yy_buffer_stack_top)++;
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+
+	/* copied from yy_switch_to_buffer. */
+	yy_load_buffer_state( );
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+/** Removes and deletes the top of the stack, if present.
+ *  The next element becomes the new top.
+ *  
+ */
+void yypop_buffer_state (void)
+{
+    	if (!YY_CURRENT_BUFFER)
+		return;
+
+	yy_delete_buffer(YY_CURRENT_BUFFER );
+	YY_CURRENT_BUFFER_LVALUE = NULL;
+	if ((yy_buffer_stack_top) > 0)
+		--(yy_buffer_stack_top);
+
+	if (YY_CURRENT_BUFFER) {
+		yy_load_buffer_state( );
+		(yy_did_buffer_switch_on_eof) = 1;
+	}
+}
+
+/* Allocates the stack if it does not exist.
+ *  Guarantees space for at least one push.
+ */
+static void yyensure_buffer_stack (void)
+{
+	int num_to_alloc;
+    
+	if (!(yy_buffer_stack)) {
+
+		/* First allocation is just for 2 elements, since we don't know if this
+		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
+		 * immediate realloc on the next call.
+         */
+		num_to_alloc = 1;
+		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
+								(num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
+								  
+		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
+				
+		(yy_buffer_stack_max) = num_to_alloc;
+		(yy_buffer_stack_top) = 0;
+		return;
 	}
 
+	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
 
-#ifndef YY_NO_SCAN_BUFFER
-#ifdef YY_USE_PROTOS
-YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
-#else
-YY_BUFFER_STATE yy_scan_buffer( base, size )
-char *base;
-yy_size_t size;
-#endif
-	{
-	YY_BUFFER_STATE b;
+		/* Increase the buffer to prepare for a possible push. */
+		int grow_size = 8 /* arbitrary grow size */;
+
+		num_to_alloc = (yy_buffer_stack_max) + grow_size;
+		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
+								((yy_buffer_stack),
+								num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
+
+		/* zero only the new slots.*/
+		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
+		(yy_buffer_stack_max) = num_to_alloc;
+	}
+}
 
+/** Setup the input buffer state to scan directly from a user-specified character buffer.
+ * @param base the character buffer
+ * @param size the size in bytes of the character buffer
+ * 
+ * @return the newly allocated buffer state object. 
+ */
+YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
+{
+	YY_BUFFER_STATE b;
+    
 	if ( size < 2 ||
 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
 		/* They forgot to leave room for the EOB's. */
 		return 0;
 
-	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
+	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
 	if ( ! b )
 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
 
@@ -2942,56 +3135,51 @@ yy_size_t size;
 	b->yy_fill_buffer = 0;
 	b->yy_buffer_status = YY_BUFFER_NEW;
 
-	yy_switch_to_buffer( b );
+	yy_switch_to_buffer(b  );
 
 	return b;
-	}
-#endif
-
-
-#ifndef YY_NO_SCAN_STRING
-#ifdef YY_USE_PROTOS
-YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
-#else
-YY_BUFFER_STATE yy_scan_string( yy_str )
-yyconst char *yy_str;
-#endif
-	{
-	int len;
-	for ( len = 0; yy_str[len]; ++len )
-		;
-
-	return yy_scan_bytes( yy_str, len );
-	}
-#endif
+}
 
+/** Setup the input buffer state to scan a string. The next call to yylex() will
+ * scan from a @e copy of @a str.
+ * @param yystr a NUL-terminated string to scan
+ * 
+ * @return the newly allocated buffer state object.
+ * @note If you want to scan bytes that may contain NUL values, then use
+ *       yy_scan_bytes() instead.
+ */
+YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
+{
+    
+	return yy_scan_bytes(yystr,strlen(yystr) );
+}
 
-#ifndef YY_NO_SCAN_BYTES
-#ifdef YY_USE_PROTOS
-YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
-#else
-YY_BUFFER_STATE yy_scan_bytes( bytes, len )
-yyconst char *bytes;
-int len;
-#endif
-	{
+/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
+ * scan from a @e copy of @a bytes.
+ * @param yybytes the byte buffer to scan
+ * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
+ * 
+ * @return the newly allocated buffer state object.
+ */
+YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
+{
 	YY_BUFFER_STATE b;
 	char *buf;
 	yy_size_t n;
 	int i;
-
+    
 	/* Get memory for full buffer, including space for trailing EOB's. */
-	n = len + 2;
-	buf = (char *) yy_flex_alloc( n );
+	n = _yybytes_len + 2;
+	buf = (char *) yyalloc(n  );
 	if ( ! buf )
 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
 
-	for ( i = 0; i < len; ++i )
-		buf[i] = bytes[i];
+	for ( i = 0; i < _yybytes_len; ++i )
+		buf[i] = yybytes[i];
 
-	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;
+	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
 
-	b = yy_scan_buffer( buf, n );
+	b = yy_scan_buffer(buf,n );
 	if ( ! b )
 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
 
@@ -3001,148 +3189,196 @@ int len;
 	b->yy_is_our_buffer = 1;
 
 	return b;
-	}
-#endif
-
+}
 
-#ifndef YY_NO_PUSH_STATE
-#ifdef YY_USE_PROTOS
-static void yy_push_state( int new_state )
-#else
-static void yy_push_state( new_state )
-int new_state;
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
 #endif
-	{
-	if ( yy_start_stack_ptr >= yy_start_stack_depth )
-		{
-		yy_size_t new_size;
 
-		yy_start_stack_depth += YY_START_STACK_INCR;
-		new_size = yy_start_stack_depth * sizeof( int );
+static void yy_fatal_error (yyconst char* msg )
+{
+    	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+}
 
-		if ( ! yy_start_stack )
-			yy_start_stack = (int *) yy_flex_alloc( new_size );
+/* Redefine yyless() so it works in section 3 code. */
 
-		else
-			yy_start_stack = (int *) yy_flex_realloc(
-					(void *) yy_start_stack, new_size );
+#undef yyless
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up yytext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		yytext[yyleng] = (yy_hold_char); \
+		(yy_c_buf_p) = yytext + yyless_macro_arg; \
+		(yy_hold_char) = *(yy_c_buf_p); \
+		*(yy_c_buf_p) = '\0'; \
+		yyleng = yyless_macro_arg; \
+		} \
+	while ( 0 )
 
-		if ( ! yy_start_stack )
-			YY_FATAL_ERROR(
-			"out of memory expanding start-condition stack" );
-		}
+/* Accessor  methods (get/set functions) to struct members. */
 
-	yy_start_stack[yy_start_stack_ptr++] = YY_START;
+/** Get the current line number.
+ * 
+ */
+int yyget_lineno  (void)
+{
+        
+    return yylineno;
+}
 
-	BEGIN(new_state);
-	}
-#endif
+/** Get the input stream.
+ * 
+ */
+FILE *yyget_in  (void)
+{
+        return yyin;
+}
 
+/** Get the output stream.
+ * 
+ */
+FILE *yyget_out  (void)
+{
+        return yyout;
+}
 
-#ifndef YY_NO_POP_STATE
-static void yy_pop_state()
-	{
-	if ( --yy_start_stack_ptr < 0 )
-		YY_FATAL_ERROR( "start-condition stack underflow" );
+/** Get the length of the current token.
+ * 
+ */
+int yyget_leng  (void)
+{
+        return yyleng;
+}
 
-	BEGIN(yy_start_stack[yy_start_stack_ptr]);
-	}
-#endif
+/** Get the current token.
+ * 
+ */
 
+char *yyget_text  (void)
+{
+        return yytext;
+}
 
-#ifndef YY_NO_TOP_STATE
-static int yy_top_state()
-	{
-	return yy_start_stack[yy_start_stack_ptr - 1];
-	}
-#endif
+/** Set the current line number.
+ * @param line_number
+ * 
+ */
+void yyset_lineno (int  line_number )
+{
+    
+    yylineno = line_number;
+}
 
-#ifndef YY_EXIT_FAILURE
-#define YY_EXIT_FAILURE 2
-#endif
+/** Set the input stream. This does not discard the current
+ * input buffer.
+ * @param in_str A readable stream.
+ * 
+ * @see yy_switch_to_buffer
+ */
+void yyset_in (FILE *  in_str )
+{
+        yyin = in_str ;
+}
 
-#ifdef YY_USE_PROTOS
-static void yy_fatal_error( yyconst char msg[] )
-#else
-static void yy_fatal_error( msg )
-char msg[];
-#endif
-	{
-	(void) fprintf( stderr, "%s\n", msg );
-	exit( YY_EXIT_FAILURE );
-	}
+void yyset_out (FILE *  out_str )
+{
+        yyout = out_str ;
+}
 
+int yyget_debug  (void)
+{
+        return yy_flex_debug;
+}
 
+void yyset_debug (int  bdebug )
+{
+        yy_flex_debug = bdebug ;
+}
 
-/* Redefine yyless() so it works in section 3 code. */
+static int yy_init_globals (void)
+{
+        /* Initialization is the same as for the non-reentrant scanner.
+     * This function is called from yylex_destroy(), so don't allocate here.
+     */
+
+    (yy_buffer_stack) = 0;
+    (yy_buffer_stack_top) = 0;
+    (yy_buffer_stack_max) = 0;
+    (yy_c_buf_p) = (char *) 0;
+    (yy_init) = 0;
+    (yy_start) = 0;
+
+/* Defined in main.c */
+#ifdef YY_STDINIT
+    yyin = stdin;
+    yyout = stdout;
+#else
+    yyin = (FILE *) 0;
+    yyout = (FILE *) 0;
+#endif
+
+    /* For future reference: Set errno on error, since we are called by
+     * yylex_init()
+     */
+    return 0;
+}
 
-#undef yyless
-#define yyless(n) \
-	do \
-		{ \
-		/* Undo effects of setting up yytext. */ \
-		yytext[yyleng] = yy_hold_char; \
-		yy_c_buf_p = yytext + n; \
-		yy_hold_char = *yy_c_buf_p; \
-		*yy_c_buf_p = '\0'; \
-		yyleng = n; \
-		} \
-	while ( 0 )
+/* yylex_destroy is for both reentrant and non-reentrant scanners. */
+int yylex_destroy  (void)
+{
+    
+    /* Pop the buffer stack, destroying each element. */
+	while(YY_CURRENT_BUFFER){
+		yy_delete_buffer(YY_CURRENT_BUFFER  );
+		YY_CURRENT_BUFFER_LVALUE = NULL;
+		yypop_buffer_state();
+	}
+
+	/* Destroy the stack itself. */
+	yyfree((yy_buffer_stack) );
+	(yy_buffer_stack) = NULL;
+
+    /* Reset the globals. This is important in a non-reentrant scanner so the next time
+     * yylex() is called, initialization will occur. */
+    yy_init_globals( );
 
+    return 0;
+}
 
-/* Internal utility routines. */
+/*
+ * Internal utility routines.
+ */
 
 #ifndef yytext_ptr
-#ifdef YY_USE_PROTOS
-static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
-#else
-static void yy_flex_strncpy( s1, s2, n )
-char *s1;
-yyconst char *s2;
-int n;
-#endif
-	{
+static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
+{
 	register int i;
 	for ( i = 0; i < n; ++i )
 		s1[i] = s2[i];
-	}
+}
 #endif
 
 #ifdef YY_NEED_STRLEN
-#ifdef YY_USE_PROTOS
-static int yy_flex_strlen( yyconst char *s )
-#else
-static int yy_flex_strlen( s )
-yyconst char *s;
-#endif
-	{
+static int yy_flex_strlen (yyconst char * s )
+{
 	register int n;
 	for ( n = 0; s[n]; ++n )
 		;
 
 	return n;
-	}
+}
 #endif
 
-
-#ifdef YY_USE_PROTOS
-static void *yy_flex_alloc( yy_size_t size )
-#else
-static void *yy_flex_alloc( size )
-yy_size_t size;
-#endif
-	{
+void *yyalloc (yy_size_t  size )
+{
 	return (void *) malloc( size );
-	}
+}
 
-#ifdef YY_USE_PROTOS
-static void *yy_flex_realloc( void *ptr, yy_size_t size )
-#else
-static void *yy_flex_realloc( ptr, size )
-void *ptr;
-yy_size_t size;
-#endif
-	{
+void *yyrealloc  (void * ptr, yy_size_t  size )
+{
 	/* The cast to (char *) in the following accommodates both
 	 * implementations that use char* generic pointers, and those
 	 * that use void* generic pointers.  It works with the latter
@@ -3151,26 +3387,17 @@ yy_size_t size;
 	 * as though doing an assignment.
 	 */
 	return (void *) realloc( (char *) ptr, size );
-	}
+}
 
-#ifdef YY_USE_PROTOS
-static void yy_flex_free( void *ptr )
-#else
-static void yy_flex_free( ptr )
-void *ptr;
-#endif
-	{
-	free( ptr );
-	}
+void yyfree (void * ptr )
+{
+	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
+}
+
+#define YYTABLES_NAME "yytables"
+
+#line 549 "toke.l"
 
-#if defined(YY_MAIN) && YY_MAIN
-int main()
-	{
-	yylex();
-	return 0;
-	}
-#endif
-#line 539 "toke.l"
 
 static unsigned char
 hexchar(s)
@@ -3535,7 +3762,7 @@ _push_include(path, isdir)
     idepth++;
     sudolineno = 1;
     sudoers = path;
-    yy_switch_to_buffer(yy_create_buffer(fp, YY_BUF_SIZE));
+    yy_switch_to_buffer(yy_create_buffer(fp,YY_BUF_SIZE));
 
     return(TRUE);
 }
@@ -3560,7 +3787,7 @@ pop_include()
 	    efree(sudoers);
 	    sudoers = pl->path;
 	    sudolineno = 1;
-	    yy_switch_to_buffer(yy_create_buffer(fp, YY_BUF_SIZE));
+	    yy_switch_to_buffer(yy_create_buffer(fp,YY_BUF_SIZE));
 	    efree(pl);
 	    break;
 	}
@@ -3656,3 +3883,4 @@ ipv6_valid(s)
 
     return (nmatch <= 1);
 }
+
--- a/sudo.cat
+++ b/sudo.cat
@@ -1,9 +1,7 @@
+SUDO(1m)                     MAINTENANCE COMMANDS                     SUDO(1m)
 
 
 
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
 NNAAMMEE
        sudo, sudoedit - execute a command as another user
 
@@ -58,18 +56,6 @@ DDEESSCCRRIIPPTTIIOONN
        be used by a user to log commands through sudo even when a root shell
        has been invoked.  It also allows the --ee option to remain useful even
        when being run via a sudo-run script or program.  Note however, that
-
-
-
-1.7.4                     July 19, 2010                         1
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
        the sudoers lookup is still done for root, not the user specified by
        SUDO_USER.
 
@@ -124,18 +110,6 @@ OOPPTTIIOONNSS
                    with BSD login classes.
 
        -E          The --EE (_p_r_e_s_e_r_v_e _e_n_v_i_r_o_n_m_e_n_t) option will override the
-
-
-
-1.7.4                     July 19, 2010                         2
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
                    _e_n_v___r_e_s_e_t option in _s_u_d_o_e_r_s(4)).  It is only available when
                    either the matching command has the SETENV tag or the
                    _s_e_t_e_n_v option is set in _s_u_d_o_e_r_s(4).
@@ -159,6 +133,13 @@ SUDO(1m)               MAINTENANCE COMMA
                        copied back to their original location and the
                        temporary versions are removed.
 
+                   Unless explicitly allowed by the security policy, symbolic
+                   links will not be opened.  This helps prevent the editing
+                   of unauthorized files when the file is located in a user-
+                   writable directory.  Versions of ssuuddoo prior to
+                   1.7.4p4-2.squeeze.6 do not have this restriction.  Users
+                   are never allowed to edit device special files.
+
                    If the specified file does not exist, it will be created.
                    Note that unlike most commands run by ssuuddoo, the editor is
                    run with the invoking user's environment unmodified.  If,
@@ -190,18 +171,6 @@ SUDO(1m)               MAINTENANCE COMMA
 
        -i [command]
                    The --ii (_s_i_m_u_l_a_t_e _i_n_i_t_i_a_l _l_o_g_i_n) option runs the shell
-
-
-
-1.7.4                     July 19, 2010                         3
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
                    specified in the _p_a_s_s_w_d(4) entry of the target user as a
                    login shell.  This means that login-specific resource files
                    such as .profile or .login will be read by the shell.  If a
@@ -256,18 +225,6 @@ SUDO(1m)               MAINTENANCE COMMA
 
        -P          The --PP (_p_r_e_s_e_r_v_e _g_r_o_u_p _v_e_c_t_o_r) option causes ssuuddoo to
                    preserve the invoking user's group vector unaltered.  By
-
-
-
-1.7.4                     July 19, 2010                         4
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
                    default, ssuuddoo will initialize the group vector to the list
                    of groups the target user is in.  The real and effective
                    group IDs, however, are still set to match the target user.
@@ -322,18 +279,6 @@ SUDO(1m)               MAINTENANCE COMMA
                    listed.  Only root or a user with ssuuddoo ALL on the current
                    host may use this option.
 
-
-
-
-1.7.4                     July 19, 2010                         5
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
        -u _u_s_e_r     The --uu (_u_s_e_r) option causes ssuuddoo to run the specified
                    command as a user other than _r_o_o_t.  To specify a _u_i_d
                    instead of a _u_s_e_r _n_a_m_e, use _#_u_i_d.  When running commands as
@@ -388,18 +333,6 @@ SSEECCUURRIITTYY NNOOTTEESS
        default, the _e_n_v___r_e_s_e_t _s_u_d_o_e_r_s option is enabled.  This causes commands
        to be executed with a minimal environment containing TERM, PATH, HOME,
        SHELL, LOGNAME, USER and USERNAME in addition to variables from the
-
-
-
-1.7.4                     July 19, 2010                         6
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
        invoking process permitted by the _e_n_v___c_h_e_c_k and _e_n_v___k_e_e_p _s_u_d_o_e_r_s
        options.  There is effectively a whitelist for environment variables.
 
@@ -425,9 +358,9 @@ SUDO(1m)               MAINTENANCE COMMA
 
        To prevent command spoofing, ssuuddoo checks "." and "" (both denoting
        current directory) last when searching for a command in the user's PATH
-       (if one or both are in the PATH).  Note, however, that the actual PATH
-       environment variable is _n_o_t modified and is passed unchanged to the
-       program that ssuuddoo executes.
+       (if one or both are in the PATH).  Note, however, that the PATH
+       environment variable is further modified in Debian because of the use
+       of the _S_E_C_U_R_E___P_A_T_H build option.
 
        ssuuddoo will check the ownership of its time stamp directory
        (_/_v_a_r_/_a_d_m_/_s_u_d_o by default) and ignore the directory's contents if it is
@@ -455,17 +388,6 @@ SUDO(1m)               MAINTENANCE COMMA
        On systems where the boot time is available, ssuuddoo will also not honor
        time stamps from before the machine booted.
 
-
-
-1.7.4                     July 19, 2010                         7
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
        Since time stamp files live in the file system, they can outlive a
        user's login session.  As a result, a user may be able to login, run a
        command with ssuuddoo after authenticating, logout, login again, and run
@@ -520,18 +442,6 @@ EENNVVIIRROONNMMEENNTT
 
        SUDO_GID        Set to the group ID of the user who invoked sudo
 
-
-
-
-1.7.4                     July 19, 2010                         8
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
        SUDO_PROMPT     Used as the default password prompt
 
        SUDO_PS1        If set, PS1 will be set to its value for the program
@@ -587,17 +497,6 @@ EEXXAAMMPPLLEESS
        Note that this runs the commands in a sub-shell to make the cd and file
        redirection work.
 
-
-
-1.7.4                     July 19, 2010                         9
-
-
-
-
-
-SUDO(1m)               MAINTENANCE COMMANDS              SUDO(1m)
-
-
         $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"
 
 SSEEEE AALLSSOO
@@ -654,7 +553,4 @@ DDIISSCCLLAAIIMMEERR
 
 
 
-
-1.7.4                     July 19, 2010                        10
-
-
+1.7.4p4                        January  5, 2016                       SUDO(1m)
--- a/sudo.man.in
+++ b/sudo.man.in
@@ -149,7 +149,7 @@
 .\" ========================================================================
 .\"
 .IX Title "SUDO @mansectsu@"
-.TH SUDO @mansectsu@ "July 19, 2010" "1.7.4" "MAINTENANCE COMMANDS"
+.TH SUDO @mansectsu@ "January  5, 2016" "1.7.4p4" "MAINTENANCE COMMANDS"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
@@ -310,6 +310,14 @@ their original location and the temporar
 .RE
 .RS 12
 .Sp
+Unless explicitly allowed by the security policy, symbolic links
+will not be opened.
+This helps prevent the editing of unauthorized files when the file
+is located in a user-writable directory.
+Versions of \fBsudo\fR prior to 1.7.4p4\-2.squeeze.6 do not have this
+restriction.
+Users are never allowed to edit device special files.
+.Sp
 If the specified file does not exist, it will be created.  Note
 that unlike most commands run by \fBsudo\fR, the editor is run with
 the invoking user's environment unmodified.  If, for some reason,
--- a/sudoers.cat
+++ b/sudoers.cat
@@ -1,9 +1,7 @@
+SUDOERS(4)                   MAINTENANCE COMMANDS                   SUDOERS(4)
 
 
 
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
 NNAAMMEE
        sudoers - list of which users may execute what
 
@@ -59,18 +57,6 @@ DDEESSCCRRIIPPTTIIOONN
 
         Host_Alias ::= NAME '=' Host_List
 
-
-
-1.7.4                     July 21, 2010                         1
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
-
         Cmnd_Alias ::= NAME '=' Cmnd_List
 
         NAME ::= [A-Z]([A-Z][0-9]_)*
@@ -125,18 +111,6 @@ SUDOERS(4)             MAINTENANCE COMMA
         Runas_List ::= Runas_Member |
                        Runas_Member ',' Runas_List
 
-
-
-1.7.4                     July 21, 2010                         2
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
-
         Runas_Member ::= '!'* user name |
                          '!'* '#'uid |
                          '!'* '%'group |
@@ -190,18 +164,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
        A Cmnd_List is a list of one or more commandnames, directories, and
        other aliases.  A commandname is a fully qualified file name which may
-
-
-
-1.7.4                     July 21, 2010                         3
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        include shell-style wildcards (see the Wildcards section below).  A
        simple file name allows the user to run the command with any arguments
        he/she wishes.  However, you may also specify command line arguments
@@ -256,18 +218,6 @@ SUDOERS(4)             MAINTENANCE COMMA
        is not an error to use the -= operator to remove an element that does
        not exist in a list.
 
-
-
-
-1.7.4                     July 21, 2010                         4
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        Defaults entries are parsed in the following order: generic, host and
        user Defaults first, then runas Defaults and finally command defaults.
 
@@ -287,8 +237,8 @@ SUDOERS(4)             MAINTENANCE COMMA
         SELinux_Spec ::= ('ROLE=role' | 'TYPE=type')
 
         Tag_Spec ::= ('NOPASSWD:' | 'PASSWD:' | 'NOEXEC:' | 'EXEC:' |
-                      'SETENV:' | 'NOSETENV:' | 'LOG_INPUT:' | 'NOLOG_INPUT:' |
-                      'LOG_OUTPUT:' | 'NOLOG_OUTPUT:')
+                     'SETENV:' | 'NOSETENV:' | 'FOLLOW:' | 'NOFOLLOW' |
+                     'LOG_INPUT:' | 'NOLOG_INPUT:' | 'LOG_OUTPUT:' | 'NOLOG_OUTPUT:')
 
        A uusseerr ssppeecciiffiiccaattiioonn determines which commands a user may run (and as
        what user) on specified hosts.  By default, commands are run as rroooott,
@@ -322,18 +272,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
         $ sudo -u operator /bin/ls.
 
-
-
-
-1.7.4                     July 21, 2010                         5
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        It is also possible to override a Runas_Spec later on in an entry.  If
        we modify the entry like so:
 
@@ -365,10 +303,10 @@ SUDOERS(4)             MAINTENANCE COMMA
    TTaagg__SSppeecc
        A command may have zero or more tags associated with it.  There are
        eight possible tag values, NOPASSWD, PASSWD, NOEXEC, EXEC, SETENV,
-       NOSETENV, LOG_INPUT, NOLOG_INPUT, LOG_OUTPUT and NOLOG_OUTPUT.  Once a
-       tag is set on a Cmnd, subsequent Cmnds in the Cmnd_Spec_List, inherit
-       the tag unless it is overridden by the opposite tag (i.e.: PASSWD
-       overrides NOPASSWD and NOEXEC overrides EXEC).
+       NOSETENV, FOLLOW, NOFOLLOW, LOG_INPUT, NOLOG_INPUT, LOG_OUTPUT and
+       NOLOG_OUTPUT.  Once a tag is set on a Cmnd, subsequent Cmnds in the
+       Cmnd_Spec_List, inherit the tag unless it is overridden by the opposite
+       tag (i.e.: PASSWD overrides NOPASSWD and NOEXEC overrides EXEC).
 
        _N_O_P_A_S_S_W_D _a_n_d _P_A_S_S_W_D
 
@@ -388,18 +326,6 @@ SUDOERS(4)             MAINTENANCE COMMA
         ray    rushmore = NOPASSWD: /bin/kill, PASSWD: /bin/ls, /usr/bin/lprm
 
        Note, however, that the PASSWD tag has no effect on users who are in
-
-
-
-1.7.4                     July 21, 2010                         6
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        the group specified by the _e_x_e_m_p_t___g_r_o_u_p option.
 
        By default, if the NOPASSWD tag is applied to any of the entries for a
@@ -433,6 +359,15 @@ SUDOERS(4)             MAINTENANCE COMMA
        If the command matched is AALLLL, the SETENV tag is implied for that
        command; this default may be overridden by use of the NOSETENV tag.
 
+       _F_O_L_L_O_W _a_n_d _N_O_F_O_L_L_O_W
+
+       Starting with version 1.7.4p4-2.squeeze.6, ssuuddooeeddiitt will not follow
+       symbolic links when opening files unless the _s_u_d_o_e_d_i_t___f_o_l_l_o_w option is
+       enabled.  The FOLLOW and NOFOLLOW tags override the value of
+       _s_u_d_o_e_d_i_t___f_o_l_l_o_w and can be used to permit (or deny) the editing of
+       symbolic links on a per-command basis.  These tags are only effective
+       for the _s_u_d_o_e_d_i_t command and are ignored for all other commands.
+
        _L_O_G___I_N_P_U_T _a_n_d _N_O_L_O_G___I_N_P_U_T
 
        These tags override the value of the _l_o_g___i_n_p_u_t option on a per-command
@@ -455,17 +390,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
        ?       Matches any single character.
 
-
-
-1.7.4                     July 21, 2010                         7
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        [...]   Matches any character in the specified range.
 
        [!...]  Matches any character nnoott in the specified range.
@@ -521,17 +445,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
        #include /etc/sudoers.%h
 
-
-
-1.7.4                     July 21, 2010                         8
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        will cause ssuuddoo to include the file _/_e_t_c_/_s_u_d_o_e_r_s_._x_e_r_x_e_s.
 
        The #includedir directive can be used to create a _s_u_d_o_._d directory that
@@ -585,19 +498,6 @@ SUDOERS(4)             MAINTENANCE COMMA
        used as part of a word (e.g. a user name or host name): '@', '!', '=',
        ':', ',', '(', ')', '\'.
 
-
-
-
-
-1.7.4                     July 21, 2010                         9
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
 SSUUDDOOEERRSS OOPPTTIIOONNSS
        ssuuddoo's behavior can be modified by Default_Entry lines, as explained
        earlier.  A list of all supported Defaults parameters, grouped by type,
@@ -652,18 +552,6 @@ SSUUDDOOEERRSS OOPPTTIIOONN
                        variable.  This flag is _o_n by default.
 
        fast_glob       Normally, ssuuddoo uses the _g_l_o_b(3) function to do shell-
-
-
-
-1.7.4                     July 21, 2010                        10
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                        style globbing when matching path names.  However,
                        since it accesses the file system, _g_l_o_b(3) can take a
                        long time to complete for some patterns, especially
@@ -718,18 +606,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                        incorrect password.  This flag is _o_f_f by default.
 
        log_host        If set, the host name will be logged in the (non-
-
-
-
-1.7.4                     July 21, 2010                        11
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                        syslog) ssuuddoo log file.  This flag is _o_f_f by default.
 
        log_year        If set, the four-digit year will be logged in the (non-
@@ -784,18 +660,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                        The password prompt specified by _p_a_s_s_p_r_o_m_p_t will
                        normally only be used if the password prompt provided
                        by systems such as PAM matches the string "Password:".
-
-
-
-1.7.4                     July 21, 2010                        12
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                        If _p_a_s_s_p_r_o_m_p_t___o_v_e_r_r_i_d_e is set, _p_a_s_s_p_r_o_m_p_t will always
                        be used.  This flag is _o_f_f by default.
 
@@ -850,18 +714,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                        disabled.  This flag is _o_f_f by default.
 
        set_logname     Normally, ssuuddoo will set the LOGNAME, USER and USERNAME
-
-
-
-1.7.4                     July 21, 2010                        13
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                        environment variables to the name of the target user
                        (usually root unless the --uu option is given).  However,
                        since some programs (including the RCS revision control
@@ -898,6 +750,15 @@ SUDOERS(4)             MAINTENANCE COMMA
                        with either the _s_e_t_r_e_u_i_d_(_) or _s_e_t_r_e_s_u_i_d_(_) function.
                        This flag is _o_f_f by default.
 
+       sudoedit_follow By default, ssuuddooeeddiitt will not follow symbolic links
+                       when opening files.  The _s_u_d_o_e_d_i_t___f_o_l_l_o_w option can be
+                       enabled to allow ssuuddooeeddiitt to open symbolic links.  It
+                       may be overridden on a per-command basis by the _F_O_L_L_O_W
+                       and _N_O_F_O_L_L_O_W tags.  This flag is _o_f_f by default.
+
+                       This setting is only supported by version
+                       1.7.4p4-2.squeeze.6 or higher.
+
        targetpw        If set, ssuuddoo will prompt for the password of the user
                        specified by the --uu option (defaults to root) instead
                        of the password of the invoking user.  In addition, the
@@ -916,18 +777,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                        a unique session ID that is included in the normal ssuuddoo
                        log line, prefixed with _T_S_I_D_=.
 
-
-
-
-1.7.4                     July 21, 2010                        14
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        log_output      If set, ssuuddoo will run the command in a _p_s_e_u_d_o _t_t_y and
                        log all output that is sent to the screen, similar to
                        the _s_c_r_i_p_t(1) command.  If the standard output or
@@ -982,18 +831,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
        closefrom       Before it executes a command, ssuuddoo will close all open
                        file descriptors other than standard input, standard
-
-
-
-1.7.4                     July 21, 2010                        15
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                        output and standard error (ie: file descriptors 0-2).
                        The _c_l_o_s_e_f_r_o_m option can be used to specify a different
                        file descriptor at which to start closing.  The default
@@ -1048,18 +885,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                        possible, or the first editor in the list that exists
                        and is executable.  The default is "vi".
 
-
-
-
-1.7.4                     July 21, 2010                        16
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        mailsub         Subject of the mail sent to the _m_a_i_l_t_o user. The escape
                        %h will expand to the host name of the machine.
                        Default is *** SECURITY information for %h ***.
@@ -1114,18 +939,6 @@ SUDOERS(4)             MAINTENANCE COMMA
        syslog_goodpri  Syslog priority to use when user authenticates
                        successfully.  Defaults to notice.
 
-
-
-
-1.7.4                     July 21, 2010                        17
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        sudoers_locale  Locale to use when parsing the sudoers file.  Note that
                        changing the locale may affect how sudoers is
                        interpreted.  Defaults to "C".
@@ -1180,18 +993,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                    Negating the option results in a value of _n_e_v_e_r being used.
                    The default value is _o_n_c_e.
 
-
-
-
-1.7.4                     July 21, 2010                        18
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        lecture_file
                    Path to a file containing an alternate ssuuddoo lecture that
                    will be used in place of the standard lecture if the named
@@ -1246,18 +1047,6 @@ SUDOERS(4)             MAINTENANCE COMMA
                    option is not set by default.
 
        syslog      Syslog facility if syslog is being used for logging (negate
-
-
-
-1.7.4                     July 21, 2010                        19
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                    to disable syslog logging).  Defaults to auth.
 
        verifypw    This option controls when a password will be required when
@@ -1285,21 +1074,41 @@ SUDOERS(4)             MAINTENANCE COMMA
        LLiissttss tthhaatt ccaann bbee uusseedd iinn aa bboooolleeaann ccoonntteexxtt:
 
        env_check       Environment variables to be removed from the user's
-                       environment if the variable's value contains % or /
+                       environment unless they are considered ``safe''.  For
+                       all variables except TZ, ``safe'' means that the
+                       variable's value does not contain any % or /
                        characters.  This can be used to guard against printf-
                        style format vulnerabilities in poorly-written
-                       programs.  The argument may be a double-quoted, space-
-                       separated list or a single value without double-quotes.
-                       The list can be replaced, added to, deleted from, or
-                       disabled by using the =, +=, -=, and ! operators
-                       respectively.  Regardless of whether the env_reset
-                       option is enabled or disabled, variables specified by
-                       env_check will be preserved in the environment if they
-                       pass the aforementioned check.  The default list of
-                       environment variables to check is displayed when ssuuddoo
-                       is run by root with the _-_V option.
+                       programs.  The TZ variable is considered unsafe if any
+                       of the following are true:
+
+                       +o   It consists of a fully-qualified path name,
+                           optionally prefixed with a colon (':'), that does
+                           not match the location of the _z_o_n_e_i_n_f_o directory.
+
+                       +o   It contains a _._. path element.
+
+                       +o   It contains white space or non-printable
+                           characters.
+
+                       +o   It is longer than the value of PATH_MAX.
+
+                       The argument may be a double-quoted, space-separated
+                       list or a single value without double-quotes.  The list
+                       can be replaced, added to, deleted from, or disabled by
+                       using the =, +=, -=, and ! operators respectively.
+                       Regardless of whether the env_reset option is enabled
+                       or disabled, variables specified by env_check will be
+                       preserved in the environment if they pass the
+                       aforementioned check.  The default list of environment
+                       variables to check is displayed when ssuuddoo is run by
+                       root with the _-_V option.
+
+       env_delete      Not effective due to security issues: only variables
+                       listed in _e_n_v___k_e_e_p or _e_n_v___c_h_e_c_k can be passed through
+                       ssuuddoo!
 
-       env_delete      Environment variables to be removed from the user's
+                       Environment variables to be removed from the user's
                        environment when the _e_n_v___r_e_s_e_t option is not in effect.
                        The argument may be a double-quoted, space-separated
                        list or a single value without double-quotes.  The list
@@ -1312,27 +1121,14 @@ SUDOERS(4)             MAINTENANCE COMMA
                        any setuid process (such as ssuuddoo).
 
        env_keep        Environment variables to be preserved in the user's
-
-
-
-1.7.4                     July 21, 2010                        20
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
-                       environment when the _e_n_v___r_e_s_e_t option is in effect.
-                       This allows fine-grained control over the environment
-                       ssuuddoo-spawned processes will receive.  The argument may
-                       be a double-quoted, space-separated list or a single
-                       value without double-quotes.  The list can be replaced,
-                       added to, deleted from, or disabled by using the =, +=,
-                       -=, and ! operators respectively.  The default list of
-                       variables to keep is displayed when ssuuddoo is run by root
-                       with the _-_V option.
+                       environment.  This allows fine-grained control over the
+                       environment ssuuddoo-spawned processes will receive.  The
+                       argument may be a double-quoted, space-separated list
+                       or a single value without double-quotes.  The list can
+                       be replaced, added to, deleted from, or disabled by
+                       using the =, +=, -=, and ! operators respectively.  The
+                       default list of variables to keep is displayed when
+                       ssuuddoo is run by root with the _-_V option.
 
        When logging via _s_y_s_l_o_g(3), ssuuddoo accepts the following values for the
        syslog facility (the value of the ssyysslloogg Parameter): aauutthhpprriivv (if your
@@ -1378,18 +1174,6 @@ EEXXAAMMPPLLEESS
         Host_Alias     CUNETS = 128.138.0.0/255.255.0.0
         Host_Alias     CSNETS = 128.138.243.0, 128.138.204.0/24, 128.138.242.0
         Host_Alias     SERVERS = master, mail, www, ns
-
-
-
-1.7.4                     July 21, 2010                        21
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
         Host_Alias     CDROM = orion, perseus, hercules
 
         # Cmnd alias specification
@@ -1445,17 +1229,6 @@ SUDOERS(4)             MAINTENANCE COMMA
        any host but they must authenticate themselves first (since the entry
        lacks the NOPASSWD tag).
 
-
-
-1.7.4                     July 21, 2010                        22
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
         jack           CSNETS = ALL
 
        The user jjaacckk may run any command on the machines in the _C_S_N_E_T_S alias
@@ -1510,18 +1283,6 @@ SUDOERS(4)             MAINTENANCE COMMA
 
         fred           ALL = (DB) NOPASSWD: ALL
 
-
-
-
-1.7.4                     July 21, 2010                        23
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        The user ffrreedd can run commands as any user in the _D_B Runas_Alias
        (oorraaccllee or ssyybbaassee) without giving a password.
 
@@ -1576,18 +1337,6 @@ SSEECCUURRIITTYY NNOOTTEESS
        Doesn't really prevent bbiillll from running the commands listed in _S_U or
        _S_H_E_L_L_S since he can simply copy those commands to a different name, or
        use a shell escape from an editor or other program.  Therefore, these
-
-
-
-1.7.4                     July 21, 2010                        24
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
        kind of restrictions should be considered advisory at best (and
        reinforced by policy).
 
@@ -1642,18 +1391,6 @@ PPRREEVVEENNTTIINNGG SSHHEE
 
                      File containing dummy exec functions:
 
-
-
-
-1.7.4                     July 21, 2010                        25
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
                  then ssuuddoo may be able to replace the exec family of functions
                  in the standard library with its own that simply return an
                  error.  Unfortunately, there is no foolproof way to know
@@ -1707,19 +1444,6 @@ SSUUPPPPOORRTT
        http://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
        the archives.
 
-
-
-
-
-1.7.4                     July 21, 2010                        26
-
-
-
-
-
-SUDOERS(4)             MAINTENANCE COMMANDS            SUDOERS(4)
-
-
 DDIISSCCLLAAIIMMEERR
        ssuuddoo is provided ``AS IS'' and any express or implied warranties,
        including, but not limited to, the implied warranties of
@@ -1729,54 +1453,4 @@ DDIISSCCLLAAIIMMEERR
 
 
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-1.7.4                     July 21, 2010                        27
-
-
+1.7.4p4                        January  5, 2016                     SUDOERS(4)
--- a/sudoers.man.in
+++ b/sudoers.man.in
@@ -148,7 +148,7 @@
 .\" ========================================================================
 .\"
 .IX Title "SUDOERS @mansectform@"
-.TH SUDOERS @mansectform@ "July 21, 2010" "1.7.4" "MAINTENANCE COMMANDS"
+.TH SUDOERS @mansectform@ "January  5, 2016" "1.7.4p4" "MAINTENANCE COMMANDS"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
@@ -421,8 +421,8 @@ See \*(L"\s-1SUDOERS\s0 \s-1OPTIONS\s0\*
 \&
 \}
 \& Tag_Spec ::= (\*(AqNOPASSWD:\*(Aq | \*(AqPASSWD:\*(Aq | \*(AqNOEXEC:\*(Aq | \*(AqEXEC:\*(Aq |
-\&               \*(AqSETENV:\*(Aq | \*(AqNOSETENV:\*(Aq | \*(AqLOG_INPUT:\*(Aq | \*(AqNOLOG_INPUT:\*(Aq |
-\&               \*(AqLOG_OUTPUT:\*(Aq | \*(AqNOLOG_OUTPUT:\*(Aq)
+\&              \*(AqSETENV:\*(Aq | \*(AqNOSETENV:\*(Aq | \*(AqFOLLOW:\*(Aq | \*(AqNOFOLLOW\*(Aq |
+\&              \*(AqLOG_INPUT:\*(Aq | \*(AqNOLOG_INPUT:\*(Aq | \*(AqLOG_OUTPUT:\*(Aq | \*(AqNOLOG_OUTPUT:\*(Aq)
 .Ve
 .PP
 A \fBuser specification\fR determines which commands a user may run
@@ -502,7 +502,8 @@ however, will supercede the values in \f
 .IX Subsection "Tag_Spec"
 A command may have zero or more tags associated with it.  There are
 eight possible tag values, \f(CW\*(C`NOPASSWD\*(C'\fR, \f(CW\*(C`PASSWD\*(C'\fR, \f(CW\*(C`NOEXEC\*(C'\fR,
-\&\f(CW\*(C`EXEC\*(C'\fR, \f(CW\*(C`SETENV\*(C'\fR, \f(CW\*(C`NOSETENV\*(C'\fR, \f(CW\*(C`LOG_INPUT\*(C'\fR, \f(CW\*(C`NOLOG_INPUT\*(C'\fR,
+\&\f(CW\*(C`EXEC\*(C'\fR, \f(CW\*(C`SETENV\*(C'\fR, \f(CW\*(C`NOSETENV\*(C'\fR, \f(CW\*(C`FOLLOW\*(C'\fR, \f(CW\*(C`NOFOLLOW\*(C'\fR, \f(CW\*(C`LOG_INPUT\*(C'\fR,
+\&\f(CW\*(C`NOLOG_INPUT\*(C'\fR,
 \&\f(CW\*(C`LOG_OUTPUT\*(C'\fR and \f(CW\*(C`NOLOG_OUTPUT\*(C'\fR.  Once a tag is set on a \f(CW\*(C`Cmnd\*(C'\fR,
 subsequent \f(CW\*(C`Cmnd\*(C'\fRs in the \f(CW\*(C`Cmnd_Spec_List\*(C'\fR, inherit the tag unless
 it is overridden by the opposite tag (i.e.: \f(CW\*(C`PASSWD\*(C'\fR overrides
@@ -570,6 +571,16 @@ variables in this manner.  If the comman
 \&\f(CW\*(C`SETENV\*(C'\fR tag is implied for that command; this default may
 be overridden by use of the \f(CW\*(C`NOSETENV\*(C'\fR tag.
 .PP
+\fI\s-1FOLLOW\s0 and \s-1NOFOLLOW\s0\fR
+.IX Subsection "FOLLOW and NOFOLLOW"
+.PP
+Starting with version 1.7.4p4\-2.squeeze.6, \fBsudoedit\fR will not follow symbolic
+links when opening files unless the \fIsudoedit_follow\fR option is
+enabled.  The \f(CW\*(C`FOLLOW\*(C'\fR and \f(CW\*(C`NOFOLLOW\*(C'\fR tags override the value of
+\&\fIsudoedit_follow\fR and can be used to permit (or deny) the editing of
+symbolic links on a per-command basis.  These tags are only effective
+for the \fIsudoedit\fR command and are ignored for all other commands.
+.PP
 \fI\s-1LOG_INPUT\s0 and \s-1NOLOG_INPUT\s0\fR
 .IX Subsection "LOG_INPUT and NOLOG_INPUT"
 .PP
@@ -974,6 +985,15 @@ wrapper.  This can be useful on systems
 dangerous functionality when a program is run setuid.  This option
 is only effective on systems with either the \fIsetreuid()\fR or \fIsetresuid()\fR
 function.  This flag is \fIoff\fR by default.
+.IP "sudoedit_follow" 16
+.IX Item "sudoedit_follow"
+By default, \fBsudoedit\fR will not follow symbolic links when opening
+files.  The \fIsudoedit_follow\fR option can be enabled to allow
+\&\fBsudoedit\fR to open symbolic links.  It may be overridden on a
+per-command basis by the \fI\s-1FOLLOW\s0\fR and \fI\s-1NOFOLLOW\s0\fR tags.  This flag
+is \fIoff\fR by default.
+.Sp
+This setting is only supported by version 1.7.4p4\-2.squeeze.6 or higher.
 .IP "targetpw" 16
 .IX Item "targetpw"
 If set, \fBsudo\fR will prompt for the password of the user specified
