Description: CVE-2015-5602: Fix directory writability checks for sudoedit.
Bug: https://bugzilla.sudo.ws/show_bug.cgi?id=707
Bug-Debian: https://bugs.debian.org/804149
Author: Ben Hutchings <ben@decadent.org.uk>
Forwarded: https://bugzilla.sudo.ws/show_bug.cgi?id=707#c11

This prevents access to a file in a writable directory *or* accessed
through a symlink in a writable directory.

--- a/src/sudo_edit.c
+++ b/src/sudo_edit.c
@@ -173,46 +173,52 @@ dir_is_writable(struct stat *sb, uid_t u
 static int
 sudo_edit_open_nonwritable(char *path, int oflags, mode_t mode)
 {
-    char *base, *dir;
+#ifndef O_NOFOLLOW
+    error(1, "%s: Can't check writability without O_NOFOLLOW", __func__);
+#else
+    char *sep;
     struct stat sb;
-    int dfd, fd;
+    int dfd, subdfd, fd;
+    int is_writable;
     debug_decl(sudo_edit_open_nonwritable, SUDO_DEBUG_EDIT)
 
-    base = strrchr(path, '/');
-    if (base != NULL) {
-	*base++ = '\0';
-	dir = path;
+    if (path[0] == '/') {
+	dfd = open("/", O_RDONLY);
+	++path;
     } else {
-	base = path;
-	dir = ".";
-    }
-#ifdef O_PATH
-    if ((dfd = open(dir, O_PATH)) != -1) {
-	/* Linux kernels < 3.6 can't do fstat on O_PATH fds. */
-	if (fstat(dfd, &sb) == -1) {
-	    close(dfd);
-	    dfd = open(dir, O_RDONLY);
-	    if (fstat(dfd, &sb) == -1) {
-		close(dfd);
-		dfd = -1;
-	    }
-	}
+	/* XXX It doesn't make any sense to allow editing relative paths */
+	dfd = open(".", O_RDONLY);
     }
-#else
-    if ((dfd = open(dir, O_RDONLY)) != -1) {
+    if (dfd == -1)
+	debug_return_int(-1);
+
+    for (;;) {
+	/*
+	 * Look up one component at a time, avoiding symbolic links in
+	 * writable directories
+	 */
+
 	if (fstat(dfd, &sb) == -1) {
 	    close(dfd);
-	    dfd = -1;
+	    debug_return_int(-1);
 	}
+	is_writable = dir_is_writable(&sb, user_details.uid, user_details.gid,
+				      user_details.ngroups, user_details.groups);
+
+	sep = strchr(path, '/');
+	if (sep == NULL)
+	    break;
+	*sep = '\0';
+	subdfd = openat(dfd, path, O_RDONLY | (is_writable ? O_NOFOLLOW : 0), 0);
+	*sep = '/';			/* restore path */
+	close(dfd);
+	if (subdfd == -1)
+	    debug_return_int(-1);
+	path = sep + 1;
+	dfd = subdfd;
     }
-#endif
-    if (base != path)
-	base[-1] = '/';			/* restore path */
-    if (dfd == -1)
-	debug_return_int(-1);
 
-    if (dir_is_writable(&sb, user_details.uid, user_details.gid,
-	user_details.ngroups, user_details.groups)) {
+    if (is_writable) {
 	close(dfd);
 	errno = ENOTDIR;
 	debug_return_int(-1);
@@ -221,6 +227,7 @@ sudo_edit_open_nonwritable(char *path, i
     fd = openat(dfd, path, oflags, mode);
     close(dfd);
     debug_return_int(fd);
+#endif
 }
 
 #ifdef O_NOFOLLOW
